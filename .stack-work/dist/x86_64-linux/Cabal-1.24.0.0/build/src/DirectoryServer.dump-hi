
==================== FINAL INTERFACE ====================
2016-12-10 16:40:43.772868 UTC

interface DFS-0.1.0.0-DxCIFRvwoPlEaq2HpZrZms:DirectoryServer 8001
  interface hash: f05253f357cefe913af9a5e26ad87443
  ABI hash: 434245136a03b991be205732bd21b119
  export-list hash: 3772a31cf408d2ab93c5b09a95f175e6
  orphan hash: 4a8693f76bd7c030c1a0ec9029adc0b6
  flag hash: f6e21994be8aecbadae44ec12bd5520e
  sig of: Nothing
  used TH splices: False
  where
exports:
  DirectoryServer.addFilemapping
  DirectoryServer.addFileserver
  DirectoryServer.clientHandler
  DirectoryServer.clientconnectHandler
  DirectoryServer.decrementTVar
  DirectoryServer.dirrun
  DirectoryServer.downloadCommand
  DirectoryServer.downloadmsg
  DirectoryServer.getFilemappingaddress
  DirectoryServer.getFilemappingport
  DirectoryServer.getFilemappingtimestamp
  DirectoryServer.getFilemappinguuid
  DirectoryServer.getFileserveraddress
  DirectoryServer.getFileserverport
  DirectoryServer.heloCommand
  DirectoryServer.incrementFileserverCount
  DirectoryServer.incrementTVar
  DirectoryServer.joinCommand
  DirectoryServer.killCommand
  DirectoryServer.lookupFilemapping
  DirectoryServer.lookupFileserver
  DirectoryServer.mainHandler
  DirectoryServer.maxnumThreads
  DirectoryServer.newDirectoryServer
  DirectoryServer.newFilemapping
  DirectoryServer.newFileserver
  DirectoryServer.returnb
  DirectoryServer.returndata
  DirectoryServer.serverhost
  DirectoryServer.serverport
  DirectoryServer.updateCommand
  DirectoryServer.updatemsg
  DirectoryServer.uploadCommand
  DirectoryServer.uploadmsg
  DirectoryServer.Address
  DirectoryServer.DirectoryServer{DirectoryServer.DirectoryServer address filemappings fileservercount fileservers port}
  DirectoryServer.Filemapping{DirectoryServer.Filemapping fmaddress fmfilename fmport fmtimestamp fmuuid}
  DirectoryServer.Filename
  DirectoryServer.Fileserver{DirectoryServer.Fileserver fsaddress fsport fsuuid}
  DirectoryServer.Port
  DirectoryServer.Timestamp
  DirectoryServer.Uuid
module dependencies: LRUCache
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.0.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.2.6.2@directory-1.2.6.2
                      filepath-1.4.1.0@filepath-1.4.1.0 ghc-prim-0.5.0.0
                      hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G
                      integer-gmp-1.0.0.1
                      network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      psqueues-0.2.2.2@psqueues-0.2.2.2-Abmw1tivvf7JJikDhHX0px
                      random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe
                      split-0.2.3.1@split-0.2.3.1-IJKK4pOCYGKud0jZImZke
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      unix-2.7.2.0@unix-2.7.2.0
                      vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G:Data.Hashable.Generic
         network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network.Socket
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Fusion.Bundle
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector
import  -/  LRUCache d0ed5b15d81b39342163379f43423bfa
  exports: ac2171d780337f4743949b7b1b9261c5
  Handle 0c995a8805dfce3fae5edee009366259
  ioinsert 37de77132b3c0704548a4f7ed93e119e
  iolookup 3d5691fe3612bbc887291f3d272a4223
  newHandle 3c0b9f20f9b509f545192c9d3597a082
import  -/  base-4.9.0.0:Control.Concurrent 98a3a12a2ace3d27758947d9f1041f90
import  -/  base-4.9.0.0:Control.Concurrent.Chan d55a50c16a7726146797e8faa62a516b
import  -/  base-4.9.0.0:Control.Exception 8762ca621bc15a8c1e8e34c703aba1aa
import  -/  base-4.9.0.0:Control.Monad 7767aebfd53f0b584cef2fe66ad3986c
import  -/  base-4.9.0.0:Data.Functor 6fc476505db88d678632a4a838125f13
import  -/  base-4.9.0.0:Data.OldList 0058409f994fb13ae0616e3f1e5b4dae
import  -/  base-4.9.0.0:Data.Word 34db1dae76cf3db02c16aed2b8427443
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.Conc.Sync 800ad52ae188c67fd514a07ba8a64fcc
import  -/  base-4.9.0.0:GHC.List 13d2451194c1c6e53b4f4f07947736dd
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  base-4.9.0.0:System.Environment ee0914a962f5508d0fd404c89ee4999b
import  -/  base-4.9.0.0:System.IO eb1d40aa793a4047069a5023f2ebcfe3
import  -/  base-4.9.0.0:Text.Printf 981db3fab2db52a63576c71c790058bf
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Char8 49426525406a134b63e5a11b574dbd77
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map 24b19ef74cea78e4c18332bed9f0491d
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base 1e8d61dcc59a1a983b27bab6fd6bdcaf
import  -/  directory-1.2.6.2@directory-1.2.6.2:System.Directory f7c57c4a392d1767b38addc37d00ceed
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G:Data.Hashable 71c3081f6f34402a5321988bec1814e7
import  -/  network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network fe4a3a40192a968130a171e8dca1101b
import  -/  network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network.Socket 74f40911ccc642ef529205732bba4073
import  -/  network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network.Socket.ByteString 5df469a3defc2172b49042eabe647e67
import  -/  network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network.Socket.Internal 6670c66c398fead19fd25cb50e6956e6
import  -/  network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network.Socket.Types a21cb2ffc6eaad6f8e6da2810c802283
import  -/  random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe:System.Random 12e582ce6a18ca02c107789bb28c509c
import  -/  split-0.2.3.1@split-0.2.3.1-IJKK4pOCYGKud0jZImZke:Data.List.Split 46e8ab9554123893f27696c65d88e63d
import  -/  split-0.2.3.1@split-0.2.3.1-IJKK4pOCYGKud0jZImZke:Data.List.Split.Internals 91fdfee0190d7e76d57defeef91ab9d3
import  -/  stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Concurrent.STM fd77bc755b79c492176ed8b0d0d3f933
import  -/  stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Concurrent.STM.TVar 862fffea7e508d7927194033396aaee0
import  -/  time-1.6.0.1@time-1.6.0.1:Data.Time 11aa6bb0881cf13119ff057ae5c21663
import  -/  time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime 68fe3dbb75b960bc232b90272611b9d9
ba4ec6ebb18a815b04df89cadb7854ac
  $s$fPrintfArg[]_$s$fPrintfArg[]_$cparseFormat ::
    [GHC.Types.Char] -> Text.Printf.ModifierParser
  {- Arity: 2, Strictness: <L,A><S,1*U>m,
     Unfolding: InlineRule (2, True, False)
                (\ (ds1 :: [GHC.Types.Char]) (ds2 :: [GHC.Types.Char]) ->
                 case ds2 of wild {
                   [] -> Text.Printf.errorShortFormat @ Text.Printf.FormatParse
                   : c1 cs
                   -> Text.Printf.FormatParse
                        (GHC.Types.[] @ GHC.Types.Char)
                        c1
                        cs }) -}
fecca500cd5475e2fb077b06685bdf86
  $sinsert_$sgo1 ::
    DirectoryServer.Uuid
    -> a1
    -> Data.Map.Base.Map DirectoryServer.Uuid a1
    -> Data.Map.Base.Map DirectoryServer.Uuid a1
  {- Arity: 3, Strictness: <S,1*U(U)><L,U><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (w :: DirectoryServer.Uuid)
                   (w1 :: a1)
                   (w2 :: Data.Map.Base.Map DirectoryServer.Uuid a1) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 DirectoryServer.$w$sgo10 @ a1 ww1 w1 w2 }) -}
c7bc52cdeaf9d1267e94dc0d9a1140f0
  $sinsert_$sgo10 ::
    DirectoryServer.Filename
    -> a1
    -> Data.Map.Base.Map DirectoryServer.Filename a1
    -> Data.Map.Base.Map DirectoryServer.Filename a1
  {- Arity: 3, Strictness: <S,1*U><L,U><S,1*U> -}
7c0cb5080f34781b297440a0d8ede354
  $slookup1 ::
    DirectoryServer.Filename
    -> Data.Map.Base.Map DirectoryServer.Filename a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
f3b7c338943dcfb96b3abe2e4e7f8d9b
  $slookup3 ::
    DirectoryServer.Uuid
    -> Data.Map.Base.Map DirectoryServer.Uuid a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U(U)><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (w :: DirectoryServer.Uuid)
                   (w1 :: Data.Map.Base.Map DirectoryServer.Uuid a) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 DirectoryServer.$wpoly_go10 @ a ww1 w1 }) -}
5ee94e60e266a7e216bbd80654300c65
  $sprintf3 :: () GHC.Types.~~ ()
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq# @ * @ * @ () @ () @~ <()>_N) -}
9084a9c6a0be0552281c9f14a230aa59
  $tc'DirectoryServer :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9198053608381035287##
                   4889748921004221518##
                   DirectoryServer.$trModule
                   DirectoryServer.$tc'DirectoryServer1) -}
b7ba0bd686d7ef1da04489bbdb5efa6f
  $tc'DirectoryServer1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'DirectoryServer"#) -}
5321cf641c6ee509b8fd7516656ffa10
  $tc'Filemapping :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15840805996041641482##
                   13483204015561239220##
                   DirectoryServer.$trModule
                   DirectoryServer.$tc'Filemapping1) -}
0499b37f607b381b9ab83fdd8116e3e7
  $tc'Filemapping1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Filemapping"#) -}
19243a2d91a73800a456405658898a82
  $tc'Fileserver :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7220473584598006052##
                   3404895534310062485##
                   DirectoryServer.$trModule
                   DirectoryServer.$tc'Fileserver1) -}
5a112eaa4e7655d37c0ef76fe3f1fec2
  $tc'Fileserver1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Fileserver"#) -}
ab47877d06ae7abc452cf7f7518c2f1d
  $tcDirectoryServer :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8571902204658543550##
                   5122937713733068351##
                   DirectoryServer.$trModule
                   DirectoryServer.$trModule1) -}
d4554fb99523ef78a4467ce3caf33a0c
  $tcFilemapping :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8172723771399994466##
                   3076245257882758659##
                   DirectoryServer.$trModule
                   DirectoryServer.$tcFilemapping1) -}
47dba2f290c7d9c3009d33c8750b78c0
  $tcFilemapping1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Filemapping"#) -}
b48ed42a671b536d090202bfa8455529
  $tcFileserver :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1870559532454340265##
                   5686126912981661378##
                   DirectoryServer.$trModule
                   DirectoryServer.$tcFileserver1) -}
8e0501e868f2b65fab3130ad2d5922f9
  $tcFileserver1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Fileserver"#) -}
a9e6dfe989cf910a7457e319c04f63c0
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   DirectoryServer.$trModule2
                   DirectoryServer.$trModule1) -}
0aee4171e7d8fa98f1efc8eeb2a31a3b
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "DirectoryServer"#) -}
796be4bc23a88a15adae2c9bf3bb76c2
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "DFS-0.1.0.0-DxCIFRvwoPlEaq2HpZrZms"#) -}
a19d6ed14db0a69d5b2a61bbc69bb898
  $w$sgo10 ::
    GHC.Prim.Int#
    -> a1
    -> Data.Map.Base.Map DirectoryServer.Uuid a1
    -> Data.Map.Base.Map DirectoryServer.Uuid a1
  {- Arity: 3, Strictness: <L,U><L,U><S,1*U>, Inline: [0] -}
da96ae04793bdbbf96d451f4a86194b0
  $wclientHandler ::
    Network.Socket.Types.Socket
    -> Control.Concurrent.Chan.Chan GHC.Base.String
    -> GHC.Base.String
    -> GHC.Conc.Sync.TVar
         (Data.Map.Base.Map
            DirectoryServer.Filename DirectoryServer.Filemapping)
    -> GHC.Conc.Sync.TVar
         (Data.Map.Base.Map DirectoryServer.Uuid DirectoryServer.Fileserver)
    -> GHC.Conc.Sync.TVar GHC.Types.Int
    -> LRUCache.Handle GHC.Base.String GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 8,
     Strictness: <L,U(U(U),A,A,A,A)><L,U(U,U)><L,U><L,U(U)><L,U(U)><L,U(U)><L,U(U)><S,U>,
     Inline: [0] -}
a4abc500b5022aa357f8428ca67a5c1e
  $wclientconnectHandler ::
    GHC.Prim.Int#
    -> Network.Socket.Types.Family
    -> Network.Socket.Types.SocketType
    -> Network.Socket.Types.ProtocolNumber
    -> GHC.Prim.MVar#
         GHC.Prim.RealWorld Network.Socket.Types.SocketStatus
    -> Control.Concurrent.Chan.Chan GHC.Base.String
    -> GHC.Conc.Sync.TVar GHC.Types.Int
    -> DirectoryServer.DirectoryServer
    -> LRUCache.Handle GHC.Base.String GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 10,
     Strictness: <S,U><S,U><L,U><L,U(U)><S,U><L,U(U,U)><L,U(U)><L,U(A,U,U(U),U(U),U(U))><L,U(U)><S,U>,
     Inline: [0] -}
22efae9ac72e6e27efb74e77ba3aa985
  $wdownloadCommand ::
    Network.Socket.Types.Socket
    -> GHC.Conc.Sync.TVar
         (Data.Map.Base.Map
            DirectoryServer.Filename DirectoryServer.Filemapping)
    -> GHC.Base.String
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld (LRUCache.Cache GHC.Base.String GHC.Base.String)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <L,U(U(U),A,A,A,A)><L,1*U(U)><L,U><S,U><S,U>,
     Inline: [0] -}
5f7c4ba8c65ab62dbf859bbda870b79e
  $wdownloadmsg ::
    GHC.Base.String
    -> Network.Socket.Types.Socket
    -> LRUCache.Handle GHC.Base.String GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,U><L,1*U(U(U),A,A,A,A)><L,1*U(U)><S,U>,
     Inline: [0] -}
25e9d9385330e6b8d65d6c9e6f197728
  $wheloCommand ::
    Foreign.C.Types.CInt
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,U(U)><L,1*U><L,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Foreign.C.Types.CInt)
                   (ww1 :: GHC.Base.String)
                   (w :: GHC.Base.String)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 let {
                   cs :: [GHC.Types.Char]
                   = GHC.CString.unpackAppendCString#
                       "HELO "#
                       (GHC.Base.++
                          @ GHC.Types.Char
                          w
                          (GHC.CString.unpackAppendCString#
                             "\n\
                             \IP:192.168.6.129\n\
                             \Port:"#
                             (GHC.Base.++ @ GHC.Types.Char ww1 DirectoryServer.heloCommand2)))
                 } in
                 case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww2 { DEFAULT ->
                 case Data.ByteString.Internal.$wunsafePackLenChars
                        ww2
                        cs of ww6 { Data.ByteString.Internal.PS ww7 ww8 ww9 ww10 ->
                 case Network.Socket.ByteString.$wsend
                        ww
                        ww7
                        ww8
                        ww9
                        ww10
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, GHC.Tuple.() #) } } }) -}
6ece8f84d131f3d59590123c6ba77b6a
  $wjoinCommand ::
    Foreign.C.Types.CInt
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld
         (Data.Map.Base.Map DirectoryServer.Uuid DirectoryServer.Fileserver)
    -> GHC.Prim.TVar# GHC.Prim.RealWorld GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5, Strictness: <L,U(U)><S,U><S,U><L,U><S,U>,
     Inline: [0] -}
1588bf61cf108d1b89851685b1aa4b33
  $wkillCommand ::
    Control.Concurrent.Chan.Chan GHC.Base.String
    -> Foreign.C.Types.CInt
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,1*U(A,U)><L,U(U)><S,U>, Inline: [0],
     Unfolding: (\ (w :: Control.Concurrent.Chan.Chan GHC.Base.String)
                   (ww :: Foreign.C.Types.CInt)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case DirectoryServer.killCommand3 of ww6 { Data.ByteString.Internal.PS ww7 ww8 ww9 ww10 ->
                 case Network.Socket.ByteString.$wsend
                        ww
                        ww7
                        ww8
                        ww9
                        ww10
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 Control.Concurrent.Chan.writeChan1
                   @ GHC.Base.String
                   w
                   DirectoryServer.killCommand2
                   ipv } }) -}
a510dd55962488b0dbc562a1baf693a1
  $wmainHandler ::
    GHC.Prim.MVar#
      GHC.Prim.RealWorld (Control.Concurrent.Chan.Stream GHC.Base.String)
    -> GHC.Prim.MVar#
         GHC.Prim.RealWorld (Control.Concurrent.Chan.Stream GHC.Base.String)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <S,U><S,U><S,U>, Inline: [0] -}
779e38b297684879fa8d3e912dd4600c
  $wpoly_go10 ::
    GHC.Prim.Int#
    -> Data.Map.Base.Map DirectoryServer.Uuid a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U>, Inline: [0] -}
b0873549074a4ee3c04afeda8458e471
  $wreturndata ::
    GHC.Base.String
    -> Foreign.C.Types.CInt
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,1*U><L,U(U)><L,1*U><S,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.Base.String)
                   (ww :: Foreign.C.Types.CInt)
                   (w1 :: GHC.Base.String)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 let {
                   cs :: [GHC.Types.Char]
                   = GHC.CString.unpackAppendCString#
                       "DOWNLOAD: "#
                       (GHC.Base.++
                          @ GHC.Types.Char
                          w
                          (GHC.CString.unpackAppendCString#
                             "\\nDATA: "#
                             (GHC.Base.++ @ GHC.Types.Char w1 DirectoryServer.returndata2)))
                 } in
                 case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww2 { DEFAULT ->
                 case Data.ByteString.Internal.$wunsafePackLenChars
                        ww2
                        cs of ww6 { Data.ByteString.Internal.PS ww7 ww8 ww9 ww10 ->
                 case Network.Socket.ByteString.$wsend
                        ww
                        ww7
                        ww8
                        ww9
                        ww10
                        w2 of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, GHC.Tuple.() #) } } }) -}
c60f6607fb47e4e5fbc248cdac48c905
  $wupdateCommand ::
    Foreign.C.Types.CInt
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld
         (Data.Map.Base.Map
            DirectoryServer.Filename DirectoryServer.Filemapping)
    -> GHC.Conc.Sync.TVar
         (Data.Map.Base.Map DirectoryServer.Uuid DirectoryServer.Fileserver)
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5, Strictness: <L,U(U)><S,U><L,1*U(U)><L,U><S,U>,
     Inline: [0] -}
264a6575ee41cb3371b6d04fa48fc63f
  $wupdatemsg ::
    GHC.Base.String
    -> GHC.Base.String
    -> DirectoryServer.Fileserver
    -> DirectoryServer.DirectoryServer
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <L,1*U><L,1*U><L,1*U(A,A,1*U)><S,1*H><S,U>,
     Inline: [0] -}
ae4f05583d88221cc60ebd3f0991abc3
  $wuploadCommand ::
    Network.Socket.Types.Socket
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld
         (Data.Map.Base.Map
            DirectoryServer.Filename DirectoryServer.Filemapping)
    -> GHC.Conc.Sync.TVar
         (Data.Map.Base.Map DirectoryServer.Uuid DirectoryServer.Fileserver)
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <L,1*U(U(U),A,A,A,A)><S,U><L,U(U)><L,U><S,U>,
     Inline: [0] -}
91b8d05f5b2a8f9e342f9e3d807a4d9d
  $wuploadmsg ::
    GHC.Base.String
    -> GHC.Base.String
    -> DirectoryServer.Fileserver
    -> DirectoryServer.DirectoryServer
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <L,1*U><L,1*U><L,1*U(A,A,1*U)><S,1*H><S,U>,
     Inline: [0] -}
1517ff1afd87f541285c4ca6381ded03
  type Address = GHC.Base.String
46a878d3892392cf9dadaf33c346cbd8
  data DirectoryServer
    = DirectoryServer {address :: GHC.Base.String,
                       port :: GHC.Base.String,
                       filemappings :: GHC.Conc.Sync.TVar
                                         (Data.Map.Base.Map
                                            DirectoryServer.Filename DirectoryServer.Filemapping),
                       fileservers :: GHC.Conc.Sync.TVar
                                        (Data.Map.Base.Map
                                           DirectoryServer.Uuid DirectoryServer.Fileserver),
                       fileservercount :: GHC.Conc.Sync.TVar GHC.Types.Int}
da955b1f66d09e6bf9fbf45932fd4648
  data Filemapping
    = Filemapping {fmfilename :: DirectoryServer.Filename,
                   fmuuid :: DirectoryServer.Uuid,
                   fmaddress :: DirectoryServer.Address,
                   fmport :: DirectoryServer.Port,
                   fmtimestamp :: DirectoryServer.Timestamp}
5fa87040cca56c9ed35add5b4b3baf20
  type Filename = GHC.Base.String
e05e2a0b28227955e16cc4a01c5c0f24
  data Fileserver
    = Fileserver {fsuuid :: DirectoryServer.Uuid,
                  fsaddress :: Network.Socket.HostName,
                  fsport :: DirectoryServer.Port}
bfe3f63d2da1812139a1005c1403f482
  type Port = GHC.Base.String
e65b21d05499201e5b04cff13633486b
  type Timestamp = GHC.Types.IO GHC.Base.String
6fda9dd286731aa065790c08b1fd2bd7
  type Uuid = GHC.Types.Int
0bcaf67b4521a8fbac91d8951b5fe89b
  addFilemapping ::
    DirectoryServer.DirectoryServer
    -> DirectoryServer.Filename
    -> DirectoryServer.Uuid
    -> DirectoryServer.Address
    -> DirectoryServer.Port
    -> DirectoryServer.Timestamp
    -> GHC.Conc.Sync.STM ()
  {- Arity: 7,
     Strictness: <S(LLS(S)LL),1*U(A,A,1*U(U),A,A)><L,U><L,U><L,U><L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.addFilemapping1
                  `cast`
                (<DirectoryServer.DirectoryServer>_R
                 ->_R <DirectoryServer.Filename>_R
                 ->_R <DirectoryServer.Uuid>_R
                 ->_R <DirectoryServer.Address>_R
                 ->_R <DirectoryServer.Port>_R
                 ->_R <DirectoryServer.Timestamp>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0] <()>_R)) -}
c13f999220505396c9aac323150ef265
  addFilemapping1 ::
    DirectoryServer.DirectoryServer
    -> DirectoryServer.Filename
    -> DirectoryServer.Uuid
    -> DirectoryServer.Address
    -> DirectoryServer.Port
    -> DirectoryServer.Timestamp
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 7,
     Strictness: <S(LLS(S)LL),1*U(A,A,1*U(U),A,A)><L,U><L,U><L,U><L,U><L,U><S,U>,
     Unfolding: InlineRule (7, True, False)
                (\ (ds :: DirectoryServer.DirectoryServer)
                   (filename :: DirectoryServer.Filename)
                   (uuid :: DirectoryServer.Uuid)
                   (fmaddress1 :: DirectoryServer.Address)
                   (fmport1 :: DirectoryServer.Port)
                   (timestamp :: DirectoryServer.Timestamp)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ds of wild { DirectoryServer.DirectoryServer ds1 ds2 ds3 ds4 ds5 ->
                 case ds3 of wild1 { GHC.Conc.Sync.TVar tvar# ->
                 case GHC.Prim.readTVar#
                        @ GHC.Prim.RealWorld
                        @ (Data.Map.Base.Map
                             DirectoryServer.Filename DirectoryServer.Filemapping)
                        tvar#
                        eta of ds6 { (#,#) ipv ipv1 ->
                 case GHC.Prim.writeTVar#
                        @ GHC.Prim.RealWorld
                        @ (Data.Map.Base.Map
                             DirectoryServer.Filename DirectoryServer.Filemapping)
                        tvar#
                        (DirectoryServer.$sinsert_$sgo10
                           @ DirectoryServer.Filemapping
                           filename
                           (DirectoryServer.Filemapping
                              filename
                              uuid
                              fmaddress1
                              fmport1
                              timestamp)
                           ipv1)
                        ipv of s2# { DEFAULT ->
                 (# s2#, GHC.Tuple.() #) } } } }) -}
b14a2bf9b8281474cad456ae0c4ba59c
  addFileserver ::
    DirectoryServer.DirectoryServer
    -> DirectoryServer.Uuid
    -> DirectoryServer.Address
    -> DirectoryServer.Port
    -> GHC.Conc.Sync.STM ()
  {- Arity: 5,
     Strictness: <S(LLLS(S)L),1*U(A,A,A,1*U(U),A)><L,U(U)><L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.addFileserver1
                  `cast`
                (<DirectoryServer.DirectoryServer>_R
                 ->_R <DirectoryServer.Uuid>_R
                 ->_R <DirectoryServer.Address>_R
                 ->_R <DirectoryServer.Port>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0] <()>_R)) -}
342e7cb6890681536ceb77e224d47d04
  addFileserver1 ::
    DirectoryServer.DirectoryServer
    -> DirectoryServer.Uuid
    -> DirectoryServer.Address
    -> DirectoryServer.Port
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <S(LLLS(S)L),1*U(A,A,A,1*U(U),A)><L,U(U)><L,U><L,U><S,U>,
     Unfolding: InlineRule (5, True, False)
                (\ (ds :: DirectoryServer.DirectoryServer)
                   (uuid :: DirectoryServer.Uuid)
                   (fsaddress1 :: DirectoryServer.Address)
                   (fsport1 :: DirectoryServer.Port)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ds of wild { DirectoryServer.DirectoryServer ds1 ds2 ds3 ds4 ds5 ->
                 case ds4 of wild1 { GHC.Conc.Sync.TVar tvar# ->
                 case GHC.Prim.readTVar#
                        @ GHC.Prim.RealWorld
                        @ (Data.Map.Base.Map
                             DirectoryServer.Uuid DirectoryServer.Fileserver)
                        tvar#
                        eta of ds6 { (#,#) ipv ipv1 ->
                 case GHC.Prim.writeTVar#
                        @ GHC.Prim.RealWorld
                        @ (Data.Map.Base.Map
                             DirectoryServer.Uuid DirectoryServer.Fileserver)
                        tvar#
                        (DirectoryServer.$sinsert_$sgo1
                           @ DirectoryServer.Fileserver
                           uuid
                           (DirectoryServer.Fileserver uuid fsaddress1 fsport1)
                           ipv1)
                        ipv of s2# { DEFAULT ->
                 (# s2#, GHC.Tuple.() #) } } } }) -}
1f85f25fd0a0b1aa5115d6dcd9ceb2b2
  address :: DirectoryServer.DirectoryServer -> GHC.Base.String
  RecSel Left DirectoryServer.DirectoryServer
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLLL),1*U(1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.DirectoryServer) ->
                 case ds of wild { DirectoryServer.DirectoryServer ds1 ds2 ds3 ds4 ds5 ->
                 ds1 }) -}
a4ce08e834296a3c6900163d4857b4a0
  clientHandler ::
    Network.Socket.Types.Socket
    -> Control.Concurrent.Chan.Chan GHC.Base.String
    -> DirectoryServer.DirectoryServer
    -> LRUCache.Handle GHC.Base.String GHC.Base.String
    -> GHC.Types.IO ()
  {- Arity: 5,
     Strictness: <L,U(U(U),A,A,A,A)><L,U(U,U)><S,1*U(A,U,U(U),U(U),U(U))><L,U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.clientHandler1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <Control.Concurrent.Chan.Chan GHC.Base.String>_R
                 ->_R <DirectoryServer.DirectoryServer>_R
                 ->_R <LRUCache.Handle GHC.Base.String GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
166c2bf01691d435dc2a6bcfb10e8d59
  clientHandler1 ::
    Network.Socket.Types.Socket
    -> Control.Concurrent.Chan.Chan GHC.Base.String
    -> DirectoryServer.DirectoryServer
    -> LRUCache.Handle GHC.Base.String GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <L,U(U(U),A,A,A,A)><L,U(U,U)><S,1*U(A,U,U(U),U(U),U(U))><L,U(U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: Control.Concurrent.Chan.Chan GHC.Base.String)
                   (w2 :: DirectoryServer.DirectoryServer)
                   (w3 :: LRUCache.Handle GHC.Base.String GHC.Base.String)
                   (w4 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w2 of ww { DirectoryServer.DirectoryServer ww1 ww2 ww3 ww4 ww5 ->
                 DirectoryServer.$wclientHandler w w1 ww2 ww3 ww4 ww5 w3 w4 }) -}
8aeb0a01b659f34c486b92989b91af4b
  clientconnectHandler ::
    Network.Socket.Types.Socket
    -> Control.Concurrent.Chan.Chan GHC.Base.String
    -> GHC.Conc.Sync.TVar GHC.Types.Int
    -> DirectoryServer.DirectoryServer
    -> LRUCache.Handle GHC.Base.String GHC.Base.String
    -> GHC.Types.IO ()
  {- Arity: 6,
     Strictness: <S(S(S)SLLS(S)),1*U(U(U),U,U,U(U),U(U))><L,U(U,U)><L,U(U)><L,U(A,U,U(U),U(U),U(U))><L,U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.clientconnectHandler1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <Control.Concurrent.Chan.Chan GHC.Base.String>_R
                 ->_R <GHC.Conc.Sync.TVar GHC.Types.Int>_R
                 ->_R <DirectoryServer.DirectoryServer>_R
                 ->_R <LRUCache.Handle GHC.Base.String GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
0d54ccbedbb6dc4822147631b3cc206e
  clientconnectHandler1 ::
    Network.Socket.Types.Socket
    -> Control.Concurrent.Chan.Chan GHC.Base.String
    -> GHC.Conc.Sync.TVar GHC.Types.Int
    -> DirectoryServer.DirectoryServer
    -> LRUCache.Handle GHC.Base.String GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 6,
     Strictness: <S(S(S)SLLS(S)),1*U(U(U),U,U,U(U),U(U))><L,U(U,U)><L,U(U)><L,U(A,U,U(U),U(U),U(U))><L,U(U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (6, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: Control.Concurrent.Chan.Chan GHC.Base.String)
                   (w2 :: GHC.Conc.Sync.TVar GHC.Types.Int)
                   (w3 :: DirectoryServer.DirectoryServer)
                   (w4 :: LRUCache.Handle GHC.Base.String GHC.Base.String)
                   (w5 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 case ww1
                        `cast`
                      (Foreign.C.Types.N:CInt[0]) of ww6 { GHC.Int.I32# ww7 ->
                 case ww5 of ww8 { GHC.MVar.MVar ww9 ->
                 DirectoryServer.$wclientconnectHandler
                   ww7
                   ww2
                   ww3
                   ww4
                   ww9
                   w1
                   w2
                   w3
                   w4
                   w5 } } }) -}
bfb875058b9dab77e4df119fa5648eca
  decrementTVar ::
    GHC.Conc.Sync.TVar GHC.Types.Int -> GHC.Conc.Sync.STM ()
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.decrementTVar1
                  `cast`
                (<GHC.Conc.Sync.TVar GHC.Types.Int>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0] <()>_R)) -}
9806572c2069f5d85eb97448ea7870cc
  decrementTVar1 ::
    GHC.Conc.Sync.TVar GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (tv :: GHC.Conc.Sync.TVar GHC.Types.Int)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case tv of wild { GHC.Conc.Sync.TVar tvar# ->
                 case GHC.Prim.readTVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Types.Int
                        tvar#
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Prim.writeTVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Types.Int
                        tvar#
                        (case ipv1 of wild1 { GHC.Types.I# x ->
                         GHC.Types.I# (GHC.Prim.-# x 1#) })
                        ipv of s2# { DEFAULT ->
                 (# s2#, GHC.Tuple.() #) } } }) -}
24ad55b5693bf5cf42b23b5ea51714c2
  dirrun :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.dirrun1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
8e5a9977d045a9840340c2a9f4fac274
  dirrun1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.atomically#
                        @ DirectoryServer.DirectoryServer
                        DirectoryServer.dirrun15
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Network.Socket.getAddrInfo1
                        DirectoryServer.dirrun12
                        (GHC.Base.Nothing @ Network.Socket.HostName)
                        DirectoryServer.dirrun11
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {}
                   : x ds3
                   -> case x of ww { Network.Socket.AddrInfo ww1 ww2 ww3 ww4 ww5 ww6 ->
                      case Network.Socket.$wsocket
                             ww2
                             Network.Socket.Types.Stream
                             0#
                             ipv2 of ds4 { (#,#) ipv4 ipv5 ->
                      case ipv5 of ww7 { Network.Socket.Types.MkSocket ww8 ww9 ww10 ww11 ww12 ->
                      case ww12 of ww13 { GHC.MVar.MVar ww14 ->
                      case Network.Socket.$wbind
                             ww8
                             ww14
                             ww5
                             ipv4 of ds5 { (#,#) ipv6 ipv7 ->
                      case Network.Socket.$wlisten
                             ww8
                             ww14
                             DirectoryServer.dirrun10
                             ipv6 of ds6 { (#,#) ipv8 ipv9 ->
                      case Text.Printf.$fPrintfTypeIO1
                             @ ()
                             DirectoryServer.$sprintf3
                               `cast`
                             (Sym (Data.Type.Equality.N:~[0] <*>_N) <()>_N <()>_N)
                             DirectoryServer.dirrun9
                             DirectoryServer.dirrun5
                             ipv8 of ds7 { (#,#) ipv10 ipv11 ->
                      case GHC.Prim.newMVar#
                             @ GHC.Prim.RealWorld
                             @ (Control.Concurrent.Chan.ChItem GHC.Base.String)
                             ipv10 of ds { (#,#) ipv12 ipv13 ->
                      case GHC.Prim.newMVar#
                             @ GHC.Prim.RealWorld
                             @ (GHC.MVar.MVar (Control.Concurrent.Chan.ChItem GHC.Base.String))
                             ipv12 of ds8 { (#,#) ipv14 ipv15 ->
                      let {
                        hole :: GHC.MVar.MVar
                                  (Control.Concurrent.Chan.ChItem GHC.Base.String)
                          {- Strictness: m -}
                        = GHC.MVar.MVar
                            @ (Control.Concurrent.Chan.ChItem GHC.Base.String)
                            ipv13
                      } in
                      case GHC.Prim.putMVar#
                             @ GHC.Prim.RealWorld
                             @ (GHC.MVar.MVar (Control.Concurrent.Chan.ChItem GHC.Base.String))
                             ipv15
                             hole
                             ipv14 of s2# { DEFAULT ->
                      case GHC.Prim.newMVar#
                             @ GHC.Prim.RealWorld
                             @ (GHC.MVar.MVar (Control.Concurrent.Chan.ChItem GHC.Base.String))
                             s2# of ds9 { (#,#) ipv16 ipv17 ->
                      case GHC.Prim.putMVar#
                             @ GHC.Prim.RealWorld
                             @ (GHC.MVar.MVar (Control.Concurrent.Chan.ChItem GHC.Base.String))
                             ipv17
                             hole
                             ipv16 of s2#1 { DEFAULT ->
                      case GHC.Prim.newMutVar#
                             @ (LRUCache.Cache GHC.Base.String GHC.Base.String)
                             @ GHC.Prim.RealWorld
                             DirectoryServer.dirrun4
                             s2#1 of ds10 { (#,#) ipv18 ipv19 ->
                      case GHC.Prim.atomically#
                             @ (GHC.Conc.Sync.TVar GHC.Types.Int)
                             DirectoryServer.dirrun2
                             ipv18 of ds11 { (#,#) ipv20 ipv21 ->
                      case GHC.Prim.fork#
                             @ (GHC.Types.IO ())
                             (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              GHC.Prim.catch#
                                @ ()
                                @ GHC.Exception.SomeException
                                (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case ww8
                                        `cast`
                                      (Foreign.C.Types.N:CInt[0]) of ww15 { GHC.Int.I32# ww16 ->
                                 DirectoryServer.$wclientconnectHandler
                                   ww16
                                   ww9
                                   ww10
                                   ww11
                                   ww14
                                   (Control.Concurrent.Chan.Chan @ GHC.Base.String ipv15 ipv17)
                                   ipv21
                                   ipv1
                                   (GHC.STRef.STRef
                                      @ GHC.Prim.RealWorld
                                      @ (LRUCache.Cache GHC.Base.String GHC.Base.String)
                                      ipv19)
                                     `cast`
                                   (Trans
                                        (Sym (GHC.IORef.N:IORef[0]) <LRUCache.Cache
                                                                       GHC.Base.String
                                                                       GHC.Base.String>_N)
                                        (Sym (LRUCache.N:Handle[0]
                                                  <GHC.Base.String>_R <GHC.Base.String>_R)))
                                   w })
                                GHC.Conc.Sync.childHandler1
                                eta)
                               `cast`
                             (Sym (GHC.Types.N:IO[0] <()>_R))
                             ipv20 of ds12 { (#,#) ipv22 ipv23 ->
                      DirectoryServer.$wmainHandler
                        ipv15
                        ipv17
                        ipv22 } } } } } } } } } } } } } } } } } }) -}
cab554e127d1ede30f41591cbb934447
  dirrun10 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 5#) -}
2dccd600c60c951ae2a5d4b9284bf699
  dirrun11 :: GHC.Base.Maybe GHC.Base.String
  {- Unfolding: (GHC.Base.Just
                   @ GHC.Base.String
                   DirectoryServer.serverport) -}
9c4fdfcae8402d68b09e54eccc50547f
  dirrun12 :: GHC.Base.Maybe Network.Socket.AddrInfo
  {- Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Network.Socket.AddrInfo
                   DirectoryServer.dirrun13) -}
af6ea2996c310bdcb112530af72652e1
  dirrun13 :: Network.Socket.AddrInfo
  {- Strictness: m,
     Unfolding: (Network.Socket.AddrInfo
                   DirectoryServer.dirrun14
                   Network.Socket.Types.AF_UNSPEC
                   Network.Socket.Types.NoSocketType
                   Network.Socket.defaultHints3
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0]))
                   Network.Socket.defaultHints2
                   Network.Socket.defaultHints1) -}
46a625f9110dcaddf9e987a3fd0ccdc5
  dirrun14 :: [Network.Socket.AddrInfoFlag]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Network.Socket.AddrInfoFlag
                   Network.Socket.AI_PASSIVE
                   (GHC.Types.[] @ Network.Socket.AddrInfoFlag)) -}
5cbad238736b127c5388485e957f899e
  dirrun15 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          DirectoryServer.DirectoryServer #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newTVar#
                        @ (Data.Map.Base.Map
                             DirectoryServer.Filename DirectoryServer.Filemapping)
                        @ GHC.Prim.RealWorld
                        (Data.Map.Base.Tip
                           @ DirectoryServer.Filename
                           @ DirectoryServer.Filemapping)
                        s of ds { (#,#) ipv ipv1 ->
                 case GHC.Prim.newTVar#
                        @ (Data.Map.Base.Map
                             DirectoryServer.Uuid DirectoryServer.Fileserver)
                        @ GHC.Prim.RealWorld
                        (Data.Map.Base.Tip
                           @ DirectoryServer.Uuid
                           @ DirectoryServer.Fileserver)
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.newTVar#
                        @ GHC.Types.Int
                        @ GHC.Prim.RealWorld
                        DirectoryServer.dirrun3
                        ipv2 of ds2 { (#,#) ipv4 ipv5 ->
                 (# ipv4,
                    DirectoryServer.DirectoryServer
                      DirectoryServer.serverhost
                      DirectoryServer.serverport
                      (GHC.Conc.Sync.TVar
                         @ (Data.Map.Base.Map
                              DirectoryServer.Filename DirectoryServer.Filemapping)
                         ipv1)
                      (GHC.Conc.Sync.TVar
                         @ (Data.Map.Base.Map
                              DirectoryServer.Uuid DirectoryServer.Fileserver)
                         ipv3)
                      (GHC.Conc.Sync.TVar @ GHC.Types.Int ipv5) #) } } }) -}
69bd37e0138ff9bec33fa9c344201d50
  dirrun2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Conc.Sync.TVar GHC.Types.Int #)
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s1# :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newTVar#
                        @ GHC.Types.Int
                        @ GHC.Prim.RealWorld
                        DirectoryServer.dirrun3
                        s1# of ds { (#,#) ipv ipv1 ->
                 (# ipv, GHC.Conc.Sync.TVar @ GHC.Types.Int ipv1 #) }) -}
f4b04f1f0b159a86dcffe879524bba0e
  dirrun3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
0d8fe3e63effd5f9f92cdf2d54cc182e
  dirrun4 :: LRUCache.Cache GHC.Base.String GHC.Base.String
  {- HasNoCafRefs,
     Unfolding: (LRUCache.Cache
                   @ GHC.Base.String
                   @ GHC.Base.String
                   5#
                   0#
                   0#
                   (Data.IntPSQ.Internal.Nil
                      @ LRUCache.Priority
                      @ (Data.HashPSQ.Internal.Bucket
                           GHC.Base.String LRUCache.Priority GHC.Base.String))
                     `cast`
                   (Sym (Data.HashPSQ.Internal.N:HashPSQ[0]
                             <GHC.Base.String>_R <LRUCache.Priority>_R <GHC.Base.String>_R))) -}
2c9f4389ce7857c671892964494ee1f7
  dirrun5 ::
    [(Text.Printf.ModifierParser, Text.Printf.FieldFormatter)]
  {- Unfolding: (GHC.Types.:
                   @ (Text.Printf.ModifierParser, Text.Printf.FieldFormatter)
                   DirectoryServer.dirrun6
                   (GHC.Types.[] @ Text.Printf.UPrintf)) -}
c17c2d56a1f9e700f9da8730ced87ea8
  dirrun6 :: (Text.Printf.ModifierParser, Text.Printf.FieldFormatter)
  {- Unfolding: ((DirectoryServer.dirrun8,
                  DirectoryServer.dirrun7)) -}
575d70061100daf7668ee066625b4141
  dirrun7 :: Text.Printf.FieldFormat -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w2 :: Text.Printf.FieldFormat) ->
                 case w2 of ww { Text.Printf.FieldFormat ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww7 of ww8 { GHC.Types.C# ww9 ->
                 Text.Printf.$wformatString
                   @ GHC.Types.Char
                   Text.Printf.$fIsCharChar
                   DirectoryServer.serverport
                   ww1
                   ww2
                   ww3
                   ww9 } }) -}
11128b0025781e6b3707f029bbb47df1
  dirrun8 :: Text.Printf.ModifierParser
  {- Arity: 1,
     Unfolding: (DirectoryServer.$s$fPrintfArg[]_$s$fPrintfArg[]_$cparseFormat
                   DirectoryServer.serverport) -}
f94123bc261806f7528de35a1cd2347e
  dirrun9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Listening on port %s\n"#) -}
3fd2cdc7216b4fbc35c9a612a74a1f34
  downloadCommand ::
    Network.Socket.Types.Socket
    -> DirectoryServer.DirectoryServer
    -> GHC.Base.String
    -> LRUCache.Handle GHC.Base.String GHC.Base.String
    -> GHC.Types.IO ()
  {- Arity: 5,
     Strictness: <L,U(U(U),A,A,A,A)><S,1*U(A,A,1*U(U),A,A)><L,U><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.downloadCommand1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <DirectoryServer.DirectoryServer>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <LRUCache.Handle GHC.Base.String GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
3860bbf7edaaf37b4a2ea070b9c4b854
  downloadCommand1 ::
    Network.Socket.Types.Socket
    -> DirectoryServer.DirectoryServer
    -> GHC.Base.String
    -> LRUCache.Handle GHC.Base.String GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <L,U(U(U),A,A,A,A)><S,1*U(A,A,1*U(U),A,A)><L,U><S(S),1*U(U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: DirectoryServer.DirectoryServer)
                   (w2 :: GHC.Base.String)
                   (w3 :: LRUCache.Handle GHC.Base.String GHC.Base.String)
                   (w4 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { DirectoryServer.DirectoryServer ww1 ww2 ww3 ww4 ww5 ->
                 case w3
                        `cast`
                      (Trans
                           (LRUCache.N:Handle[0] <GHC.Base.String>_R <GHC.Base.String>_R)
                           (GHC.IORef.N:IORef[0] <LRUCache.Cache
                                                    GHC.Base.String
                                                    GHC.Base.String>_N)) of ww6 { GHC.STRef.STRef ww7 ->
                 DirectoryServer.$wdownloadCommand w ww3 w2 ww7 w4 } }) -}
97b576793fa90cf49f7e43402280c31e
  downloadmsg ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> Network.Socket.Types.Socket
    -> LRUCache.Handle GHC.Base.String GHC.Base.String
    -> GHC.Types.IO ()
  {- Arity: 6,
     Strictness: <L,U><L,A><L,A><L,1*U(U(U),A,A,A,A)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.downloadmsg1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <Network.Socket.Types.Socket>_R
                 ->_R <LRUCache.Handle GHC.Base.String GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
f3160f0cb379733dc66f91d585212fae
  downloadmsg1 ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> Network.Socket.Types.Socket
    -> LRUCache.Handle GHC.Base.String GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 6,
     Strictness: <L,U><L,A><L,A><L,1*U(U(U),A,A,A,A)><L,1*U(U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (6, True, True)
                (\ (w :: GHC.Base.String)
                   (w1 :: GHC.Base.String)
                   (w2 :: GHC.Base.String)
                   (w3 :: Network.Socket.Types.Socket)
                   (w4 :: LRUCache.Handle GHC.Base.String GHC.Base.String)
                   (w5 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 DirectoryServer.$wdownloadmsg w w3 w4 w5) -}
c8e789ed6825198a7c31af2ab90f512f
  filemappings ::
    DirectoryServer.DirectoryServer
    -> GHC.Conc.Sync.TVar
         (Data.Map.Base.Map
            DirectoryServer.Filename DirectoryServer.Filemapping)
  RecSel Left DirectoryServer.DirectoryServer
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLL),1*U(A,A,1*U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.DirectoryServer) ->
                 case ds of wild { DirectoryServer.DirectoryServer ds1 ds2 ds3 ds4 ds5 ->
                 ds3 }) -}
d6a443f19eae03a9ad745d42ebc21c4a
  fileservercount ::
    DirectoryServer.DirectoryServer -> GHC.Conc.Sync.TVar GHC.Types.Int
  RecSel Left DirectoryServer.DirectoryServer
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLS),1*U(A,A,A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.DirectoryServer) ->
                 case ds of wild { DirectoryServer.DirectoryServer ds1 ds2 ds3 ds4 ds5 ->
                 ds5 }) -}
d831c2a14517228e5b2efd812a6f5f24
  fileservers ::
    DirectoryServer.DirectoryServer
    -> GHC.Conc.Sync.TVar
         (Data.Map.Base.Map DirectoryServer.Uuid DirectoryServer.Fileserver)
  RecSel Left DirectoryServer.DirectoryServer
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSL),1*U(A,A,A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.DirectoryServer) ->
                 case ds of wild { DirectoryServer.DirectoryServer ds1 ds2 ds3 ds4 ds5 ->
                 ds4 }) -}
851d5cd41d73b41aaddbbaf9bd4b1c0b
  fmaddress :: DirectoryServer.Filemapping -> DirectoryServer.Address
  RecSel Left DirectoryServer.Filemapping
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSLL),1*U(A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.Filemapping) ->
                 case ds of wild { DirectoryServer.Filemapping ds1 ds2 ds3 ds4 ds5 ->
                 ds3 }) -}
063f216140a5c6334e6edb0450c3ab30
  fmfilename ::
    DirectoryServer.Filemapping -> DirectoryServer.Filename
  RecSel Left DirectoryServer.Filemapping
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLLL),1*U(1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.Filemapping) ->
                 case ds of wild { DirectoryServer.Filemapping ds1 ds2 ds3 ds4 ds5 ->
                 ds1 }) -}
c6ae708da5944c32ecdfbd4f70cc4f27
  fmport :: DirectoryServer.Filemapping -> DirectoryServer.Port
  RecSel Left DirectoryServer.Filemapping
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLSL),1*U(A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.Filemapping) ->
                 case ds of wild { DirectoryServer.Filemapping ds1 ds2 ds3 ds4 ds5 ->
                 ds4 }) -}
4c663903a97cef7b2c19a6b22680b0b3
  fmtimestamp ::
    DirectoryServer.Filemapping -> DirectoryServer.Timestamp
  RecSel Left DirectoryServer.Filemapping
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLLS),1*U(A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.Filemapping) ->
                 case ds of wild { DirectoryServer.Filemapping ds1 ds2 ds3 ds4 ds5 ->
                 ds5 }) -}
aff6bee9b4090be84295e4e4e50e1ba3
  fmuuid :: DirectoryServer.Filemapping -> DirectoryServer.Uuid
  RecSel Left DirectoryServer.Filemapping
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLL),1*U(A,1*U(U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.Filemapping) ->
                 case ds of wild { DirectoryServer.Filemapping ds1 ds2 ds3 ds4 ds5 ->
                 ds2 }) -}
1329428c0598958817573a447f5e52a7
  fsaddress :: DirectoryServer.Fileserver -> Network.Socket.HostName
  RecSel Left DirectoryServer.Fileserver
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.Fileserver) ->
                 case ds of wild { DirectoryServer.Fileserver ds1 ds2 ds3 ->
                 ds2 }) -}
8e67ef4b4a1c20903d9e057aa12be854
  fsport :: DirectoryServer.Fileserver -> DirectoryServer.Port
  RecSel Left DirectoryServer.Fileserver
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.Fileserver) ->
                 case ds of wild { DirectoryServer.Fileserver ds1 ds2 ds3 ->
                 ds3 }) -}
f026635c11afaa2b3c1ecd27a3394226
  fsuuid :: DirectoryServer.Fileserver -> DirectoryServer.Uuid
  RecSel Left DirectoryServer.Fileserver
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.Fileserver) ->
                 case ds of wild { DirectoryServer.Fileserver ds1 ds2 ds3 ->
                 ds1 }) -}
e251b9ecb458413a1721912ad816c529
  getFilemappingaddress ::
    DirectoryServer.Filemapping -> DirectoryServer.Address
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSLL),1*U(A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.Filemapping) ->
                 case ds of wild { DirectoryServer.Filemapping ds1 ds2 ds3 ds4 ds5 ->
                 ds3 }) -}
5c452d21303b98cb7579ffa1b77afb61
  getFilemappingport ::
    DirectoryServer.Filemapping -> DirectoryServer.Port
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLSL),1*U(A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.Filemapping) ->
                 case ds of wild { DirectoryServer.Filemapping ds1 ds2 ds3 ds4 ds5 ->
                 ds4 }) -}
a8c750d7b1a1b65134ddd627bc708ef7
  getFilemappingtimestamp ::
    DirectoryServer.Filemapping -> DirectoryServer.Timestamp
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLLS),1*U(A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.Filemapping) ->
                 case ds of wild { DirectoryServer.Filemapping ds1 ds2 ds3 ds4 ds5 ->
                 ds5 }) -}
1546d3faf9726144a630a2379611fa63
  getFilemappinguuid ::
    DirectoryServer.Filemapping -> DirectoryServer.Uuid
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLL),1*U(A,1*U(U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.Filemapping) ->
                 case ds of wild { DirectoryServer.Filemapping ds1 ds2 ds3 ds4 ds5 ->
                 ds2 }) -}
8c877a72edff8d43441a8355045ac2fc
  getFileserveraddress ::
    DirectoryServer.Fileserver -> Network.Socket.HostName
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.Fileserver) ->
                 case ds of wild { DirectoryServer.Fileserver ds1 ds2 ds3 ->
                 ds2 }) -}
04dfa1c341431420a31ade405b6b678e
  getFileserverport ::
    DirectoryServer.Fileserver -> DirectoryServer.Port
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.Fileserver) ->
                 case ds of wild { DirectoryServer.Fileserver ds1 ds2 ds3 ->
                 ds3 }) -}
1367145680254a4d19521fb7b24fa276
  heloCommand ::
    Network.Socket.Types.Socket
    -> DirectoryServer.DirectoryServer
    -> GHC.Base.String
    -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <S,1*U(U(U),A,A,A,A)><S,1*U(A,1*U,A,A,A)><L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.heloCommand1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <DirectoryServer.DirectoryServer>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
6d495f52fc3b950db23126e6c0ae6512
  heloCommand1 ::
    Network.Socket.Types.Socket
    -> DirectoryServer.DirectoryServer
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <S,1*U(U(U),A,A,A,A)><S,1*U(A,1*U,A,A,A)><L,1*U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: DirectoryServer.DirectoryServer)
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 case w1 of ww6 { DirectoryServer.DirectoryServer ww7 ww8 ww9 ww10 ww11 ->
                 DirectoryServer.$wheloCommand ww1 ww8 w2 w3 } }) -}
a7f460d0532933e2f55ceb53dfa8dab1
  heloCommand2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \StudentID:12306421\n\
                   \\n"#) -}
d21f4528453e5c22cc14736c67f1f986
  incrementFileserverCount ::
    GHC.Conc.Sync.TVar GHC.Types.Int -> GHC.Conc.Sync.STM ()
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.incrementFileserverCount1
                  `cast`
                (<GHC.Conc.Sync.TVar GHC.Types.Int>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0] <()>_R)) -}
bb517173a070ebc223c7a6c942731d1e
  incrementFileserverCount1 ::
    GHC.Conc.Sync.TVar GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (tv :: GHC.Conc.Sync.TVar GHC.Types.Int)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case tv of wild { GHC.Conc.Sync.TVar tvar# ->
                 case GHC.Prim.readTVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Types.Int
                        tvar#
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Prim.writeTVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Types.Int
                        tvar#
                        (case ipv1 of wild1 { GHC.Types.I# y ->
                         GHC.Types.I# (GHC.Prim.+# 1# y) })
                        ipv of s2# { DEFAULT ->
                 (# s2#, GHC.Tuple.() #) } } }) -}
8f3ccebdc89d3f98e1d46c117505256b
  incrementTVar ::
    GHC.Conc.Sync.TVar GHC.Types.Int -> GHC.Conc.Sync.STM ()
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.incrementFileserverCount1
                  `cast`
                (<GHC.Conc.Sync.TVar GHC.Types.Int>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0] <()>_R)) -}
2ddb91211737380d53daf1ab0c6ecc53
  joinCommand ::
    Network.Socket.Types.Socket
    -> DirectoryServer.DirectoryServer
    -> GHC.Base.String
    -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <S,1*U(U(U),A,A,A,A)><S(LLLS(S)S(S)),1*U(A,A,A,1*U(U),U(U))><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.joinCommand1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <DirectoryServer.DirectoryServer>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
2ac3242777d6986faa74ad0c620748a0
  joinCommand1 ::
    Network.Socket.Types.Socket
    -> DirectoryServer.DirectoryServer
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <S,1*U(U(U),A,A,A,A)><S(LLLS(S)S(S)),1*U(A,A,A,1*U(U),U(U))><L,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: DirectoryServer.DirectoryServer)
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 case w1 of ww6 { DirectoryServer.DirectoryServer ww7 ww8 ww9 ww10 ww11 ->
                 case ww10 of ww12 { GHC.Conc.Sync.TVar ww13 ->
                 case ww11 of ww14 { GHC.Conc.Sync.TVar ww15 ->
                 DirectoryServer.$wjoinCommand ww1 ww13 ww15 w2 w3 } } } }) -}
f55a16e1d1ea7e99d68289ca6b818bee
  killCommand ::
    Control.Concurrent.Chan.Chan GHC.Base.String
    -> Network.Socket.Types.Socket -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,1*U(A,U)><S,1*U(U(U),A,A,A,A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.killCommand1
                  `cast`
                (<Control.Concurrent.Chan.Chan GHC.Base.String>_R
                 ->_R <Network.Socket.Types.Socket>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
80fb6bc764529b7f27e13158dd631acd
  killCommand1 ::
    Control.Concurrent.Chan.Chan GHC.Base.String
    -> Network.Socket.Types.Socket
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,1*U(A,U)><S,1*U(U(U),A,A,A,A)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Control.Concurrent.Chan.Chan GHC.Base.String)
                   (w1 :: Network.Socket.Types.Socket)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 DirectoryServer.$wkillCommand w ww1 w2 }) -}
01f3ba42714bbdee369e5c34a251c656
  killCommand2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "KILL_SERVICE"#) -}
c06e73f27e9215b349ebb5adeff7aec4
  killCommand3 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "Service is now terminating!"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
ce14ab8e5af1b9084e3ceb890e7ed68a
  lookupFilemapping ::
    DirectoryServer.DirectoryServer
    -> DirectoryServer.Filename
    -> GHC.Conc.Sync.STM (GHC.Base.Maybe DirectoryServer.Filemapping)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LLS(S)LL),1*U(A,A,1*U(U),A,A)><L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.lookupFilemapping1
                  `cast`
                (<DirectoryServer.DirectoryServer>_R
                 ->_R <DirectoryServer.Filename>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0]
                               <GHC.Base.Maybe DirectoryServer.Filemapping>_R)) -}
15f357c686447c42c9985dea936a8129
  lookupFilemapping1 ::
    DirectoryServer.DirectoryServer
    -> DirectoryServer.Filename
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Base.Maybe DirectoryServer.Filemapping #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LLS(S)LL),1*U(A,A,1*U(U),A,A)><L,1*U><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: DirectoryServer.DirectoryServer)
                   (filename :: DirectoryServer.Filename)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ds of wild { DirectoryServer.DirectoryServer ds1 ds2 ds3 ds4 ds5 ->
                 case ds3 of wild1 { GHC.Conc.Sync.TVar tvar# ->
                 case GHC.Prim.readTVar#
                        @ GHC.Prim.RealWorld
                        @ (Data.Map.Base.Map
                             DirectoryServer.Filename DirectoryServer.Filemapping)
                        tvar#
                        eta of ds6 { (#,#) ipv ipv1 ->
                 (# ipv,
                    DirectoryServer.$slookup1
                      @ DirectoryServer.Filemapping
                      filename
                      ipv1 #) } } }) -}
c9c69edd27e9213f40fa34306e2e9e4e
  lookupFileserver ::
    DirectoryServer.DirectoryServer
    -> DirectoryServer.Uuid
    -> GHC.Conc.Sync.STM (GHC.Base.Maybe DirectoryServer.Fileserver)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LLLS(S)L),1*U(A,A,A,1*U(U),A)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.lookupFileserver1
                  `cast`
                (<DirectoryServer.DirectoryServer>_R
                 ->_R <DirectoryServer.Uuid>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0]
                               <GHC.Base.Maybe DirectoryServer.Fileserver>_R)) -}
04b634ed05bad8e9f15c11d872677dc1
  lookupFileserver1 ::
    DirectoryServer.DirectoryServer
    -> DirectoryServer.Uuid
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Base.Maybe DirectoryServer.Fileserver #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LLLS(S)L),1*U(A,A,A,1*U(U),A)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: DirectoryServer.DirectoryServer)
                   (uuid :: DirectoryServer.Uuid)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ds of wild { DirectoryServer.DirectoryServer ds1 ds2 ds3 ds4 ds5 ->
                 case ds4 of wild1 { GHC.Conc.Sync.TVar tvar# ->
                 case GHC.Prim.readTVar#
                        @ GHC.Prim.RealWorld
                        @ (Data.Map.Base.Map
                             DirectoryServer.Uuid DirectoryServer.Fileserver)
                        tvar#
                        eta of ds6 { (#,#) ipv ipv1 ->
                 (# ipv,
                    DirectoryServer.$slookup3
                      @ DirectoryServer.Fileserver
                      uuid
                      ipv1 #) } } }) -}
ec589ac90772e90a1e5c197c18a9bbe1
  mainHandler ::
    Network.Socket.Types.Socket
    -> Control.Concurrent.Chan.Chan GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,A><S(SS),1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.mainHandler1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <Control.Concurrent.Chan.Chan GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
60dc860b62e9cac045e4d1564ef9c8c9
  mainHandler1 ::
    Network.Socket.Types.Socket
    -> Control.Concurrent.Chan.Chan GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,A><S(SS),1*U(U,U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: Control.Concurrent.Chan.Chan GHC.Base.String)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { Control.Concurrent.Chan.Chan ww1 ww2 ->
                 DirectoryServer.$wmainHandler ww1 ww2 w2 }) -}
6179e8e2218537e9a9d215ea64bc76fd
  maxnumThreads :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 4#) -}
6120739e9c2d8a54e86274b514a8fd39
  newDirectoryServer ::
    GHC.Base.String
    -> GHC.Base.String -> GHC.Types.IO DirectoryServer.DirectoryServer
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.newDirectoryServer1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <DirectoryServer.DirectoryServer>_R)) -}
9a78f56d3efa3f20c209256552ec2081
  newDirectoryServer1 ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          DirectoryServer.DirectoryServer #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (address1 :: GHC.Base.String)
                   (port1 :: GHC.Base.String)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.atomically#
                   @ DirectoryServer.DirectoryServer
                   (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    case GHC.Prim.newTVar#
                           @ (Data.Map.Base.Map
                                DirectoryServer.Filename DirectoryServer.Filemapping)
                           @ GHC.Prim.RealWorld
                           (Data.Map.Base.Tip
                              @ DirectoryServer.Filename
                              @ DirectoryServer.Filemapping)
                           s of ds { (#,#) ipv ipv1 ->
                    case GHC.Prim.newTVar#
                           @ (Data.Map.Base.Map
                                DirectoryServer.Uuid DirectoryServer.Fileserver)
                           @ GHC.Prim.RealWorld
                           (Data.Map.Base.Tip
                              @ DirectoryServer.Uuid
                              @ DirectoryServer.Fileserver)
                           ipv of ds1 { (#,#) ipv2 ipv3 ->
                    case GHC.Prim.newTVar#
                           @ GHC.Types.Int
                           @ GHC.Prim.RealWorld
                           DirectoryServer.dirrun3
                           ipv2 of ds2 { (#,#) ipv4 ipv5 ->
                    (# ipv4,
                       DirectoryServer.DirectoryServer
                         address1
                         port1
                         (GHC.Conc.Sync.TVar
                            @ (Data.Map.Base.Map
                                 DirectoryServer.Filename DirectoryServer.Filemapping)
                            ipv1)
                         (GHC.Conc.Sync.TVar
                            @ (Data.Map.Base.Map
                                 DirectoryServer.Uuid DirectoryServer.Fileserver)
                            ipv3)
                         (GHC.Conc.Sync.TVar @ GHC.Types.Int ipv5) #) } } })
                   eta) -}
deedf65dae1ad3f3a9ff582391f4b527
  newFilemapping ::
    DirectoryServer.Filename
    -> DirectoryServer.Uuid
    -> DirectoryServer.Address
    -> DirectoryServer.Port
    -> DirectoryServer.Timestamp
    -> GHC.Conc.Sync.STM DirectoryServer.Filemapping
  {- Arity: 6, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.newFilemapping1
                  `cast`
                (<DirectoryServer.Filename>_R
                 ->_R <DirectoryServer.Uuid>_R
                 ->_R <DirectoryServer.Address>_R
                 ->_R <DirectoryServer.Port>_R
                 ->_R <DirectoryServer.Timestamp>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0]
                               <DirectoryServer.Filemapping>_R)) -}
50bf86ba1a9a2285f4518f55caa8a29c
  newFilemapping1 ::
    DirectoryServer.Filename
    -> DirectoryServer.Uuid
    -> DirectoryServer.Address
    -> DirectoryServer.Port
    -> DirectoryServer.Timestamp
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          DirectoryServer.Filemapping #)
  {- Arity: 6, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><S,U>,
     Unfolding: InlineRule (6, True, False)
                (\ (fmfilename1 :: DirectoryServer.Filename)
                   (fmuuid1 :: DirectoryServer.Uuid)
                   (fmaddress1 :: DirectoryServer.Address)
                   (fmport1 :: DirectoryServer.Port)
                   (fmtimestamp1 :: DirectoryServer.Timestamp)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    DirectoryServer.Filemapping
                      fmfilename1
                      fmuuid1
                      fmaddress1
                      fmport1
                      fmtimestamp1 #)) -}
892a7b2cd489d91b6c454cb68df072c1
  newFileserver ::
    DirectoryServer.Uuid
    -> DirectoryServer.Address
    -> DirectoryServer.Port
    -> GHC.Conc.Sync.STM DirectoryServer.Fileserver
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.newFileserver1
                  `cast`
                (<DirectoryServer.Uuid>_R
                 ->_R <DirectoryServer.Address>_R
                 ->_R <DirectoryServer.Port>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0]
                               <DirectoryServer.Fileserver>_R)) -}
b05b9b3cc140f63bdeff55bbe4752e2d
  newFileserver1 ::
    DirectoryServer.Uuid
    -> DirectoryServer.Address
    -> DirectoryServer.Port
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          DirectoryServer.Fileserver #)
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,U><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ (fsuuid1 :: DirectoryServer.Uuid)
                   (fsaddress1 :: DirectoryServer.Address)
                   (fsport1 :: DirectoryServer.Port)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, DirectoryServer.Fileserver fsuuid1 fsaddress1 fsport1 #)) -}
85f1741e2decd222269db4e58d430b08
  port :: DirectoryServer.DirectoryServer -> GHC.Base.String
  RecSel Left DirectoryServer.DirectoryServer
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLLL),1*U(A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.DirectoryServer) ->
                 case ds of wild { DirectoryServer.DirectoryServer ds1 ds2 ds3 ds4 ds5 ->
                 ds2 }) -}
2baf0712dfcb474dd79c49ae0ab6af74
  returnb :: a -> GHC.Types.IO a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                GHC.Base.returnIO1
                  `cast`
                (forall (a :: <*>_N). <a>_R ->_R Sym (GHC.Types.N:IO[0] <a>_R)) -}
f3b3b31a57e0c3c38940f2609e0c904d
  returndata ::
    GHC.Base.String
    -> Network.Socket.Types.Socket
    -> GHC.Base.String
    -> GHC.Types.IO ()
  {- Arity: 4, Strictness: <L,1*U><S,1*U(U(U),A,A,A,A)><L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.returndata1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R <Network.Socket.Types.Socket>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
5908900e139a8d9d21d38f56cec6b547
  returndata1 ::
    GHC.Base.String
    -> Network.Socket.Types.Socket
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,1*U><S,1*U(U(U),A,A,A,A)><L,1*U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: GHC.Base.String)
                   (w1 :: Network.Socket.Types.Socket)
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 DirectoryServer.$wreturndata w ww1 w2 w3 }) -}
507a68ebd5a9e262f7de98fa30a8462b
  returndata2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \\n"#) -}
c1cdd0a45ca23b0f6b5b2e42ef73fb19
  serverhost :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "localhost"#) -}
a40a53052d1d925b56ca7b9e3bf2212b
  serverport :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "7008"#) -}
14a8d6bc62d9c86955711b71a1ed0295
  updateCommand ::
    Network.Socket.Types.Socket
    -> DirectoryServer.DirectoryServer
    -> GHC.Base.String
    -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <S,1*U(U(U),A,A,A,A)><S(LLS(S)LL),1*U(A,A,U(U),1*U(U),A)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.updateCommand1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <DirectoryServer.DirectoryServer>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
7d35fe52d8589efc55770cfd7966d54e
  updateCommand1 ::
    Network.Socket.Types.Socket
    -> DirectoryServer.DirectoryServer
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <S,1*U(U(U),A,A,A,A)><S(LLS(S)LL),1*U(A,A,U(U),1*U(U),A)><L,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: DirectoryServer.DirectoryServer)
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 case w1 of ww6 { DirectoryServer.DirectoryServer ww7 ww8 ww9 ww10 ww11 ->
                 case ww9 of ww12 { GHC.Conc.Sync.TVar ww13 ->
                 DirectoryServer.$wupdateCommand ww1 ww13 ww10 w2 w3 } } }) -}
2110bd5624575a5080750e78ce53e722
  updatemsg ::
    Network.Socket.Types.Socket
    -> GHC.Base.String
    -> GHC.Base.String
    -> DirectoryServer.Fileserver
    -> GHC.Types.Int
    -> DirectoryServer.DirectoryServer
    -> GHC.Types.IO ()
  {- Arity: 7,
     Strictness: <L,A><L,1*U><L,1*U><L,1*U(A,A,1*U)><L,A><S,1*H><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.updatemsg1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <DirectoryServer.Fileserver>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <DirectoryServer.DirectoryServer>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
cdbf37c3c0c9553754c40aa20efda23d
  updatemsg1 ::
    Network.Socket.Types.Socket
    -> GHC.Base.String
    -> GHC.Base.String
    -> DirectoryServer.Fileserver
    -> GHC.Types.Int
    -> DirectoryServer.DirectoryServer
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 7,
     Strictness: <L,A><L,1*U><L,1*U><L,1*U(A,A,1*U)><L,A><S,1*H><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (7, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: GHC.Base.String)
                   (w2 :: GHC.Base.String)
                   (w3 :: DirectoryServer.Fileserver)
                   (w4 :: GHC.Types.Int)
                   (w5 :: DirectoryServer.DirectoryServer)
                   (w6 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w5 of w7 { DirectoryServer.DirectoryServer ipv ipv1 ipv2 ipv3 ipv4 ->
                 DirectoryServer.$wupdatemsg w1 w2 w3 w7 w6 }) -}
e707ca12b389b597f74e306db2cd8437
  uploadCommand ::
    Network.Socket.Types.Socket
    -> DirectoryServer.DirectoryServer
    -> GHC.Base.String
    -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <L,1*U(U(U),A,A,A,A)><S(LLS(S)LL),1*U(A,A,U(U),U(U),A)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.uploadCommand1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <DirectoryServer.DirectoryServer>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
d8e24ba0cbb4a95a122582c2f7b31686
  uploadCommand1 ::
    Network.Socket.Types.Socket
    -> DirectoryServer.DirectoryServer
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <L,1*U(U(U),A,A,A,A)><S(LLS(S)LL),1*U(A,A,U(U),U(U),A)><L,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: DirectoryServer.DirectoryServer)
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { DirectoryServer.DirectoryServer ww1 ww2 ww3 ww4 ww5 ->
                 case ww3 of ww6 { GHC.Conc.Sync.TVar ww7 ->
                 DirectoryServer.$wuploadCommand w ww7 ww4 w2 w3 } }) -}
a00fece313eb472de724958e68b6aee4
  uploadmsg ::
    Network.Socket.Types.Socket
    -> GHC.Base.String
    -> GHC.Base.String
    -> DirectoryServer.Fileserver
    -> GHC.Types.Int
    -> DirectoryServer.DirectoryServer
    -> GHC.Types.IO ()
  {- Arity: 7,
     Strictness: <L,A><L,1*U><L,1*U><L,1*U(A,A,1*U)><L,A><S,1*H><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.uploadmsg1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <DirectoryServer.Fileserver>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <DirectoryServer.DirectoryServer>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
06c450d39a96207e16de3f35f08ac7b3
  uploadmsg1 ::
    Network.Socket.Types.Socket
    -> GHC.Base.String
    -> GHC.Base.String
    -> DirectoryServer.Fileserver
    -> GHC.Types.Int
    -> DirectoryServer.DirectoryServer
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 7,
     Strictness: <L,A><L,1*U><L,1*U><L,1*U(A,A,1*U)><L,A><S,1*H><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (7, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: GHC.Base.String)
                   (w2 :: GHC.Base.String)
                   (w3 :: DirectoryServer.Fileserver)
                   (w4 :: GHC.Types.Int)
                   (w5 :: DirectoryServer.DirectoryServer)
                   (w6 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w5 of w7 { DirectoryServer.DirectoryServer ipv ipv1 ipv2 ipv3 ipv4 ->
                 DirectoryServer.$wuploadmsg w1 w2 w3 w7 w6 }) -}
"SPEC/DirectoryServer $fPrintfArg[]_$cparseFormat @ Char" [ALWAYS] forall ($dIsChar :: Text.Printf.IsChar
                                                                                         GHC.Types.Char)
  Text.Printf.$fPrintfArg[]_$cparseFormat @ GHC.Types.Char $dIsChar
  = DirectoryServer.$s$fPrintfArg[]_$s$fPrintfArg[]_$cparseFormat
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

