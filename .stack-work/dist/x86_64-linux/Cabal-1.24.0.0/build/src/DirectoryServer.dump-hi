
==================== FINAL INTERFACE ====================
2016-12-10 14:08:02.357899 UTC

interface DFS-0.1.0.0-8an8YU57OtlLJWbvpjsF8P:DirectoryServer 8001
  interface hash: f0364ec201e8eb92454b1e63be8181aa
  ABI hash: e0bdcfe3ddf4ea20ad7643b0ffd9cf25
  export-list hash: 43c6e0467f342fc5041f5d68cd9ccf5e
  orphan hash: 10f8b75515c64edabf93254c45cb8948
  flag hash: f6e21994be8aecbadae44ec12bd5520e
  sig of: Nothing
  used TH splices: False
  where
exports:
  DirectoryServer.addFilemapping
  DirectoryServer.addFileserver
  DirectoryServer.clientHandler
  DirectoryServer.clientconnectHandler
  DirectoryServer.decrementTVar
  DirectoryServer.dirrun
  DirectoryServer.downloadCommand
  DirectoryServer.downloadmsg
  DirectoryServer.getFilemappingaddress
  DirectoryServer.getFilemappingport
  DirectoryServer.getFilemappingtimestamp
  DirectoryServer.getFilemappinguuid
  DirectoryServer.getFileserveraddress
  DirectoryServer.getFileserverport
  DirectoryServer.heloCommand
  DirectoryServer.incrementFileserverCount
  DirectoryServer.incrementTVar
  DirectoryServer.joinCommand
  DirectoryServer.killCommand
  DirectoryServer.lookupFilemapping
  DirectoryServer.lookupFileserver
  DirectoryServer.mainHandler
  DirectoryServer.maxnumThreads
  DirectoryServer.newDirectoryServer
  DirectoryServer.newFilemapping
  DirectoryServer.newFileserver
  DirectoryServer.returnb
  DirectoryServer.returndata
  DirectoryServer.serverhost
  DirectoryServer.serverport
  DirectoryServer.updateCommand
  DirectoryServer.updatemsg
  DirectoryServer.uploadCommand
  DirectoryServer.uploadmsg
  DirectoryServer.Address
  DirectoryServer.DirectoryServer{DirectoryServer.DirectoryServer address filemappings fileservercount fileservers port}
  DirectoryServer.Filemapping{DirectoryServer.Filemapping fmaddress fmfilename fmport fmtimestamp fmuuid}
  DirectoryServer.Filename
  DirectoryServer.Fileserver{DirectoryServer.Fileserver fsaddress fsport fsuuid}
  DirectoryServer.Port
  DirectoryServer.Timestamp
  DirectoryServer.Uuid
module dependencies: LRUCache
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.0.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.2.6.2@directory-1.2.6.2
                      filepath-1.4.1.0@filepath-1.4.1.0 ghc-prim-0.5.0.0
                      hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G
                      integer-gmp-1.0.0.1
                      network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      psqueues-0.2.2.2@psqueues-0.2.2.2-Abmw1tivvf7JJikDhHX0px
                      random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe
                      split-0.2.3.1@split-0.2.3.1-IJKK4pOCYGKud0jZImZke
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      unix-2.7.2.0@unix-2.7.2.0
                      vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G:Data.Hashable.Generic
         network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network.Socket
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Fusion.Bundle
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector
import  -/  LRUCache bb0ac9640cff3e8f202b0c83942a9cb0
  exports: eb53398215c01e54ebbcff381059250c
  Handle 0467f9cea75b0df3b4722b8b2bb70eb3
  ioinsert 7283c1f539a1e2875ed5c0cfc9183485
  iolookup 6a3f1a8cc4315dafd44cee740edffbf5
  newHandle 5146986b1b338bd0eca564a9e8c3798a
import  -/  base-4.9.0.0:Control.Concurrent 98a3a12a2ace3d27758947d9f1041f90
import  -/  base-4.9.0.0:Control.Concurrent.Chan d55a50c16a7726146797e8faa62a516b
import  -/  base-4.9.0.0:Control.Exception 8762ca621bc15a8c1e8e34c703aba1aa
import  -/  base-4.9.0.0:Control.Monad 7767aebfd53f0b584cef2fe66ad3986c
import  -/  base-4.9.0.0:Data.Functor 6fc476505db88d678632a4a838125f13
import  -/  base-4.9.0.0:Data.OldList 0058409f994fb13ae0616e3f1e5b4dae
import  -/  base-4.9.0.0:Data.Word 34db1dae76cf3db02c16aed2b8427443
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.Conc.Sync 800ad52ae188c67fd514a07ba8a64fcc
import  -/  base-4.9.0.0:GHC.List 13d2451194c1c6e53b4f4f07947736dd
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  base-4.9.0.0:System.Environment ee0914a962f5508d0fd404c89ee4999b
import  -/  base-4.9.0.0:System.IO eb1d40aa793a4047069a5023f2ebcfe3
import  -/  base-4.9.0.0:Text.Printf 981db3fab2db52a63576c71c790058bf
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Char8 49426525406a134b63e5a11b574dbd77
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map 24b19ef74cea78e4c18332bed9f0491d
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base 1e8d61dcc59a1a983b27bab6fd6bdcaf
import  -/  directory-1.2.6.2@directory-1.2.6.2:System.Directory f7c57c4a392d1767b38addc37d00ceed
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G:Data.Hashable 71c3081f6f34402a5321988bec1814e7
import  -/  network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network fe4a3a40192a968130a171e8dca1101b
import  -/  network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network.Socket 74f40911ccc642ef529205732bba4073
import  -/  network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network.Socket.ByteString 5df469a3defc2172b49042eabe647e67
import  -/  network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network.Socket.Internal 6670c66c398fead19fd25cb50e6956e6
import  -/  network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network.Socket.Types a21cb2ffc6eaad6f8e6da2810c802283
import  -/  random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe:System.Random 12e582ce6a18ca02c107789bb28c509c
import  -/  split-0.2.3.1@split-0.2.3.1-IJKK4pOCYGKud0jZImZke:Data.List.Split 46e8ab9554123893f27696c65d88e63d
import  -/  split-0.2.3.1@split-0.2.3.1-IJKK4pOCYGKud0jZImZke:Data.List.Split.Internals 91fdfee0190d7e76d57defeef91ab9d3
import  -/  stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Concurrent.STM fd77bc755b79c492176ed8b0d0d3f933
import  -/  stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Concurrent.STM.TVar 862fffea7e508d7927194033396aaee0
import  -/  time-1.6.0.1@time-1.6.0.1:Data.Time 11aa6bb0881cf13119ff057ae5c21663
import  -/  time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime 68fe3dbb75b960bc232b90272611b9d9
f54962e5eb4ff43279363f717936454e
  $s$fPrintfArg[]_$s$fPrintfArg[]_$cparseFormat ::
    [GHC.Types.Char] -> Text.Printf.ModifierParser
  {- Arity: 2, Strictness: <L,A><S,1*U>m,
     Unfolding: InlineRule (2, True, False)
                (\ (ds1 :: [GHC.Types.Char]) (ds2 :: [GHC.Types.Char]) ->
                 case ds2 of wild {
                   [] -> Text.Printf.errorShortFormat @ Text.Printf.FormatParse
                   : c1 cs
                   -> Text.Printf.FormatParse
                        (GHC.Types.[] @ GHC.Types.Char)
                        c1
                        cs }) -}
3d4505f23f119bfcbfdd0d7592c689f9
  $sinsert_$sgo1 ::
    DirectoryServer.Uuid
    -> a1
    -> Data.Map.Base.Map DirectoryServer.Uuid a1
    -> Data.Map.Base.Map DirectoryServer.Uuid a1
  {- Arity: 3, Strictness: <S,1*U(U)><L,U><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (w :: DirectoryServer.Uuid)
                   (w1 :: a1)
                   (w2 :: Data.Map.Base.Map DirectoryServer.Uuid a1) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 DirectoryServer.$w$sgo10 @ a1 ww1 w1 w2 }) -}
ac08daf838b802d491cf6407efe2c42d
  $sinsert_$sgo10 ::
    DirectoryServer.Filename
    -> a1
    -> Data.Map.Base.Map DirectoryServer.Filename a1
    -> Data.Map.Base.Map DirectoryServer.Filename a1
  {- Arity: 3, Strictness: <S,1*U><L,U><S,1*U> -}
0c8a86ba80c1c3b9aad70acb274e457b
  $slookup1 ::
    DirectoryServer.Filename
    -> Data.Map.Base.Map DirectoryServer.Filename a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
7a364e6d5f2a1d7cb34c8d2326af6bee
  $slookup3 ::
    DirectoryServer.Uuid
    -> Data.Map.Base.Map DirectoryServer.Uuid a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U(U)><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (w :: DirectoryServer.Uuid)
                   (w1 :: Data.Map.Base.Map DirectoryServer.Uuid a) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 DirectoryServer.$wpoly_go10 @ a ww1 w1 }) -}
89538f4fe8c17441bcbbd805020f54bf
  $sprintf3 :: () GHC.Types.~~ ()
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq# @ * @ * @ () @ () @~ <()>_N) -}
b2e5330f5b9b5650c5fa36bc0d7b6fbe
  $tc'DirectoryServer :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14425091600569377567##
                   9429738138422537370##
                   DirectoryServer.$trModule
                   DirectoryServer.$tc'DirectoryServer1) -}
753c29b176240ec842702dd168e1a6eb
  $tc'DirectoryServer1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'DirectoryServer"#) -}
e6ed6df517dc8543f74699581e0e44e3
  $tc'Filemapping :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16902382187706602516##
                   18006448900940147537##
                   DirectoryServer.$trModule
                   DirectoryServer.$tc'Filemapping1) -}
7badb657df28a7bd73d0ba3ce696d4ef
  $tc'Filemapping1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Filemapping"#) -}
0f1847466fae6f90a6e3c022baa22aa4
  $tc'Fileserver :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6560136521661058803##
                   16996266590962209455##
                   DirectoryServer.$trModule
                   DirectoryServer.$tc'Fileserver1) -}
a822ab6f6bb930df9b01ce77fe9cdf72
  $tc'Fileserver1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Fileserver"#) -}
4dceee79bfcb5e6e05cfacb26d4aefa7
  $tcDirectoryServer :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2495542452672327890##
                   10594584561381918967##
                   DirectoryServer.$trModule
                   DirectoryServer.$trModule1) -}
c7025dfe246ad6f0513080148f100929
  $tcFilemapping :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5342575512544294334##
                   12923618388403870776##
                   DirectoryServer.$trModule
                   DirectoryServer.$tcFilemapping1) -}
ad033f3b6c5820f1d028342cdd1a2add
  $tcFilemapping1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Filemapping"#) -}
004467e09da9b3d1c5fa814889992be7
  $tcFileserver :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2884857698040245594##
                   2650511029532351890##
                   DirectoryServer.$trModule
                   DirectoryServer.$tcFileserver1) -}
713da1f15af0657d276e61d15c2582bc
  $tcFileserver1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Fileserver"#) -}
87bdd1519d5174037b28f4ae85074d99
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   DirectoryServer.$trModule2
                   DirectoryServer.$trModule1) -}
82340e19f8f5c5717ef34a3cf862d8a4
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "DirectoryServer"#) -}
9d6c0bb2cc722daa391ab2fcab336513
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "DFS-0.1.0.0-8an8YU57OtlLJWbvpjsF8P"#) -}
388fec8db85a1c48c518bfe9967daf69
  $w$sgo10 ::
    GHC.Prim.Int#
    -> a1
    -> Data.Map.Base.Map DirectoryServer.Uuid a1
    -> Data.Map.Base.Map DirectoryServer.Uuid a1
  {- Arity: 3, Strictness: <L,U><L,U><S,1*U>, Inline: [0] -}
298090a31b838b6a4f1aad9910893846
  $wclientHandler ::
    Network.Socket.Types.Socket
    -> Control.Concurrent.Chan.Chan GHC.Base.String
    -> GHC.Base.String
    -> GHC.Conc.Sync.TVar
         (Data.Map.Base.Map
            DirectoryServer.Filename DirectoryServer.Filemapping)
    -> GHC.Conc.Sync.TVar
         (Data.Map.Base.Map DirectoryServer.Uuid DirectoryServer.Fileserver)
    -> GHC.Conc.Sync.TVar GHC.Types.Int
    -> LRUCache.Handle GHC.Base.String GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 8,
     Strictness: <L,U(U(U),A,A,A,A)><L,U(U,U)><L,U><L,U(U)><L,U(U)><L,U(U)><L,U(U)><S,U>,
     Inline: [0] -}
c2ad0f5a0292c60a65df29c21a0c4e94
  $wclientconnectHandler ::
    GHC.Prim.Int#
    -> Network.Socket.Types.Family
    -> Network.Socket.Types.SocketType
    -> Network.Socket.Types.ProtocolNumber
    -> GHC.Prim.MVar#
         GHC.Prim.RealWorld Network.Socket.Types.SocketStatus
    -> Control.Concurrent.Chan.Chan GHC.Base.String
    -> GHC.Conc.Sync.TVar GHC.Types.Int
    -> DirectoryServer.DirectoryServer
    -> LRUCache.Handle GHC.Base.String GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 10,
     Strictness: <S,U><S,U><L,U><L,U(U)><S,U><L,U(U,U)><L,U(U)><L,U(A,U,U(U),U(U),U(U))><L,U(U)><S,U>,
     Inline: [0] -}
25b4a267c3699e59120f7c6cdf65675a
  $wdownloadCommand ::
    Network.Socket.Types.Socket
    -> GHC.Conc.Sync.TVar
         (Data.Map.Base.Map
            DirectoryServer.Filename DirectoryServer.Filemapping)
    -> GHC.Base.String
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld (LRUCache.Cache GHC.Base.String GHC.Base.String)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <L,U(U(U),A,A,A,A)><L,1*U(U)><L,U><S,U><S,U>,
     Inline: [0] -}
e3febb73fc442f9ae10692fb856bae36
  $wdownloadmsg ::
    GHC.Base.String
    -> Network.Socket.Types.Socket
    -> LRUCache.Handle GHC.Base.String GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,U><L,1*U(U(U),A,A,A,A)><L,1*U(U)><S,U>,
     Inline: [0] -}
fb0eb918f875d7d1a5afd36b2b411b86
  $wheloCommand ::
    Foreign.C.Types.CInt
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,U(U)><L,1*U><L,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Foreign.C.Types.CInt)
                   (ww1 :: GHC.Base.String)
                   (w :: GHC.Base.String)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 let {
                   cs :: [GHC.Types.Char]
                   = GHC.CString.unpackAppendCString#
                       "HELO "#
                       (GHC.Base.++
                          @ GHC.Types.Char
                          w
                          (GHC.CString.unpackAppendCString#
                             "\n\
                             \IP:192.168.6.129\n\
                             \Port:"#
                             (GHC.Base.++ @ GHC.Types.Char ww1 DirectoryServer.heloCommand2)))
                 } in
                 case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww2 { DEFAULT ->
                 case Data.ByteString.Internal.$wunsafePackLenChars
                        ww2
                        cs of ww6 { Data.ByteString.Internal.PS ww7 ww8 ww9 ww10 ->
                 case Network.Socket.ByteString.$wsend
                        ww
                        ww7
                        ww8
                        ww9
                        ww10
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, GHC.Tuple.() #) } } }) -}
42f1e26d718981d407007416eeda1a8c
  $wjoinCommand ::
    Foreign.C.Types.CInt
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld
         (Data.Map.Base.Map DirectoryServer.Uuid DirectoryServer.Fileserver)
    -> GHC.Prim.TVar# GHC.Prim.RealWorld GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5, Strictness: <L,U(U)><S,U><S,U><L,U><S,U>,
     Inline: [0] -}
1c2632a05af60b990fa38e37db20a9f3
  $wkillCommand ::
    Control.Concurrent.Chan.Chan GHC.Base.String
    -> Foreign.C.Types.CInt
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,1*U(A,U)><L,U(U)><S,U>, Inline: [0],
     Unfolding: (\ (w :: Control.Concurrent.Chan.Chan GHC.Base.String)
                   (ww :: Foreign.C.Types.CInt)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case DirectoryServer.killCommand3 of ww6 { Data.ByteString.Internal.PS ww7 ww8 ww9 ww10 ->
                 case Network.Socket.ByteString.$wsend
                        ww
                        ww7
                        ww8
                        ww9
                        ww10
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 Control.Concurrent.Chan.writeChan1
                   @ GHC.Base.String
                   w
                   DirectoryServer.killCommand2
                   ipv } }) -}
703e6edbcda362bf2ee0399b09af7eb3
  $wmainHandler ::
    GHC.Prim.MVar#
      GHC.Prim.RealWorld (Control.Concurrent.Chan.Stream GHC.Base.String)
    -> GHC.Prim.MVar#
         GHC.Prim.RealWorld (Control.Concurrent.Chan.Stream GHC.Base.String)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <S,U><S,U><S,U>, Inline: [0] -}
657aa542a323190989da8384273d505a
  $wpoly_go10 ::
    GHC.Prim.Int#
    -> Data.Map.Base.Map DirectoryServer.Uuid a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U>, Inline: [0] -}
da9cc2c73ec583503f8029ee6e0f280e
  $wreturndata ::
    GHC.Base.String
    -> Foreign.C.Types.CInt
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,1*U><L,U(U)><L,1*U><S,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.Base.String)
                   (ww :: Foreign.C.Types.CInt)
                   (w1 :: GHC.Base.String)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 let {
                   cs :: [GHC.Types.Char]
                   = GHC.CString.unpackAppendCString#
                       "DOWNLOAD: "#
                       (GHC.Base.++
                          @ GHC.Types.Char
                          w
                          (GHC.CString.unpackAppendCString#
                             "\\nDATA: "#
                             (GHC.Base.++ @ GHC.Types.Char w1 DirectoryServer.returndata2)))
                 } in
                 case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww2 { DEFAULT ->
                 case Data.ByteString.Internal.$wunsafePackLenChars
                        ww2
                        cs of ww6 { Data.ByteString.Internal.PS ww7 ww8 ww9 ww10 ->
                 case Network.Socket.ByteString.$wsend
                        ww
                        ww7
                        ww8
                        ww9
                        ww10
                        w2 of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, GHC.Tuple.() #) } } }) -}
bdcc6cb8c1345547c1df286bf6a176ab
  $wupdateCommand ::
    Foreign.C.Types.CInt
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld
         (Data.Map.Base.Map
            DirectoryServer.Filename DirectoryServer.Filemapping)
    -> GHC.Conc.Sync.TVar
         (Data.Map.Base.Map DirectoryServer.Uuid DirectoryServer.Fileserver)
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5, Strictness: <L,U(U)><S,U><L,1*U(U)><L,U><S,U>,
     Inline: [0] -}
3f2ce13b61a0123f35a9cadfe2021bde
  $wupdatemsg ::
    GHC.Base.String
    -> GHC.Base.String
    -> DirectoryServer.Fileserver
    -> DirectoryServer.DirectoryServer
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <L,1*U><L,1*U><L,1*U(A,A,1*U)><S,1*H><S,U>,
     Inline: [0] -}
83a300a1210e7a9647545be745f76edd
  $wuploadCommand ::
    Network.Socket.Types.Socket
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld
         (Data.Map.Base.Map
            DirectoryServer.Filename DirectoryServer.Filemapping)
    -> GHC.Conc.Sync.TVar
         (Data.Map.Base.Map DirectoryServer.Uuid DirectoryServer.Fileserver)
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <L,1*U(U(U),A,A,A,A)><S,U><L,U(U)><L,U><S,U>,
     Inline: [0] -}
40d001f83acf123c8b09fd59c83f01c1
  $wuploadmsg ::
    GHC.Base.String
    -> GHC.Base.String
    -> DirectoryServer.Fileserver
    -> DirectoryServer.DirectoryServer
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <L,1*U><L,1*U><L,1*U(A,A,1*U)><S,1*H><S,U>,
     Inline: [0] -}
2ed627e4f1e375ad1b5d41131ce90f56
  type Address = GHC.Base.String
4e5279b4ac4f33c9bccc766f849ecc43
  data DirectoryServer
    = DirectoryServer {address :: GHC.Base.String,
                       port :: GHC.Base.String,
                       filemappings :: GHC.Conc.Sync.TVar
                                         (Data.Map.Base.Map
                                            DirectoryServer.Filename DirectoryServer.Filemapping),
                       fileservers :: GHC.Conc.Sync.TVar
                                        (Data.Map.Base.Map
                                           DirectoryServer.Uuid DirectoryServer.Fileserver),
                       fileservercount :: GHC.Conc.Sync.TVar GHC.Types.Int}
1dfdf85682c548b11301287635079a14
  data Filemapping
    = Filemapping {fmfilename :: DirectoryServer.Filename,
                   fmuuid :: DirectoryServer.Uuid,
                   fmaddress :: DirectoryServer.Address,
                   fmport :: DirectoryServer.Port,
                   fmtimestamp :: DirectoryServer.Timestamp}
c2f6a817cd767b7bcb41ab7af48a3dbf
  type Filename = GHC.Base.String
152ca4be9afe18da6327746c603578f3
  data Fileserver
    = Fileserver {fsuuid :: DirectoryServer.Uuid,
                  fsaddress :: Network.Socket.HostName,
                  fsport :: DirectoryServer.Port}
583553f2079657e568adc9be4533032c
  type Port = GHC.Base.String
1d4eecebca99166edc601bf990755c40
  type Timestamp = GHC.Types.IO GHC.Base.String
4d11e7ae937a9c336bd74819be790f6e
  type Uuid = GHC.Types.Int
40815da1b9c65f7d6c9003d960f0e437
  addFilemapping ::
    DirectoryServer.DirectoryServer
    -> DirectoryServer.Filename
    -> DirectoryServer.Uuid
    -> DirectoryServer.Address
    -> DirectoryServer.Port
    -> DirectoryServer.Timestamp
    -> GHC.Conc.Sync.STM ()
  {- Arity: 7,
     Strictness: <S(LLS(S)LL),1*U(A,A,1*U(U),A,A)><L,U><L,U><L,U><L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.addFilemapping1
                  `cast`
                (<DirectoryServer.DirectoryServer>_R
                 ->_R <DirectoryServer.Filename>_R
                 ->_R <DirectoryServer.Uuid>_R
                 ->_R <DirectoryServer.Address>_R
                 ->_R <DirectoryServer.Port>_R
                 ->_R <DirectoryServer.Timestamp>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0] <()>_R)) -}
06cb3fc560310195e078d6b2a5ef8a9a
  addFilemapping1 ::
    DirectoryServer.DirectoryServer
    -> DirectoryServer.Filename
    -> DirectoryServer.Uuid
    -> DirectoryServer.Address
    -> DirectoryServer.Port
    -> DirectoryServer.Timestamp
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 7,
     Strictness: <S(LLS(S)LL),1*U(A,A,1*U(U),A,A)><L,U><L,U><L,U><L,U><L,U><S,U>,
     Unfolding: InlineRule (7, True, False)
                (\ (ds :: DirectoryServer.DirectoryServer)
                   (filename :: DirectoryServer.Filename)
                   (uuid :: DirectoryServer.Uuid)
                   (fmaddress1 :: DirectoryServer.Address)
                   (fmport1 :: DirectoryServer.Port)
                   (timestamp :: DirectoryServer.Timestamp)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ds of wild { DirectoryServer.DirectoryServer ds1 ds2 ds3 ds4 ds5 ->
                 case ds3 of wild1 { GHC.Conc.Sync.TVar tvar# ->
                 case GHC.Prim.readTVar#
                        @ GHC.Prim.RealWorld
                        @ (Data.Map.Base.Map
                             DirectoryServer.Filename DirectoryServer.Filemapping)
                        tvar#
                        eta of ds6 { (#,#) ipv ipv1 ->
                 case GHC.Prim.writeTVar#
                        @ GHC.Prim.RealWorld
                        @ (Data.Map.Base.Map
                             DirectoryServer.Filename DirectoryServer.Filemapping)
                        tvar#
                        (DirectoryServer.$sinsert_$sgo10
                           @ DirectoryServer.Filemapping
                           filename
                           (DirectoryServer.Filemapping
                              filename
                              uuid
                              fmaddress1
                              fmport1
                              timestamp)
                           ipv1)
                        ipv of s2# { DEFAULT ->
                 (# s2#, GHC.Tuple.() #) } } } }) -}
a71a2e9edb1485cf0e9fbccc49592ad6
  addFileserver ::
    DirectoryServer.DirectoryServer
    -> DirectoryServer.Uuid
    -> DirectoryServer.Address
    -> DirectoryServer.Port
    -> GHC.Conc.Sync.STM ()
  {- Arity: 5,
     Strictness: <S(LLLS(S)L),1*U(A,A,A,1*U(U),A)><L,U(U)><L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.addFileserver1
                  `cast`
                (<DirectoryServer.DirectoryServer>_R
                 ->_R <DirectoryServer.Uuid>_R
                 ->_R <DirectoryServer.Address>_R
                 ->_R <DirectoryServer.Port>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0] <()>_R)) -}
9642fed7df5f8fc18bea47148b9e319a
  addFileserver1 ::
    DirectoryServer.DirectoryServer
    -> DirectoryServer.Uuid
    -> DirectoryServer.Address
    -> DirectoryServer.Port
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <S(LLLS(S)L),1*U(A,A,A,1*U(U),A)><L,U(U)><L,U><L,U><S,U>,
     Unfolding: InlineRule (5, True, False)
                (\ (ds :: DirectoryServer.DirectoryServer)
                   (uuid :: DirectoryServer.Uuid)
                   (fsaddress1 :: DirectoryServer.Address)
                   (fsport1 :: DirectoryServer.Port)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ds of wild { DirectoryServer.DirectoryServer ds1 ds2 ds3 ds4 ds5 ->
                 case ds4 of wild1 { GHC.Conc.Sync.TVar tvar# ->
                 case GHC.Prim.readTVar#
                        @ GHC.Prim.RealWorld
                        @ (Data.Map.Base.Map
                             DirectoryServer.Uuid DirectoryServer.Fileserver)
                        tvar#
                        eta of ds6 { (#,#) ipv ipv1 ->
                 case GHC.Prim.writeTVar#
                        @ GHC.Prim.RealWorld
                        @ (Data.Map.Base.Map
                             DirectoryServer.Uuid DirectoryServer.Fileserver)
                        tvar#
                        (DirectoryServer.$sinsert_$sgo1
                           @ DirectoryServer.Fileserver
                           uuid
                           (DirectoryServer.Fileserver uuid fsaddress1 fsport1)
                           ipv1)
                        ipv of s2# { DEFAULT ->
                 (# s2#, GHC.Tuple.() #) } } } }) -}
9ecff74965aa319619ecbd24e541f931
  address :: DirectoryServer.DirectoryServer -> GHC.Base.String
  RecSel Left DirectoryServer.DirectoryServer
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLLL),1*U(1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.DirectoryServer) ->
                 case ds of wild { DirectoryServer.DirectoryServer ds1 ds2 ds3 ds4 ds5 ->
                 ds1 }) -}
c2378dbfdb145876ab8e958adac1e03a
  clientHandler ::
    Network.Socket.Types.Socket
    -> Control.Concurrent.Chan.Chan GHC.Base.String
    -> DirectoryServer.DirectoryServer
    -> LRUCache.Handle GHC.Base.String GHC.Base.String
    -> GHC.Types.IO ()
  {- Arity: 5,
     Strictness: <L,U(U(U),A,A,A,A)><L,U(U,U)><S,1*U(A,U,U(U),U(U),U(U))><L,U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.clientHandler1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <Control.Concurrent.Chan.Chan GHC.Base.String>_R
                 ->_R <DirectoryServer.DirectoryServer>_R
                 ->_R <LRUCache.Handle GHC.Base.String GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
16db80dbe063dc5e35da769a056fe4da
  clientHandler1 ::
    Network.Socket.Types.Socket
    -> Control.Concurrent.Chan.Chan GHC.Base.String
    -> DirectoryServer.DirectoryServer
    -> LRUCache.Handle GHC.Base.String GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <L,U(U(U),A,A,A,A)><L,U(U,U)><S,1*U(A,U,U(U),U(U),U(U))><L,U(U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: Control.Concurrent.Chan.Chan GHC.Base.String)
                   (w2 :: DirectoryServer.DirectoryServer)
                   (w3 :: LRUCache.Handle GHC.Base.String GHC.Base.String)
                   (w4 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w2 of ww { DirectoryServer.DirectoryServer ww1 ww2 ww3 ww4 ww5 ->
                 DirectoryServer.$wclientHandler w w1 ww2 ww3 ww4 ww5 w3 w4 }) -}
290d136beeb8fa46a6b298e729bb5f41
  clientconnectHandler ::
    Network.Socket.Types.Socket
    -> Control.Concurrent.Chan.Chan GHC.Base.String
    -> GHC.Conc.Sync.TVar GHC.Types.Int
    -> DirectoryServer.DirectoryServer
    -> LRUCache.Handle GHC.Base.String GHC.Base.String
    -> GHC.Types.IO ()
  {- Arity: 6,
     Strictness: <S(S(S)SLLS(S)),1*U(U(U),U,U,U(U),U(U))><L,U(U,U)><L,U(U)><L,U(A,U,U(U),U(U),U(U))><L,U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.clientconnectHandler1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <Control.Concurrent.Chan.Chan GHC.Base.String>_R
                 ->_R <GHC.Conc.Sync.TVar GHC.Types.Int>_R
                 ->_R <DirectoryServer.DirectoryServer>_R
                 ->_R <LRUCache.Handle GHC.Base.String GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
41831896a30412c34b3aa44b868ed1c2
  clientconnectHandler1 ::
    Network.Socket.Types.Socket
    -> Control.Concurrent.Chan.Chan GHC.Base.String
    -> GHC.Conc.Sync.TVar GHC.Types.Int
    -> DirectoryServer.DirectoryServer
    -> LRUCache.Handle GHC.Base.String GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 6,
     Strictness: <S(S(S)SLLS(S)),1*U(U(U),U,U,U(U),U(U))><L,U(U,U)><L,U(U)><L,U(A,U,U(U),U(U),U(U))><L,U(U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (6, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: Control.Concurrent.Chan.Chan GHC.Base.String)
                   (w2 :: GHC.Conc.Sync.TVar GHC.Types.Int)
                   (w3 :: DirectoryServer.DirectoryServer)
                   (w4 :: LRUCache.Handle GHC.Base.String GHC.Base.String)
                   (w5 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 case ww1
                        `cast`
                      (Foreign.C.Types.N:CInt[0]) of ww6 { GHC.Int.I32# ww7 ->
                 case ww5 of ww8 { GHC.MVar.MVar ww9 ->
                 DirectoryServer.$wclientconnectHandler
                   ww7
                   ww2
                   ww3
                   ww4
                   ww9
                   w1
                   w2
                   w3
                   w4
                   w5 } } }) -}
afce8a68af1dc50df8fc017f0a697ea8
  decrementTVar ::
    GHC.Conc.Sync.TVar GHC.Types.Int -> GHC.Conc.Sync.STM ()
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.decrementTVar1
                  `cast`
                (<GHC.Conc.Sync.TVar GHC.Types.Int>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0] <()>_R)) -}
8573cd85aa133a6ae896708b4e8c66a4
  decrementTVar1 ::
    GHC.Conc.Sync.TVar GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (tv :: GHC.Conc.Sync.TVar GHC.Types.Int)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case tv of wild { GHC.Conc.Sync.TVar tvar# ->
                 case GHC.Prim.readTVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Types.Int
                        tvar#
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Prim.writeTVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Types.Int
                        tvar#
                        (case ipv1 of wild1 { GHC.Types.I# x ->
                         GHC.Types.I# (GHC.Prim.-# x 1#) })
                        ipv of s2# { DEFAULT ->
                 (# s2#, GHC.Tuple.() #) } } }) -}
8bf09c12b3eab62962a7ffcf1a7b59a2
  dirrun :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.dirrun1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
c9fd044ff90202f144ad830c107a067f
  dirrun1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.atomically#
                        @ DirectoryServer.DirectoryServer
                        DirectoryServer.dirrun15
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Network.Socket.getAddrInfo1
                        DirectoryServer.dirrun12
                        (GHC.Base.Nothing @ Network.Socket.HostName)
                        DirectoryServer.dirrun11
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {}
                   : x ds3
                   -> case x of ww { Network.Socket.AddrInfo ww1 ww2 ww3 ww4 ww5 ww6 ->
                      case Network.Socket.$wsocket
                             ww2
                             Network.Socket.Types.Stream
                             0#
                             ipv2 of ds4 { (#,#) ipv4 ipv5 ->
                      case ipv5 of ww7 { Network.Socket.Types.MkSocket ww8 ww9 ww10 ww11 ww12 ->
                      case ww12 of ww13 { GHC.MVar.MVar ww14 ->
                      case Network.Socket.$wbind
                             ww8
                             ww14
                             ww5
                             ipv4 of ds5 { (#,#) ipv6 ipv7 ->
                      case Network.Socket.$wlisten
                             ww8
                             ww14
                             DirectoryServer.dirrun10
                             ipv6 of ds6 { (#,#) ipv8 ipv9 ->
                      case Text.Printf.$fPrintfTypeIO1
                             @ ()
                             DirectoryServer.$sprintf3
                               `cast`
                             (Sym (Data.Type.Equality.N:~[0] <*>_N) <()>_N <()>_N)
                             DirectoryServer.dirrun9
                             DirectoryServer.dirrun5
                             ipv8 of ds7 { (#,#) ipv10 ipv11 ->
                      case GHC.Prim.newMVar#
                             @ GHC.Prim.RealWorld
                             @ (Control.Concurrent.Chan.ChItem GHC.Base.String)
                             ipv10 of ds { (#,#) ipv12 ipv13 ->
                      case GHC.Prim.newMVar#
                             @ GHC.Prim.RealWorld
                             @ (GHC.MVar.MVar (Control.Concurrent.Chan.ChItem GHC.Base.String))
                             ipv12 of ds8 { (#,#) ipv14 ipv15 ->
                      let {
                        hole :: GHC.MVar.MVar
                                  (Control.Concurrent.Chan.ChItem GHC.Base.String)
                          {- Strictness: m -}
                        = GHC.MVar.MVar
                            @ (Control.Concurrent.Chan.ChItem GHC.Base.String)
                            ipv13
                      } in
                      case GHC.Prim.putMVar#
                             @ GHC.Prim.RealWorld
                             @ (GHC.MVar.MVar (Control.Concurrent.Chan.ChItem GHC.Base.String))
                             ipv15
                             hole
                             ipv14 of s2# { DEFAULT ->
                      case GHC.Prim.newMVar#
                             @ GHC.Prim.RealWorld
                             @ (GHC.MVar.MVar (Control.Concurrent.Chan.ChItem GHC.Base.String))
                             s2# of ds9 { (#,#) ipv16 ipv17 ->
                      case GHC.Prim.putMVar#
                             @ GHC.Prim.RealWorld
                             @ (GHC.MVar.MVar (Control.Concurrent.Chan.ChItem GHC.Base.String))
                             ipv17
                             hole
                             ipv16 of s2#1 { DEFAULT ->
                      case GHC.Prim.newMutVar#
                             @ (LRUCache.Cache GHC.Base.String GHC.Base.String)
                             @ GHC.Prim.RealWorld
                             DirectoryServer.dirrun4
                             s2#1 of ds10 { (#,#) ipv18 ipv19 ->
                      case GHC.Prim.atomically#
                             @ (GHC.Conc.Sync.TVar GHC.Types.Int)
                             DirectoryServer.dirrun2
                             ipv18 of ds11 { (#,#) ipv20 ipv21 ->
                      case GHC.Prim.fork#
                             @ (GHC.Types.IO ())
                             (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              GHC.Prim.catch#
                                @ ()
                                @ GHC.Exception.SomeException
                                (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case ww8
                                        `cast`
                                      (Foreign.C.Types.N:CInt[0]) of ww15 { GHC.Int.I32# ww16 ->
                                 DirectoryServer.$wclientconnectHandler
                                   ww16
                                   ww9
                                   ww10
                                   ww11
                                   ww14
                                   (Control.Concurrent.Chan.Chan @ GHC.Base.String ipv15 ipv17)
                                   ipv21
                                   ipv1
                                   (GHC.STRef.STRef
                                      @ GHC.Prim.RealWorld
                                      @ (LRUCache.Cache GHC.Base.String GHC.Base.String)
                                      ipv19)
                                     `cast`
                                   (Trans
                                        (Sym (GHC.IORef.N:IORef[0]) <LRUCache.Cache
                                                                       GHC.Base.String
                                                                       GHC.Base.String>_N)
                                        (Sym (LRUCache.N:Handle[0]
                                                  <GHC.Base.String>_R <GHC.Base.String>_R)))
                                   w })
                                GHC.Conc.Sync.childHandler1
                                eta)
                               `cast`
                             (Sym (GHC.Types.N:IO[0] <()>_R))
                             ipv20 of ds12 { (#,#) ipv22 ipv23 ->
                      DirectoryServer.$wmainHandler
                        ipv15
                        ipv17
                        ipv22 } } } } } } } } } } } } } } } } } }) -}
cd05d8ac035447a94d6269a2f4f694ef
  dirrun10 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 5#) -}
a1d12e14d560b22d763e48389d1194a8
  dirrun11 :: GHC.Base.Maybe GHC.Base.String
  {- Unfolding: (GHC.Base.Just
                   @ GHC.Base.String
                   DirectoryServer.serverport) -}
b791e52527b331200e1923173082bd6b
  dirrun12 :: GHC.Base.Maybe Network.Socket.AddrInfo
  {- Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Network.Socket.AddrInfo
                   DirectoryServer.dirrun13) -}
ec9e2caa0580933a247ca4b67f42bade
  dirrun13 :: Network.Socket.AddrInfo
  {- Strictness: m,
     Unfolding: (Network.Socket.AddrInfo
                   DirectoryServer.dirrun14
                   Network.Socket.Types.AF_UNSPEC
                   Network.Socket.Types.NoSocketType
                   Network.Socket.defaultHints3
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0]))
                   Network.Socket.defaultHints2
                   Network.Socket.defaultHints1) -}
10bdcde893510b5ba480030c3c2873d5
  dirrun14 :: [Network.Socket.AddrInfoFlag]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Network.Socket.AddrInfoFlag
                   Network.Socket.AI_PASSIVE
                   (GHC.Types.[] @ Network.Socket.AddrInfoFlag)) -}
d99e533e28757454a0c9a21696c20672
  dirrun15 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          DirectoryServer.DirectoryServer #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newTVar#
                        @ (Data.Map.Base.Map
                             DirectoryServer.Filename DirectoryServer.Filemapping)
                        @ GHC.Prim.RealWorld
                        (Data.Map.Base.Tip
                           @ DirectoryServer.Filename
                           @ DirectoryServer.Filemapping)
                        s of ds { (#,#) ipv ipv1 ->
                 case GHC.Prim.newTVar#
                        @ (Data.Map.Base.Map
                             DirectoryServer.Uuid DirectoryServer.Fileserver)
                        @ GHC.Prim.RealWorld
                        (Data.Map.Base.Tip
                           @ DirectoryServer.Uuid
                           @ DirectoryServer.Fileserver)
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.newTVar#
                        @ GHC.Types.Int
                        @ GHC.Prim.RealWorld
                        DirectoryServer.dirrun3
                        ipv2 of ds2 { (#,#) ipv4 ipv5 ->
                 (# ipv4,
                    DirectoryServer.DirectoryServer
                      DirectoryServer.serverhost
                      DirectoryServer.serverport
                      (GHC.Conc.Sync.TVar
                         @ (Data.Map.Base.Map
                              DirectoryServer.Filename DirectoryServer.Filemapping)
                         ipv1)
                      (GHC.Conc.Sync.TVar
                         @ (Data.Map.Base.Map
                              DirectoryServer.Uuid DirectoryServer.Fileserver)
                         ipv3)
                      (GHC.Conc.Sync.TVar @ GHC.Types.Int ipv5) #) } } }) -}
e6d380b2d4321764eb984ed69b550323
  dirrun2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Conc.Sync.TVar GHC.Types.Int #)
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s1# :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newTVar#
                        @ GHC.Types.Int
                        @ GHC.Prim.RealWorld
                        DirectoryServer.dirrun3
                        s1# of ds { (#,#) ipv ipv1 ->
                 (# ipv, GHC.Conc.Sync.TVar @ GHC.Types.Int ipv1 #) }) -}
2d2058a298c69862ad99f0a1b21c448c
  dirrun3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
6cc85af9a7a09b42da28662099d75aba
  dirrun4 :: LRUCache.Cache GHC.Base.String GHC.Base.String
  {- HasNoCafRefs,
     Unfolding: (LRUCache.Cache
                   @ GHC.Base.String
                   @ GHC.Base.String
                   5#
                   0#
                   0#
                   (Data.IntPSQ.Internal.Nil
                      @ LRUCache.Priority
                      @ (Data.HashPSQ.Internal.Bucket
                           GHC.Base.String LRUCache.Priority GHC.Base.String))
                     `cast`
                   (Sym (Data.HashPSQ.Internal.N:HashPSQ[0]
                             <GHC.Base.String>_R <LRUCache.Priority>_R <GHC.Base.String>_R))) -}
f9e5d56d5245345daa0b6c1b98474522
  dirrun5 ::
    [(Text.Printf.ModifierParser, Text.Printf.FieldFormatter)]
  {- Unfolding: (GHC.Types.:
                   @ (Text.Printf.ModifierParser, Text.Printf.FieldFormatter)
                   DirectoryServer.dirrun6
                   (GHC.Types.[] @ Text.Printf.UPrintf)) -}
b0172f01eb02fc8eb759852bb621ae5b
  dirrun6 :: (Text.Printf.ModifierParser, Text.Printf.FieldFormatter)
  {- Unfolding: ((DirectoryServer.dirrun8,
                  DirectoryServer.dirrun7)) -}
dafd68dee7b27aa46d21aab765c3a187
  dirrun7 :: Text.Printf.FieldFormat -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w2 :: Text.Printf.FieldFormat) ->
                 case w2 of ww { Text.Printf.FieldFormat ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww7 of ww8 { GHC.Types.C# ww9 ->
                 Text.Printf.$wformatString
                   @ GHC.Types.Char
                   Text.Printf.$fIsCharChar
                   DirectoryServer.serverport
                   ww1
                   ww2
                   ww3
                   ww9 } }) -}
01ec9bf5e1fbf7ecdbe0d85091daee9e
  dirrun8 :: Text.Printf.ModifierParser
  {- Arity: 1,
     Unfolding: (DirectoryServer.$s$fPrintfArg[]_$s$fPrintfArg[]_$cparseFormat
                   DirectoryServer.serverport) -}
9958f4cfb27aa627da20b8d1d925254b
  dirrun9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Listening on port %s\n"#) -}
e93aebda538efb71c5ed9b22789f4302
  downloadCommand ::
    Network.Socket.Types.Socket
    -> DirectoryServer.DirectoryServer
    -> GHC.Base.String
    -> LRUCache.Handle GHC.Base.String GHC.Base.String
    -> GHC.Types.IO ()
  {- Arity: 5,
     Strictness: <L,U(U(U),A,A,A,A)><S,1*U(A,A,1*U(U),A,A)><L,U><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.downloadCommand1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <DirectoryServer.DirectoryServer>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <LRUCache.Handle GHC.Base.String GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
ef1bb7a2193f6f88466f3320f1bea17a
  downloadCommand1 ::
    Network.Socket.Types.Socket
    -> DirectoryServer.DirectoryServer
    -> GHC.Base.String
    -> LRUCache.Handle GHC.Base.String GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <L,U(U(U),A,A,A,A)><S,1*U(A,A,1*U(U),A,A)><L,U><S(S),1*U(U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: DirectoryServer.DirectoryServer)
                   (w2 :: GHC.Base.String)
                   (w3 :: LRUCache.Handle GHC.Base.String GHC.Base.String)
                   (w4 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { DirectoryServer.DirectoryServer ww1 ww2 ww3 ww4 ww5 ->
                 case w3
                        `cast`
                      (Trans
                           (LRUCache.N:Handle[0] <GHC.Base.String>_R <GHC.Base.String>_R)
                           (GHC.IORef.N:IORef[0] <LRUCache.Cache
                                                    GHC.Base.String
                                                    GHC.Base.String>_N)) of ww6 { GHC.STRef.STRef ww7 ->
                 DirectoryServer.$wdownloadCommand w ww3 w2 ww7 w4 } }) -}
9bf5189d3e938216a30cd2627ee2b7fc
  downloadmsg ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> Network.Socket.Types.Socket
    -> LRUCache.Handle GHC.Base.String GHC.Base.String
    -> GHC.Types.IO ()
  {- Arity: 6,
     Strictness: <L,U><L,A><L,A><L,1*U(U(U),A,A,A,A)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.downloadmsg1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <Network.Socket.Types.Socket>_R
                 ->_R <LRUCache.Handle GHC.Base.String GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
431fa1b4df584e36d88c5a8f8a5eb455
  downloadmsg1 ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> Network.Socket.Types.Socket
    -> LRUCache.Handle GHC.Base.String GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 6,
     Strictness: <L,U><L,A><L,A><L,1*U(U(U),A,A,A,A)><L,1*U(U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (6, True, True)
                (\ (w :: GHC.Base.String)
                   (w1 :: GHC.Base.String)
                   (w2 :: GHC.Base.String)
                   (w3 :: Network.Socket.Types.Socket)
                   (w4 :: LRUCache.Handle GHC.Base.String GHC.Base.String)
                   (w5 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 DirectoryServer.$wdownloadmsg w w3 w4 w5) -}
00fb237be99595ebe2d21cbee23e6767
  filemappings ::
    DirectoryServer.DirectoryServer
    -> GHC.Conc.Sync.TVar
         (Data.Map.Base.Map
            DirectoryServer.Filename DirectoryServer.Filemapping)
  RecSel Left DirectoryServer.DirectoryServer
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLL),1*U(A,A,1*U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.DirectoryServer) ->
                 case ds of wild { DirectoryServer.DirectoryServer ds1 ds2 ds3 ds4 ds5 ->
                 ds3 }) -}
cdb884fcbdb2fe2d197c383c582860a8
  fileservercount ::
    DirectoryServer.DirectoryServer -> GHC.Conc.Sync.TVar GHC.Types.Int
  RecSel Left DirectoryServer.DirectoryServer
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLS),1*U(A,A,A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.DirectoryServer) ->
                 case ds of wild { DirectoryServer.DirectoryServer ds1 ds2 ds3 ds4 ds5 ->
                 ds5 }) -}
cfb7c55789c6f76521d3417a1f55347e
  fileservers ::
    DirectoryServer.DirectoryServer
    -> GHC.Conc.Sync.TVar
         (Data.Map.Base.Map DirectoryServer.Uuid DirectoryServer.Fileserver)
  RecSel Left DirectoryServer.DirectoryServer
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSL),1*U(A,A,A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.DirectoryServer) ->
                 case ds of wild { DirectoryServer.DirectoryServer ds1 ds2 ds3 ds4 ds5 ->
                 ds4 }) -}
fe55d00306535013eb3772e390b16be1
  fmaddress :: DirectoryServer.Filemapping -> DirectoryServer.Address
  RecSel Left DirectoryServer.Filemapping
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSLL),1*U(A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.Filemapping) ->
                 case ds of wild { DirectoryServer.Filemapping ds1 ds2 ds3 ds4 ds5 ->
                 ds3 }) -}
4843b6c032d139c8e5745379d1bac048
  fmfilename ::
    DirectoryServer.Filemapping -> DirectoryServer.Filename
  RecSel Left DirectoryServer.Filemapping
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLLL),1*U(1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.Filemapping) ->
                 case ds of wild { DirectoryServer.Filemapping ds1 ds2 ds3 ds4 ds5 ->
                 ds1 }) -}
f9eabb7b55f2c0c5045b2b9131df1170
  fmport :: DirectoryServer.Filemapping -> DirectoryServer.Port
  RecSel Left DirectoryServer.Filemapping
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLSL),1*U(A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.Filemapping) ->
                 case ds of wild { DirectoryServer.Filemapping ds1 ds2 ds3 ds4 ds5 ->
                 ds4 }) -}
81dbbab13815df602c1ededb537db95e
  fmtimestamp ::
    DirectoryServer.Filemapping -> DirectoryServer.Timestamp
  RecSel Left DirectoryServer.Filemapping
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLLS),1*U(A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.Filemapping) ->
                 case ds of wild { DirectoryServer.Filemapping ds1 ds2 ds3 ds4 ds5 ->
                 ds5 }) -}
eb968335f45240acf05cd42df4c3843d
  fmuuid :: DirectoryServer.Filemapping -> DirectoryServer.Uuid
  RecSel Left DirectoryServer.Filemapping
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLL),1*U(A,1*U(U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.Filemapping) ->
                 case ds of wild { DirectoryServer.Filemapping ds1 ds2 ds3 ds4 ds5 ->
                 ds2 }) -}
a4e1ad2ef559aec8cf2dceb2b9aa3943
  fsaddress :: DirectoryServer.Fileserver -> Network.Socket.HostName
  RecSel Left DirectoryServer.Fileserver
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.Fileserver) ->
                 case ds of wild { DirectoryServer.Fileserver ds1 ds2 ds3 ->
                 ds2 }) -}
66feb697c0fe23ce3454efb30043d944
  fsport :: DirectoryServer.Fileserver -> DirectoryServer.Port
  RecSel Left DirectoryServer.Fileserver
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.Fileserver) ->
                 case ds of wild { DirectoryServer.Fileserver ds1 ds2 ds3 ->
                 ds3 }) -}
6f28b5fa9155182dade544241392c324
  fsuuid :: DirectoryServer.Fileserver -> DirectoryServer.Uuid
  RecSel Left DirectoryServer.Fileserver
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.Fileserver) ->
                 case ds of wild { DirectoryServer.Fileserver ds1 ds2 ds3 ->
                 ds1 }) -}
4a4a21d30ea56291fda1529846412d83
  getFilemappingaddress ::
    DirectoryServer.Filemapping -> DirectoryServer.Address
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSLL),1*U(A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.Filemapping) ->
                 case ds of wild { DirectoryServer.Filemapping ds1 ds2 ds3 ds4 ds5 ->
                 ds3 }) -}
a0ceb1aea4ef50465006a9adc884a77c
  getFilemappingport ::
    DirectoryServer.Filemapping -> DirectoryServer.Port
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLSL),1*U(A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.Filemapping) ->
                 case ds of wild { DirectoryServer.Filemapping ds1 ds2 ds3 ds4 ds5 ->
                 ds4 }) -}
343e51b38520e571c746382a39da57ed
  getFilemappingtimestamp ::
    DirectoryServer.Filemapping -> DirectoryServer.Timestamp
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLLS),1*U(A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.Filemapping) ->
                 case ds of wild { DirectoryServer.Filemapping ds1 ds2 ds3 ds4 ds5 ->
                 ds5 }) -}
d4046d1e6d07bd5570549eabfe383100
  getFilemappinguuid ::
    DirectoryServer.Filemapping -> DirectoryServer.Uuid
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLL),1*U(A,1*U(U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.Filemapping) ->
                 case ds of wild { DirectoryServer.Filemapping ds1 ds2 ds3 ds4 ds5 ->
                 ds2 }) -}
dbdfab842656bad52eb3d5597453113e
  getFileserveraddress ::
    DirectoryServer.Fileserver -> Network.Socket.HostName
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.Fileserver) ->
                 case ds of wild { DirectoryServer.Fileserver ds1 ds2 ds3 ->
                 ds2 }) -}
41fd585c77f93792b102f1bd91a9f914
  getFileserverport ::
    DirectoryServer.Fileserver -> DirectoryServer.Port
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.Fileserver) ->
                 case ds of wild { DirectoryServer.Fileserver ds1 ds2 ds3 ->
                 ds3 }) -}
1e7a2a6c413ab87b0a9536ffd3231fff
  heloCommand ::
    Network.Socket.Types.Socket
    -> DirectoryServer.DirectoryServer
    -> GHC.Base.String
    -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <S,1*U(U(U),A,A,A,A)><S,1*U(A,1*U,A,A,A)><L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.heloCommand1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <DirectoryServer.DirectoryServer>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
aa6331eaf06dd2d998d597efecd61ae2
  heloCommand1 ::
    Network.Socket.Types.Socket
    -> DirectoryServer.DirectoryServer
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <S,1*U(U(U),A,A,A,A)><S,1*U(A,1*U,A,A,A)><L,1*U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: DirectoryServer.DirectoryServer)
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 case w1 of ww6 { DirectoryServer.DirectoryServer ww7 ww8 ww9 ww10 ww11 ->
                 DirectoryServer.$wheloCommand ww1 ww8 w2 w3 } }) -}
6a90aa1199cae302411d37e6ec4a19b2
  heloCommand2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \StudentID:12306421\n\
                   \\n"#) -}
6e15e6d83e33242dfa1290be32e29aa2
  incrementFileserverCount ::
    GHC.Conc.Sync.TVar GHC.Types.Int -> GHC.Conc.Sync.STM ()
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.incrementFileserverCount1
                  `cast`
                (<GHC.Conc.Sync.TVar GHC.Types.Int>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0] <()>_R)) -}
7e8fb6bea99ededd95d800dae8fec12f
  incrementFileserverCount1 ::
    GHC.Conc.Sync.TVar GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (tv :: GHC.Conc.Sync.TVar GHC.Types.Int)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case tv of wild { GHC.Conc.Sync.TVar tvar# ->
                 case GHC.Prim.readTVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Types.Int
                        tvar#
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Prim.writeTVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Types.Int
                        tvar#
                        (case ipv1 of wild1 { GHC.Types.I# y ->
                         GHC.Types.I# (GHC.Prim.+# 1# y) })
                        ipv of s2# { DEFAULT ->
                 (# s2#, GHC.Tuple.() #) } } }) -}
7c365d0e66da5194af332e4f4e729545
  incrementTVar ::
    GHC.Conc.Sync.TVar GHC.Types.Int -> GHC.Conc.Sync.STM ()
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.incrementFileserverCount1
                  `cast`
                (<GHC.Conc.Sync.TVar GHC.Types.Int>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0] <()>_R)) -}
03fb38cad425086dec2e230b0844ca01
  joinCommand ::
    Network.Socket.Types.Socket
    -> DirectoryServer.DirectoryServer
    -> GHC.Base.String
    -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <S,1*U(U(U),A,A,A,A)><S(LLLS(S)S(S)),1*U(A,A,A,1*U(U),U(U))><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.joinCommand1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <DirectoryServer.DirectoryServer>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
305e2cc18c66eed6ed34a314836b4d14
  joinCommand1 ::
    Network.Socket.Types.Socket
    -> DirectoryServer.DirectoryServer
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <S,1*U(U(U),A,A,A,A)><S(LLLS(S)S(S)),1*U(A,A,A,1*U(U),U(U))><L,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: DirectoryServer.DirectoryServer)
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 case w1 of ww6 { DirectoryServer.DirectoryServer ww7 ww8 ww9 ww10 ww11 ->
                 case ww10 of ww12 { GHC.Conc.Sync.TVar ww13 ->
                 case ww11 of ww14 { GHC.Conc.Sync.TVar ww15 ->
                 DirectoryServer.$wjoinCommand ww1 ww13 ww15 w2 w3 } } } }) -}
0718455066661c0005ee5b05b03369c3
  killCommand ::
    Control.Concurrent.Chan.Chan GHC.Base.String
    -> Network.Socket.Types.Socket -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,1*U(A,U)><S,1*U(U(U),A,A,A,A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.killCommand1
                  `cast`
                (<Control.Concurrent.Chan.Chan GHC.Base.String>_R
                 ->_R <Network.Socket.Types.Socket>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
be9bf6477a824ce70498ccad5ede83d4
  killCommand1 ::
    Control.Concurrent.Chan.Chan GHC.Base.String
    -> Network.Socket.Types.Socket
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,1*U(A,U)><S,1*U(U(U),A,A,A,A)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Control.Concurrent.Chan.Chan GHC.Base.String)
                   (w1 :: Network.Socket.Types.Socket)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 DirectoryServer.$wkillCommand w ww1 w2 }) -}
2230aec9eb660cec59dbc2a03c19fc43
  killCommand2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "KILL_SERVICE"#) -}
7fb5b0c4637b5f0389a973addd25bb3a
  killCommand3 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "Service is now terminating!"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
0b96fa02511f9fd279442d00f966336c
  lookupFilemapping ::
    DirectoryServer.DirectoryServer
    -> DirectoryServer.Filename
    -> GHC.Conc.Sync.STM (GHC.Base.Maybe DirectoryServer.Filemapping)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LLS(S)LL),1*U(A,A,1*U(U),A,A)><L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.lookupFilemapping1
                  `cast`
                (<DirectoryServer.DirectoryServer>_R
                 ->_R <DirectoryServer.Filename>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0]
                               <GHC.Base.Maybe DirectoryServer.Filemapping>_R)) -}
0a2dfd336a36a1f653a977c8a62e0675
  lookupFilemapping1 ::
    DirectoryServer.DirectoryServer
    -> DirectoryServer.Filename
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Base.Maybe DirectoryServer.Filemapping #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LLS(S)LL),1*U(A,A,1*U(U),A,A)><L,1*U><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: DirectoryServer.DirectoryServer)
                   (filename :: DirectoryServer.Filename)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ds of wild { DirectoryServer.DirectoryServer ds1 ds2 ds3 ds4 ds5 ->
                 case ds3 of wild1 { GHC.Conc.Sync.TVar tvar# ->
                 case GHC.Prim.readTVar#
                        @ GHC.Prim.RealWorld
                        @ (Data.Map.Base.Map
                             DirectoryServer.Filename DirectoryServer.Filemapping)
                        tvar#
                        eta of ds6 { (#,#) ipv ipv1 ->
                 (# ipv,
                    DirectoryServer.$slookup1
                      @ DirectoryServer.Filemapping
                      filename
                      ipv1 #) } } }) -}
d0bcc31388262422c1dca64fb011ad1e
  lookupFileserver ::
    DirectoryServer.DirectoryServer
    -> DirectoryServer.Uuid
    -> GHC.Conc.Sync.STM (GHC.Base.Maybe DirectoryServer.Fileserver)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LLLS(S)L),1*U(A,A,A,1*U(U),A)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.lookupFileserver1
                  `cast`
                (<DirectoryServer.DirectoryServer>_R
                 ->_R <DirectoryServer.Uuid>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0]
                               <GHC.Base.Maybe DirectoryServer.Fileserver>_R)) -}
97da524ddf24889a831728bf7ba9135d
  lookupFileserver1 ::
    DirectoryServer.DirectoryServer
    -> DirectoryServer.Uuid
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Base.Maybe DirectoryServer.Fileserver #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LLLS(S)L),1*U(A,A,A,1*U(U),A)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: DirectoryServer.DirectoryServer)
                   (uuid :: DirectoryServer.Uuid)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ds of wild { DirectoryServer.DirectoryServer ds1 ds2 ds3 ds4 ds5 ->
                 case ds4 of wild1 { GHC.Conc.Sync.TVar tvar# ->
                 case GHC.Prim.readTVar#
                        @ GHC.Prim.RealWorld
                        @ (Data.Map.Base.Map
                             DirectoryServer.Uuid DirectoryServer.Fileserver)
                        tvar#
                        eta of ds6 { (#,#) ipv ipv1 ->
                 (# ipv,
                    DirectoryServer.$slookup3
                      @ DirectoryServer.Fileserver
                      uuid
                      ipv1 #) } } }) -}
eeea34f8e453087d673a52ba3be902f3
  mainHandler ::
    Network.Socket.Types.Socket
    -> Control.Concurrent.Chan.Chan GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,A><S(SS),1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.mainHandler1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <Control.Concurrent.Chan.Chan GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
ff652a879f125bec57aaba68d3c1f7ec
  mainHandler1 ::
    Network.Socket.Types.Socket
    -> Control.Concurrent.Chan.Chan GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,A><S(SS),1*U(U,U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: Control.Concurrent.Chan.Chan GHC.Base.String)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { Control.Concurrent.Chan.Chan ww1 ww2 ->
                 DirectoryServer.$wmainHandler ww1 ww2 w2 }) -}
b2e17718d86ed064fc5e890a2873b343
  maxnumThreads :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 4#) -}
cc8ffbb0a2238d391f65f963243da0ce
  newDirectoryServer ::
    GHC.Base.String
    -> GHC.Base.String -> GHC.Types.IO DirectoryServer.DirectoryServer
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.newDirectoryServer1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <DirectoryServer.DirectoryServer>_R)) -}
63acbfcba2039df496bc9120d0334429
  newDirectoryServer1 ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          DirectoryServer.DirectoryServer #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (address1 :: GHC.Base.String)
                   (port1 :: GHC.Base.String)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.atomically#
                   @ DirectoryServer.DirectoryServer
                   (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    case GHC.Prim.newTVar#
                           @ (Data.Map.Base.Map
                                DirectoryServer.Filename DirectoryServer.Filemapping)
                           @ GHC.Prim.RealWorld
                           (Data.Map.Base.Tip
                              @ DirectoryServer.Filename
                              @ DirectoryServer.Filemapping)
                           s of ds { (#,#) ipv ipv1 ->
                    case GHC.Prim.newTVar#
                           @ (Data.Map.Base.Map
                                DirectoryServer.Uuid DirectoryServer.Fileserver)
                           @ GHC.Prim.RealWorld
                           (Data.Map.Base.Tip
                              @ DirectoryServer.Uuid
                              @ DirectoryServer.Fileserver)
                           ipv of ds1 { (#,#) ipv2 ipv3 ->
                    case GHC.Prim.newTVar#
                           @ GHC.Types.Int
                           @ GHC.Prim.RealWorld
                           DirectoryServer.dirrun3
                           ipv2 of ds2 { (#,#) ipv4 ipv5 ->
                    (# ipv4,
                       DirectoryServer.DirectoryServer
                         address1
                         port1
                         (GHC.Conc.Sync.TVar
                            @ (Data.Map.Base.Map
                                 DirectoryServer.Filename DirectoryServer.Filemapping)
                            ipv1)
                         (GHC.Conc.Sync.TVar
                            @ (Data.Map.Base.Map
                                 DirectoryServer.Uuid DirectoryServer.Fileserver)
                            ipv3)
                         (GHC.Conc.Sync.TVar @ GHC.Types.Int ipv5) #) } } })
                   eta) -}
5a8e391177423720c376f32cca10aa9e
  newFilemapping ::
    DirectoryServer.Filename
    -> DirectoryServer.Uuid
    -> DirectoryServer.Address
    -> DirectoryServer.Port
    -> DirectoryServer.Timestamp
    -> GHC.Conc.Sync.STM DirectoryServer.Filemapping
  {- Arity: 6, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.newFilemapping1
                  `cast`
                (<DirectoryServer.Filename>_R
                 ->_R <DirectoryServer.Uuid>_R
                 ->_R <DirectoryServer.Address>_R
                 ->_R <DirectoryServer.Port>_R
                 ->_R <DirectoryServer.Timestamp>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0]
                               <DirectoryServer.Filemapping>_R)) -}
995e1aeecf98a7596760725399be96e6
  newFilemapping1 ::
    DirectoryServer.Filename
    -> DirectoryServer.Uuid
    -> DirectoryServer.Address
    -> DirectoryServer.Port
    -> DirectoryServer.Timestamp
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          DirectoryServer.Filemapping #)
  {- Arity: 6, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><S,U>,
     Unfolding: InlineRule (6, True, False)
                (\ (fmfilename1 :: DirectoryServer.Filename)
                   (fmuuid1 :: DirectoryServer.Uuid)
                   (fmaddress1 :: DirectoryServer.Address)
                   (fmport1 :: DirectoryServer.Port)
                   (fmtimestamp1 :: DirectoryServer.Timestamp)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    DirectoryServer.Filemapping
                      fmfilename1
                      fmuuid1
                      fmaddress1
                      fmport1
                      fmtimestamp1 #)) -}
ad061eb96505b1035acfbcad28eb6834
  newFileserver ::
    DirectoryServer.Uuid
    -> DirectoryServer.Address
    -> DirectoryServer.Port
    -> GHC.Conc.Sync.STM DirectoryServer.Fileserver
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.newFileserver1
                  `cast`
                (<DirectoryServer.Uuid>_R
                 ->_R <DirectoryServer.Address>_R
                 ->_R <DirectoryServer.Port>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0]
                               <DirectoryServer.Fileserver>_R)) -}
9ceeca6f67d0ef7f2c038e790300c6c5
  newFileserver1 ::
    DirectoryServer.Uuid
    -> DirectoryServer.Address
    -> DirectoryServer.Port
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          DirectoryServer.Fileserver #)
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,U><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ (fsuuid1 :: DirectoryServer.Uuid)
                   (fsaddress1 :: DirectoryServer.Address)
                   (fsport1 :: DirectoryServer.Port)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, DirectoryServer.Fileserver fsuuid1 fsaddress1 fsport1 #)) -}
46aa55a26061e4b321ddb3eb28eb0f4f
  port :: DirectoryServer.DirectoryServer -> GHC.Base.String
  RecSel Left DirectoryServer.DirectoryServer
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLLL),1*U(A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DirectoryServer.DirectoryServer) ->
                 case ds of wild { DirectoryServer.DirectoryServer ds1 ds2 ds3 ds4 ds5 ->
                 ds2 }) -}
532c4d7a28e939869b9254d45b1d3cc4
  returnb :: a -> GHC.Types.IO a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                GHC.Base.returnIO1
                  `cast`
                (forall (a :: <*>_N). <a>_R ->_R Sym (GHC.Types.N:IO[0] <a>_R)) -}
9aa0e4167b6be9a5e19cbe7d2ce80b08
  returndata ::
    GHC.Base.String
    -> Network.Socket.Types.Socket
    -> GHC.Base.String
    -> GHC.Types.IO ()
  {- Arity: 4, Strictness: <L,1*U><S,1*U(U(U),A,A,A,A)><L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.returndata1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R <Network.Socket.Types.Socket>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
516e8e048d149cb9b0481f7f7cfabeee
  returndata1 ::
    GHC.Base.String
    -> Network.Socket.Types.Socket
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,1*U><S,1*U(U(U),A,A,A,A)><L,1*U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: GHC.Base.String)
                   (w1 :: Network.Socket.Types.Socket)
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 DirectoryServer.$wreturndata w ww1 w2 w3 }) -}
de50f220cce81894c1950c159fdc31b2
  returndata2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \\n"#) -}
dcfc9501eb44fb4c492ce4ed6011d60b
  serverhost :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "localhost"#) -}
fdeb521ba7b02354d9a2d5f532b8c7c6
  serverport :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "7008"#) -}
722871eeab7f5709f9b8d485c21e4858
  updateCommand ::
    Network.Socket.Types.Socket
    -> DirectoryServer.DirectoryServer
    -> GHC.Base.String
    -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <S,1*U(U(U),A,A,A,A)><S(LLS(S)LL),1*U(A,A,U(U),1*U(U),A)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.updateCommand1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <DirectoryServer.DirectoryServer>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
4313a9a51bf80103cb3c32dd6d0a5475
  updateCommand1 ::
    Network.Socket.Types.Socket
    -> DirectoryServer.DirectoryServer
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <S,1*U(U(U),A,A,A,A)><S(LLS(S)LL),1*U(A,A,U(U),1*U(U),A)><L,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: DirectoryServer.DirectoryServer)
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 case w1 of ww6 { DirectoryServer.DirectoryServer ww7 ww8 ww9 ww10 ww11 ->
                 case ww9 of ww12 { GHC.Conc.Sync.TVar ww13 ->
                 DirectoryServer.$wupdateCommand ww1 ww13 ww10 w2 w3 } } }) -}
86cf5def5e66ae1b8ebe3ad2715d6c3b
  updatemsg ::
    Network.Socket.Types.Socket
    -> GHC.Base.String
    -> GHC.Base.String
    -> DirectoryServer.Fileserver
    -> GHC.Types.Int
    -> DirectoryServer.DirectoryServer
    -> GHC.Types.IO ()
  {- Arity: 7,
     Strictness: <L,A><L,1*U><L,1*U><L,1*U(A,A,1*U)><L,A><S,1*H><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.updatemsg1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <DirectoryServer.Fileserver>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <DirectoryServer.DirectoryServer>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
f4b094b56678a2a20fb575107cb27690
  updatemsg1 ::
    Network.Socket.Types.Socket
    -> GHC.Base.String
    -> GHC.Base.String
    -> DirectoryServer.Fileserver
    -> GHC.Types.Int
    -> DirectoryServer.DirectoryServer
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 7,
     Strictness: <L,A><L,1*U><L,1*U><L,1*U(A,A,1*U)><L,A><S,1*H><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (7, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: GHC.Base.String)
                   (w2 :: GHC.Base.String)
                   (w3 :: DirectoryServer.Fileserver)
                   (w4 :: GHC.Types.Int)
                   (w5 :: DirectoryServer.DirectoryServer)
                   (w6 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w5 of w7 { DirectoryServer.DirectoryServer ipv ipv1 ipv2 ipv3 ipv4 ->
                 DirectoryServer.$wupdatemsg w1 w2 w3 w7 w6 }) -}
0e59eceffca02248c8458f6f22624018
  uploadCommand ::
    Network.Socket.Types.Socket
    -> DirectoryServer.DirectoryServer
    -> GHC.Base.String
    -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <L,1*U(U(U),A,A,A,A)><S(LLS(S)LL),1*U(A,A,U(U),U(U),A)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.uploadCommand1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <DirectoryServer.DirectoryServer>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
a07009b5938eb5d74cd92cb28b8e7d9c
  uploadCommand1 ::
    Network.Socket.Types.Socket
    -> DirectoryServer.DirectoryServer
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <L,1*U(U(U),A,A,A,A)><S(LLS(S)LL),1*U(A,A,U(U),U(U),A)><L,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: DirectoryServer.DirectoryServer)
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { DirectoryServer.DirectoryServer ww1 ww2 ww3 ww4 ww5 ->
                 case ww3 of ww6 { GHC.Conc.Sync.TVar ww7 ->
                 DirectoryServer.$wuploadCommand w ww7 ww4 w2 w3 } }) -}
770a0379e2bdef8b99fbcd38ac332c6a
  uploadmsg ::
    Network.Socket.Types.Socket
    -> GHC.Base.String
    -> GHC.Base.String
    -> DirectoryServer.Fileserver
    -> GHC.Types.Int
    -> DirectoryServer.DirectoryServer
    -> GHC.Types.IO ()
  {- Arity: 7,
     Strictness: <L,A><L,1*U><L,1*U><L,1*U(A,A,1*U)><L,A><S,1*H><S,U>,
     Unfolding: InlineRule (0, True, True)
                DirectoryServer.uploadmsg1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <DirectoryServer.Fileserver>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <DirectoryServer.DirectoryServer>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
d67c8d6b1e1f8b585c9d9f8e9a4f1b70
  uploadmsg1 ::
    Network.Socket.Types.Socket
    -> GHC.Base.String
    -> GHC.Base.String
    -> DirectoryServer.Fileserver
    -> GHC.Types.Int
    -> DirectoryServer.DirectoryServer
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 7,
     Strictness: <L,A><L,1*U><L,1*U><L,1*U(A,A,1*U)><L,A><S,1*H><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (7, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: GHC.Base.String)
                   (w2 :: GHC.Base.String)
                   (w3 :: DirectoryServer.Fileserver)
                   (w4 :: GHC.Types.Int)
                   (w5 :: DirectoryServer.DirectoryServer)
                   (w6 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w5 of w7 { DirectoryServer.DirectoryServer ipv ipv1 ipv2 ipv3 ipv4 ->
                 DirectoryServer.$wuploadmsg w1 w2 w3 w7 w6 }) -}
"SPEC/DirectoryServer $fPrintfArg[]_$cparseFormat @ Char" [ALWAYS] forall ($dIsChar :: Text.Printf.IsChar
                                                                                         GHC.Types.Char)
  Text.Printf.$fPrintfArg[]_$cparseFormat @ GHC.Types.Char $dIsChar
  = DirectoryServer.$s$fPrintfArg[]_$s$fPrintfArg[]_$cparseFormat
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

