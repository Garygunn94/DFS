
==================== FINAL INTERFACE ====================
2016-12-10 14:08:03.610169 UTC

interface DFS-0.1.0.0-8an8YU57OtlLJWbvpjsF8P:FileServer 8001
  interface hash: 38672dfea4a0908700fe663f5205e745
  ABI hash: 681cb3bceee68021f7d718b31efed383
  export-list hash: 10e260fa5a7c95df20459083125160f2
  orphan hash: 778deddf30559e8ab57acfea64237ccf
  flag hash: d134173b433996321234ccc0e186b868
  sig of: Nothing
  used TH splices: False
  where
exports:
  FileServer.clientHandler
  FileServer.clientconnectHandler
  FileServer.decrementTVar
  FileServer.downloadCommand
  FileServer.heloCommand
  FileServer.hostname
  FileServer.incrementTVar
  FileServer.killCommand
  FileServer.mainHandler
  FileServer.maxnumThreads
  FileServer.newFileServer
  FileServer.run
  FileServer.serverhost
  FileServer.serverport
  FileServer.updateCommand
  FileServer.uploadCommand
  FileServer.FileServer{FileServer.FileServer address port}
module dependencies:
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.0.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.2.6.2@directory-1.2.6.2
                      filepath-1.4.1.0@filepath-1.4.1.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
                      network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG
                      split-0.2.3.1@split-0.2.3.1-IJKK4pOCYGKud0jZImZke
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      time-1.6.0.1@time-1.6.0.1 unix-2.7.2.0@unix-2.7.2.0
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network.Socket
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
import  -/  base-4.9.0.0:Control.Concurrent 98a3a12a2ace3d27758947d9f1041f90
import  -/  base-4.9.0.0:Control.Concurrent.Chan d55a50c16a7726146797e8faa62a516b
import  -/  base-4.9.0.0:Control.Exception 8762ca621bc15a8c1e8e34c703aba1aa
import  -/  base-4.9.0.0:Control.Monad 7767aebfd53f0b584cef2fe66ad3986c
import  -/  base-4.9.0.0:Data.Functor 6fc476505db88d678632a4a838125f13
import  -/  base-4.9.0.0:Data.OldList 0058409f994fb13ae0616e3f1e5b4dae
import  -/  base-4.9.0.0:Data.Word 34db1dae76cf3db02c16aed2b8427443
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.Conc.Sync 800ad52ae188c67fd514a07ba8a64fcc
import  -/  base-4.9.0.0:GHC.List 13d2451194c1c6e53b4f4f07947736dd
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  base-4.9.0.0:System.Environment ee0914a962f5508d0fd404c89ee4999b
import  -/  base-4.9.0.0:System.IO eb1d40aa793a4047069a5023f2ebcfe3
import  -/  base-4.9.0.0:Text.Printf 981db3fab2db52a63576c71c790058bf
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Char8 49426525406a134b63e5a11b574dbd77
import  -/  directory-1.2.6.2@directory-1.2.6.2:System.Directory f7c57c4a392d1767b38addc37d00ceed
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network fe4a3a40192a968130a171e8dca1101b
import  -/  network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network.Socket 74f40911ccc642ef529205732bba4073
import  -/  network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network.Socket.ByteString 5df469a3defc2172b49042eabe647e67
import  -/  network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network.Socket.Internal 6670c66c398fead19fd25cb50e6956e6
import  -/  network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network.Socket.Types a21cb2ffc6eaad6f8e6da2810c802283
import  -/  split-0.2.3.1@split-0.2.3.1-IJKK4pOCYGKud0jZImZke:Data.List.Split 46e8ab9554123893f27696c65d88e63d
import  -/  split-0.2.3.1@split-0.2.3.1-IJKK4pOCYGKud0jZImZke:Data.List.Split.Internals 91fdfee0190d7e76d57defeef91ab9d3
import  -/  stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Concurrent.STM fd77bc755b79c492176ed8b0d0d3f933
import  -/  stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Concurrent.STM.TVar 862fffea7e508d7927194033396aaee0
492a42925088fff7caf283727f91f431
  $s$fPrintfArg[]_$s$fPrintfArg[]_$cparseFormat ::
    [GHC.Types.Char] -> Text.Printf.ModifierParser
  {- Arity: 2, Strictness: <L,A><S,1*U>m,
     Unfolding: InlineRule (2, True, False)
                (\ (ds1 :: [GHC.Types.Char]) (ds2 :: [GHC.Types.Char]) ->
                 case ds2 of wild {
                   [] -> Text.Printf.errorShortFormat @ Text.Printf.FormatParse
                   : c1 cs1
                   -> Text.Printf.FormatParse
                        (GHC.Types.[] @ GHC.Types.Char)
                        c1
                        cs1 }) -}
97c84f5efd900b3e169d10a796e6ec14
  $sprintf3 :: () GHC.Types.~~ ()
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq# @ * @ * @ () @ () @~ <()>_N) -}
d0614d5451bc93f08f1d0d7c757376ee
  $tc'FileServer :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1179626732742965333##
                   13619476335871480000##
                   FileServer.$trModule
                   FileServer.$tc'FileServer1) -}
2b1c2df74b134bb923d604668396b605
  $tc'FileServer1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'FileServer"#) -}
76d817a35543e07472656ea4aa5b643d
  $tcFileServer :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2757051951081218926##
                   3076670520710232164##
                   FileServer.$trModule
                   FileServer.$trModule1) -}
a970d4145f7ca7e6c5472483704b408f
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   FileServer.$trModule2
                   FileServer.$trModule1) -}
3fc63f88c2dcbafddc86a1ad3a92c0d9
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "FileServer"#) -}
62808f924a56303ca4b726b99ad1c03b
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "DFS-0.1.0.0-8an8YU57OtlLJWbvpjsF8P"#) -}
357339e6abaafdc82283d827169eefae
  $wclientHandler ::
    Network.Socket.Types.Socket
    -> Control.Concurrent.Chan.Chan GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,U(U(U),A,A,A,A)><L,U(U,U)><L,U><S,U>,
     Inline: [0] -}
11ad3e2c0caf20b0635a777f90e7ea1e
  $wclientconnectHandler ::
    GHC.Prim.Int#
    -> Network.Socket.Types.Family
    -> Network.Socket.Types.SocketType
    -> Network.Socket.Types.ProtocolNumber
    -> GHC.Prim.MVar#
         GHC.Prim.RealWorld Network.Socket.Types.SocketStatus
    -> Control.Concurrent.Chan.Chan GHC.Base.String
    -> GHC.Conc.Sync.TVar GHC.Types.Int
    -> FileServer.FileServer
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 9,
     Strictness: <S,U><S,U><L,U><L,U(U)><S,U><L,U(U,U)><L,U(U)><L,U(A,U)><S,U>,
     Inline: [0] -}
868fea05d30e44ddfe748d72ff0ac53b
  $wdownloadCommand ::
    Network.Socket.Types.Socket
    -> FileServer.FileServer
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,1*U(U(U),A,A,A,A)><S,1*H><L,U><S,U>,
     Inline: [0] -}
2761f4f6e117db8863d39b3a003c6aa9
  $wheloCommand ::
    Foreign.C.Types.CInt
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,U(U)><L,1*U><L,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Foreign.C.Types.CInt)
                   (ww1 :: GHC.Base.String)
                   (w :: GHC.Base.String)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 let {
                   cs1 :: [GHC.Types.Char]
                   = GHC.CString.unpackAppendCString#
                       "HELO "#
                       (GHC.Base.++
                          @ GHC.Types.Char
                          w
                          (GHC.CString.unpackAppendCString#
                             "\n\
                             \IP:192.168.6.129\n\
                             \Port:"#
                             (GHC.Base.++ @ GHC.Types.Char ww1 FileServer.heloCommand2)))
                 } in
                 case GHC.List.$wlenAcc @ GHC.Types.Char cs1 0# of ww2 { DEFAULT ->
                 case Data.ByteString.Internal.$wunsafePackLenChars
                        ww2
                        cs1 of ww6 { Data.ByteString.Internal.PS ww7 ww8 ww9 ww10 ->
                 case Network.Socket.ByteString.$wsend
                        ww
                        ww7
                        ww8
                        ww9
                        ww10
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, GHC.Tuple.() #) } } }) -}
3d465b790f8a4912967e7501772b35c0
  $wkillCommand ::
    Control.Concurrent.Chan.Chan GHC.Base.String
    -> Foreign.C.Types.CInt
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,1*U(A,U)><L,U(U)><S,U>, Inline: [0],
     Unfolding: (\ (w :: Control.Concurrent.Chan.Chan GHC.Base.String)
                   (ww :: Foreign.C.Types.CInt)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case FileServer.killCommand3 of ww6 { Data.ByteString.Internal.PS ww7 ww8 ww9 ww10 ->
                 case Network.Socket.ByteString.$wsend
                        ww
                        ww7
                        ww8
                        ww9
                        ww10
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 Control.Concurrent.Chan.writeChan1
                   @ GHC.Base.String
                   w
                   FileServer.killCommand2
                   ipv } }) -}
54b14a45c148c7b80da5f6ff5d381dfc
  $wmainHandler ::
    GHC.Prim.MVar#
      GHC.Prim.RealWorld (Control.Concurrent.Chan.Stream GHC.Base.String)
    -> GHC.Prim.MVar#
         GHC.Prim.RealWorld (Control.Concurrent.Chan.Stream GHC.Base.String)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <S,U><S,U><S,U>, Inline: [0] -}
c267b3c30f76765092442d99af7001d9
  $wupdateCommand ::
    Network.Socket.Types.Socket
    -> FileServer.FileServer
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,1*U(U(U),A,A,A,A)><S,1*H><L,U><S,U>,
     Inline: [0] -}
9e383ddda4f16b6f434337a2b424a754
  $wuploadCommand ::
    Network.Socket.Types.Socket
    -> FileServer.FileServer
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,1*U(U(U),A,A,A,A)><S,1*H><L,U><S,U>,
     Inline: [0] -}
1829a911809c0f3a6e9824e16ccba05d
  data FileServer
    = FileServer {address :: GHC.Base.String, port :: GHC.Base.String}
015588ad823e837f60610dfc8da19d0c
  address :: FileServer.FileServer -> GHC.Base.String
  RecSel Left FileServer.FileServer
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: FileServer.FileServer) ->
                 case ds1 of wild { FileServer.FileServer ds2 ds3 -> ds2 }) -}
f7d1a8e588a0a3b93862623363509e4e
  clientHandler ::
    Network.Socket.Types.Socket
    -> Control.Concurrent.Chan.Chan GHC.Base.String
    -> FileServer.FileServer
    -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <L,U(U(U),A,A,A,A)><L,U(U,U)><S,1*U(A,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.clientHandler1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <Control.Concurrent.Chan.Chan GHC.Base.String>_R
                 ->_R <FileServer.FileServer>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
c90614a414bd5de71c5458f74621b109
  clientHandler1 ::
    Network.Socket.Types.Socket
    -> Control.Concurrent.Chan.Chan GHC.Base.String
    -> FileServer.FileServer
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <L,U(U(U),A,A,A,A)><L,U(U,U)><S,1*U(A,U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: Control.Concurrent.Chan.Chan GHC.Base.String)
                   (w2 :: FileServer.FileServer)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w2 of ww { FileServer.FileServer ww1 ww2 ->
                 FileServer.$wclientHandler w w1 ww2 w3 }) -}
5930081a4010d4ef62ee77b893102dcb
  clientconnectHandler ::
    Network.Socket.Types.Socket
    -> Control.Concurrent.Chan.Chan GHC.Base.String
    -> GHC.Conc.Sync.TVar GHC.Types.Int
    -> FileServer.FileServer
    -> GHC.Types.IO ()
  {- Arity: 5,
     Strictness: <S(S(S)SLLS(S)),1*U(U(U),U,U,U(U),U(U))><L,U(U,U)><L,U(U)><L,U(A,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.clientconnectHandler1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <Control.Concurrent.Chan.Chan GHC.Base.String>_R
                 ->_R <GHC.Conc.Sync.TVar GHC.Types.Int>_R
                 ->_R <FileServer.FileServer>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
288327d148a2346607f37ad10e3758f7
  clientconnectHandler1 ::
    Network.Socket.Types.Socket
    -> Control.Concurrent.Chan.Chan GHC.Base.String
    -> GHC.Conc.Sync.TVar GHC.Types.Int
    -> FileServer.FileServer
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <S(S(S)SLLS(S)),1*U(U(U),U,U,U(U),U(U))><L,U(U,U)><L,U(U)><L,U(A,U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: Control.Concurrent.Chan.Chan GHC.Base.String)
                   (w2 :: GHC.Conc.Sync.TVar GHC.Types.Int)
                   (w3 :: FileServer.FileServer)
                   (w4 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 case ww1
                        `cast`
                      (Foreign.C.Types.N:CInt[0]) of ww6 { GHC.Int.I32# ww7 ->
                 case ww5 of ww8 { GHC.MVar.MVar ww9 ->
                 FileServer.$wclientconnectHandler
                   ww7
                   ww2
                   ww3
                   ww4
                   ww9
                   w1
                   w2
                   w3
                   w4 } } }) -}
3e1f2c2f1205443fa5470250094226ab
  decrementTVar ::
    GHC.Conc.Sync.TVar GHC.Types.Int -> GHC.Conc.Sync.STM ()
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.decrementTVar1
                  `cast`
                (<GHC.Conc.Sync.TVar GHC.Types.Int>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0] <()>_R)) -}
cb4fe88e96e438b237ba3c85f72f1540
  decrementTVar1 ::
    GHC.Conc.Sync.TVar GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (tv :: GHC.Conc.Sync.TVar GHC.Types.Int)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case tv of wild { GHC.Conc.Sync.TVar tvar# ->
                 case GHC.Prim.readTVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Types.Int
                        tvar#
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Prim.writeTVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Types.Int
                        tvar#
                        (case ipv1 of wild1 { GHC.Types.I# x ->
                         GHC.Types.I# (GHC.Prim.-# x 1#) })
                        ipv of s2# { DEFAULT ->
                 (# s2#, GHC.Tuple.() #) } } }) -}
56b0cd025720f41081a71892d0a91ee2
  downloadCommand ::
    Network.Socket.Types.Socket
    -> FileServer.FileServer -> GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 4, Strictness: <L,1*U(U(U),A,A,A,A)><S,1*H><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.downloadCommand1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <FileServer.FileServer>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
aa7d88fa190093eaa6f8046b57205be0
  downloadCommand1 ::
    Network.Socket.Types.Socket
    -> FileServer.FileServer
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,1*U(U(U),A,A,A,A)><S,1*H><L,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: FileServer.FileServer)
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of w4 { FileServer.FileServer ipv ipv1 ->
                 FileServer.$wdownloadCommand w w4 w2 w3 }) -}
3ed325add65426619b3646ebc9470b6b
  heloCommand ::
    Network.Socket.Types.Socket
    -> FileServer.FileServer -> GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <S,1*U(U(U),A,A,A,A)><S,1*U(A,1*U)><L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.heloCommand1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <FileServer.FileServer>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
4dba3eeadc576a288c20d5719eb39281
  heloCommand1 ::
    Network.Socket.Types.Socket
    -> FileServer.FileServer
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <S,1*U(U(U),A,A,A,A)><S,1*U(A,1*U)><L,1*U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: FileServer.FileServer)
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 case w1 of ww6 { FileServer.FileServer ww7 ww8 ->
                 FileServer.$wheloCommand ww1 ww8 w2 w3 } }) -}
710df9b45075ea17c09c2adf183bbc61
  heloCommand2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \StudentID:12306421\n\
                   \\n"#) -}
17f1ff61f5a4679877e1516d17f95109
  hostname :: Network.Socket.HostName
  {- Unfolding: (GHC.CString.unpackCString# "localhost"#) -}
5949c362af660e0c250ebc25bc891569
  incrementTVar ::
    GHC.Conc.Sync.TVar GHC.Types.Int -> GHC.Conc.Sync.STM ()
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.incrementTVar1
                  `cast`
                (<GHC.Conc.Sync.TVar GHC.Types.Int>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0] <()>_R)) -}
cba98bb584fafd0649ea516a2c33cdb9
  incrementTVar1 ::
    GHC.Conc.Sync.TVar GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (tv :: GHC.Conc.Sync.TVar GHC.Types.Int)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case tv of wild { GHC.Conc.Sync.TVar tvar# ->
                 case GHC.Prim.readTVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Types.Int
                        tvar#
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Prim.writeTVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Types.Int
                        tvar#
                        (case ipv1 of wild1 { GHC.Types.I# y ->
                         GHC.Types.I# (GHC.Prim.+# 1# y) })
                        ipv of s2# { DEFAULT ->
                 (# s2#, GHC.Tuple.() #) } } }) -}
9a3d2a77b12d79873a839e0f28524512
  killCommand ::
    Control.Concurrent.Chan.Chan GHC.Base.String
    -> Network.Socket.Types.Socket -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,1*U(A,U)><S,1*U(U(U),A,A,A,A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.killCommand1
                  `cast`
                (<Control.Concurrent.Chan.Chan GHC.Base.String>_R
                 ->_R <Network.Socket.Types.Socket>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
ac739c2a4cd92f12ddce1d0f969d5218
  killCommand1 ::
    Control.Concurrent.Chan.Chan GHC.Base.String
    -> Network.Socket.Types.Socket
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,1*U(A,U)><S,1*U(U(U),A,A,A,A)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Control.Concurrent.Chan.Chan GHC.Base.String)
                   (w1 :: Network.Socket.Types.Socket)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 FileServer.$wkillCommand w ww1 w2 }) -}
c011312616516199f72d2513c81379c8
  killCommand2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "KILL_SERVICE"#) -}
6df71847f61e7aef58670e97ab86c126
  killCommand3 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "Service is now terminating!"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
949d9b02de84badd9c319f32177922fe
  mainHandler ::
    Network.Socket.Types.Socket
    -> Control.Concurrent.Chan.Chan GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,A><S(SS),1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.mainHandler1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <Control.Concurrent.Chan.Chan GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
eb109abb7e6a12afa30f11f191a321fd
  mainHandler1 ::
    Network.Socket.Types.Socket
    -> Control.Concurrent.Chan.Chan GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,A><S(SS),1*U(U,U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: Control.Concurrent.Chan.Chan GHC.Base.String)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { Control.Concurrent.Chan.Chan ww1 ww2 ->
                 FileServer.$wmainHandler ww1 ww2 w2 }) -}
582d7bc61aa5b5d656421f45cfb73d61
  maxnumThreads :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 4#) -}
63eddc2cd824894c9353099c7b1f0dd9
  newFileServer ::
    GHC.Base.String
    -> GHC.Base.String -> GHC.Types.IO FileServer.FileServer
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.newFileServer1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <FileServer.FileServer>_R)) -}
c9526cd1af0c7afdfc35f39b6f72e965
  newFileServer1 ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, FileServer.FileServer #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (address1 :: GHC.Base.String)
                   (port1 :: GHC.Base.String)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.atomically#
                   @ FileServer.FileServer
                   (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    (# s, FileServer.FileServer address1 port1 #))
                   eta) -}
9c444abeaa9009ea8f45959a2d04005e
  port :: FileServer.FileServer -> GHC.Base.String
  RecSel Left FileServer.FileServer
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: FileServer.FileServer) ->
                 case ds1 of wild { FileServer.FileServer ds2 ds3 -> ds3 }) -}
65161f993144c61ca599e94a4cd96885
  run :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.run1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
82ffea6710eba657ae878df7974ad379
  run1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U> -}
71ef2b5dd424b608908dd67da2c1c9ae
  serverhost :: GHC.Base.String
  {- Unfolding: (FileServer.hostname) -}
7bff349a84c20c286d724b418f54d312
  serverport :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "7007"#) -}
bcb8e981284efa92b1f55552f8a799b8
  updateCommand ::
    Network.Socket.Types.Socket
    -> FileServer.FileServer -> GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 4, Strictness: <L,1*U(U(U),A,A,A,A)><S,1*H><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.updateCommand1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <FileServer.FileServer>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
39b33bc2610f35dadcd01e34a00c6577
  updateCommand1 ::
    Network.Socket.Types.Socket
    -> FileServer.FileServer
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,1*U(U(U),A,A,A,A)><S,1*H><L,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: FileServer.FileServer)
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of w4 { FileServer.FileServer ipv ipv1 ->
                 FileServer.$wupdateCommand w w4 w2 w3 }) -}
5f6390b34506258b2b3841fa2cd85432
  uploadCommand ::
    Network.Socket.Types.Socket
    -> FileServer.FileServer -> GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 4, Strictness: <L,1*U(U(U),A,A,A,A)><S,1*H><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.uploadCommand1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <FileServer.FileServer>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
30deba455c1f7ea5abf32c6b5666e5cc
  uploadCommand1 ::
    Network.Socket.Types.Socket
    -> FileServer.FileServer
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,1*U(U(U),A,A,A,A)><S,1*H><L,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: FileServer.FileServer)
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of w4 { FileServer.FileServer ipv ipv1 ->
                 FileServer.$wuploadCommand w w4 w2 w3 }) -}
"SPEC/FileServer $fPrintfArg[]_$cparseFormat @ Char" [ALWAYS] forall ($dIsChar :: Text.Printf.IsChar
                                                                                    GHC.Types.Char)
  Text.Printf.$fPrintfArg[]_$cparseFormat @ GHC.Types.Char $dIsChar
  = FileServer.$s$fPrintfArg[]_$s$fPrintfArg[]_$cparseFormat
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

