
==================== FINAL INTERFACE ====================
2016-11-29 16:10:11.665031 UTC

interface DFS-0.1.0.0-5Ol8MkoGqXRGjB0pYAodFD:FileServer 8001
  interface hash: 7f9ab6f75fcca1607f9e00ebcce940e6
  ABI hash: e55847c430ebb60ac68f63eed8e204aa
  export-list hash: 165411d21109ddb9e53a7e3193f71f40
  orphan hash: cb285a2275310ef639dacd14fad7a6cf
  flag hash: d134173b433996321234ccc0e186b868
  sig of: Nothing
  used TH splices: False
  where
exports:
  FileServer.clientHandler
  FileServer.clientconnectHandler
  FileServer.decrementTVar
  FileServer.downloadCommand
  FileServer.heloCommand
  FileServer.incrementTVar
  FileServer.killCommand
  FileServer.mainHandler
  FileServer.maxnumThreads
  FileServer.newFileServer
  FileServer.run
  FileServer.serverhost
  FileServer.serverport
  FileServer.updateCommand
  FileServer.uploadCommand
  FileServer.FileServer{FileServer.FileServer address port}
module dependencies:
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.0.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.2.6.2@directory-1.2.6.2
                      filepath-1.4.1.0@filepath-1.4.1.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
                      network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG
                      split-0.2.3.1@split-0.2.3.1-IJKK4pOCYGKud0jZImZke
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      time-1.6.0.1@time-1.6.0.1 unix-2.7.2.0@unix-2.7.2.0
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network.Socket
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
import  -/  base-4.9.0.0:Control.Concurrent 98a3a12a2ace3d27758947d9f1041f90
import  -/  base-4.9.0.0:Control.Concurrent.Chan d55a50c16a7726146797e8faa62a516b
import  -/  base-4.9.0.0:Control.Exception 8762ca621bc15a8c1e8e34c703aba1aa
import  -/  base-4.9.0.0:Control.Monad 7767aebfd53f0b584cef2fe66ad3986c
import  -/  base-4.9.0.0:Data.Functor 6fc476505db88d678632a4a838125f13
import  -/  base-4.9.0.0:Data.OldList 0058409f994fb13ae0616e3f1e5b4dae
import  -/  base-4.9.0.0:Data.Word 34db1dae76cf3db02c16aed2b8427443
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.Conc.Sync 800ad52ae188c67fd514a07ba8a64fcc
import  -/  base-4.9.0.0:GHC.List 13d2451194c1c6e53b4f4f07947736dd
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  base-4.9.0.0:System.Environment ee0914a962f5508d0fd404c89ee4999b
import  -/  base-4.9.0.0:System.IO eb1d40aa793a4047069a5023f2ebcfe3
import  -/  base-4.9.0.0:Text.Printf 981db3fab2db52a63576c71c790058bf
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Char8 49426525406a134b63e5a11b574dbd77
import  -/  directory-1.2.6.2@directory-1.2.6.2:System.Directory f7c57c4a392d1767b38addc37d00ceed
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network fe4a3a40192a968130a171e8dca1101b
import  -/  network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network.Socket 74f40911ccc642ef529205732bba4073
import  -/  network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network.Socket.ByteString 5df469a3defc2172b49042eabe647e67
import  -/  network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network.Socket.Internal 6670c66c398fead19fd25cb50e6956e6
import  -/  network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network.Socket.Types a21cb2ffc6eaad6f8e6da2810c802283
import  -/  split-0.2.3.1@split-0.2.3.1-IJKK4pOCYGKud0jZImZke:Data.List.Split 46e8ab9554123893f27696c65d88e63d
import  -/  split-0.2.3.1@split-0.2.3.1-IJKK4pOCYGKud0jZImZke:Data.List.Split.Internals 91fdfee0190d7e76d57defeef91ab9d3
import  -/  stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Concurrent.STM fd77bc755b79c492176ed8b0d0d3f933
import  -/  stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Concurrent.STM.TVar 862fffea7e508d7927194033396aaee0
370003826cff692c79be61a234cde2e5
  $s$fPrintfArg[]_$s$fPrintfArg[]_$cparseFormat ::
    [GHC.Types.Char] -> Text.Printf.ModifierParser
  {- Arity: 2, Strictness: <L,A><S,1*U>m,
     Unfolding: InlineRule (2, True, False)
                (\ (ds1 :: [GHC.Types.Char]) (ds2 :: [GHC.Types.Char]) ->
                 case ds2 of wild {
                   [] -> Text.Printf.errorShortFormat @ Text.Printf.FormatParse
                   : c1 cs
                   -> Text.Printf.FormatParse
                        (GHC.Types.[] @ GHC.Types.Char)
                        c1
                        cs }) -}
e0e65fbc9865355843274471793d1468
  $sprintf3 :: () GHC.Types.~~ ()
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq# @ * @ * @ () @ () @~ <()>_N) -}
39da3ff40361726dcbb18bfb61ebf1f5
  $tc'FileServer :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3038907936986842474##
                   4074053925250977833##
                   FileServer.$trModule
                   FileServer.$tc'FileServer1) -}
412f9579b132b530302835d3fce559ca
  $tc'FileServer1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'FileServer"#) -}
0259a04c821fa98a790e7943bb83e023
  $tcFileServer :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15782789897835405570##
                   18344125353143674363##
                   FileServer.$trModule
                   FileServer.$trModule1) -}
9e43f05842a67cec7073f365366cb3c3
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   FileServer.$trModule2
                   FileServer.$trModule1) -}
df6157a5dbe9b88ac698725eb28b32ba
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "FileServer"#) -}
0bfc87ade424f5714fa87d3ef5c93565
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "DFS-0.1.0.0-5Ol8MkoGqXRGjB0pYAodFD"#) -}
92e55b7e81e661dd4325333524f49f6c
  $wclientHandler ::
    Network.Socket.Types.Socket
    -> Control.Concurrent.Chan.Chan GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,U(U(U),A,A,A,A)><L,U(U,U)><L,U><S,U>,
     Inline: [0] -}
d193e096fef5cba66094499e6e6cbeae
  $wclientconnectHandler ::
    GHC.Prim.Int#
    -> Network.Socket.Types.Family
    -> Network.Socket.Types.SocketType
    -> Network.Socket.Types.ProtocolNumber
    -> GHC.Prim.MVar#
         GHC.Prim.RealWorld Network.Socket.Types.SocketStatus
    -> Control.Concurrent.Chan.Chan GHC.Base.String
    -> GHC.Conc.Sync.TVar GHC.Types.Int
    -> FileServer.FileServer
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 9,
     Strictness: <S,U><S,U><L,U><L,U(U)><S,U><L,U(U,U)><L,U(U)><L,U(A,U)><S,U>,
     Inline: [0] -}
2335fbc8897a8f1246f72908e3386f70
  $wdownloadCommand ::
    Network.Socket.Types.Socket
    -> FileServer.FileServer
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,1*U(U(U),A,A,A,A)><S,1*H><L,U><S,U>,
     Inline: [0] -}
2d6fb612a1c7345587f4d89728944551
  $wheloCommand ::
    Foreign.C.Types.CInt
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,U(U)><L,1*U><L,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Foreign.C.Types.CInt)
                   (ww1 :: GHC.Base.String)
                   (w :: GHC.Base.String)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 let {
                   cs :: [GHC.Types.Char]
                   = GHC.CString.unpackAppendCString#
                       "HELO "#
                       (GHC.Base.++
                          @ GHC.Types.Char
                          w
                          (GHC.CString.unpackAppendCString#
                             "\n\
                             \IP:192.168.6.129\n\
                             \Port:"#
                             (GHC.Base.++ @ GHC.Types.Char ww1 FileServer.heloCommand2)))
                 } in
                 case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww2 { DEFAULT ->
                 case Data.ByteString.Internal.$wunsafePackLenChars
                        ww2
                        cs of ww6 { Data.ByteString.Internal.PS ww7 ww8 ww9 ww10 ->
                 case Network.Socket.ByteString.$wsend
                        ww
                        ww7
                        ww8
                        ww9
                        ww10
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, GHC.Tuple.() #) } } }) -}
15842fd604a70fc39a7185c7fd7e916c
  $wkillCommand ::
    Control.Concurrent.Chan.Chan GHC.Base.String
    -> Foreign.C.Types.CInt
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,1*U(A,U)><L,U(U)><S,U>, Inline: [0],
     Unfolding: (\ (w :: Control.Concurrent.Chan.Chan GHC.Base.String)
                   (ww :: Foreign.C.Types.CInt)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case FileServer.killCommand3 of ww6 { Data.ByteString.Internal.PS ww7 ww8 ww9 ww10 ->
                 case Network.Socket.ByteString.$wsend
                        ww
                        ww7
                        ww8
                        ww9
                        ww10
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 Control.Concurrent.Chan.writeChan1
                   @ GHC.Base.String
                   w
                   FileServer.killCommand2
                   ipv } }) -}
78a2372cad88d1e1470d9df26bd3bcb2
  $wmainHandler ::
    GHC.Prim.MVar#
      GHC.Prim.RealWorld (Control.Concurrent.Chan.Stream GHC.Base.String)
    -> GHC.Prim.MVar#
         GHC.Prim.RealWorld (Control.Concurrent.Chan.Stream GHC.Base.String)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <S,U><S,U><S,U>, Inline: [0] -}
d1881a66630e32f838b8da116ca5a7f3
  $wupdateCommand ::
    Network.Socket.Types.Socket
    -> FileServer.FileServer
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,1*U(U(U),A,A,A,A)><S,1*H><L,U><S,U>,
     Inline: [0] -}
787117e85747b0dd95a3e46b9130c0f4
  $wuploadCommand ::
    Network.Socket.Types.Socket
    -> FileServer.FileServer
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,1*U(U(U),A,A,A,A)><S,1*H><L,U><S,U>,
     Inline: [0] -}
7683ba4afe8862e676d978b02fae7e49
  data FileServer
    = FileServer {address :: GHC.Base.String, port :: GHC.Base.String}
9d49a7c996a9a6b3723f1fcbeb18cb6b
  address :: FileServer.FileServer -> GHC.Base.String
  RecSel Left FileServer.FileServer
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: FileServer.FileServer) ->
                 case ds1 of wild { FileServer.FileServer ds2 ds3 -> ds2 }) -}
f217ecc622f1c02bebec8f06c7a49e95
  clientHandler ::
    Network.Socket.Types.Socket
    -> Control.Concurrent.Chan.Chan GHC.Base.String
    -> FileServer.FileServer
    -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <L,U(U(U),A,A,A,A)><L,U(U,U)><S,1*U(A,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.clientHandler1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <Control.Concurrent.Chan.Chan GHC.Base.String>_R
                 ->_R <FileServer.FileServer>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
432836a0c8252801e63b9dbcd1bb26e2
  clientHandler1 ::
    Network.Socket.Types.Socket
    -> Control.Concurrent.Chan.Chan GHC.Base.String
    -> FileServer.FileServer
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <L,U(U(U),A,A,A,A)><L,U(U,U)><S,1*U(A,U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: Control.Concurrent.Chan.Chan GHC.Base.String)
                   (w2 :: FileServer.FileServer)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w2 of ww { FileServer.FileServer ww1 ww2 ->
                 FileServer.$wclientHandler w w1 ww2 w3 }) -}
f233dca824eb695ce9f1af49af60f3ab
  clientconnectHandler ::
    Network.Socket.Types.Socket
    -> Control.Concurrent.Chan.Chan GHC.Base.String
    -> GHC.Conc.Sync.TVar GHC.Types.Int
    -> FileServer.FileServer
    -> GHC.Types.IO ()
  {- Arity: 5,
     Strictness: <S(S(S)SLLS(S)),1*U(U(U),U,U,U(U),U(U))><L,U(U,U)><L,U(U)><L,U(A,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.clientconnectHandler1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <Control.Concurrent.Chan.Chan GHC.Base.String>_R
                 ->_R <GHC.Conc.Sync.TVar GHC.Types.Int>_R
                 ->_R <FileServer.FileServer>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
9eac31e4aac65f1a4b3c25e1378ab7a8
  clientconnectHandler1 ::
    Network.Socket.Types.Socket
    -> Control.Concurrent.Chan.Chan GHC.Base.String
    -> GHC.Conc.Sync.TVar GHC.Types.Int
    -> FileServer.FileServer
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <S(S(S)SLLS(S)),1*U(U(U),U,U,U(U),U(U))><L,U(U,U)><L,U(U)><L,U(A,U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: Control.Concurrent.Chan.Chan GHC.Base.String)
                   (w2 :: GHC.Conc.Sync.TVar GHC.Types.Int)
                   (w3 :: FileServer.FileServer)
                   (w4 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 case ww1
                        `cast`
                      (Foreign.C.Types.N:CInt[0]) of ww6 { GHC.Int.I32# ww7 ->
                 case ww5 of ww8 { GHC.MVar.MVar ww9 ->
                 FileServer.$wclientconnectHandler
                   ww7
                   ww2
                   ww3
                   ww4
                   ww9
                   w1
                   w2
                   w3
                   w4 } } }) -}
da3f2c26c6a5c6cb5c52dff320fa3532
  decrementTVar ::
    GHC.Conc.Sync.TVar GHC.Types.Int -> GHC.Conc.Sync.STM ()
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.decrementTVar1
                  `cast`
                (<GHC.Conc.Sync.TVar GHC.Types.Int>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0] <()>_R)) -}
f0e4bc75c8e2a671a1de635eb7ae8666
  decrementTVar1 ::
    GHC.Conc.Sync.TVar GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (tv :: GHC.Conc.Sync.TVar GHC.Types.Int)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case tv of wild { GHC.Conc.Sync.TVar tvar# ->
                 case GHC.Prim.readTVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Types.Int
                        tvar#
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Prim.writeTVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Types.Int
                        tvar#
                        (case ipv1 of wild1 { GHC.Types.I# x ->
                         GHC.Types.I# (GHC.Prim.-# x 1#) })
                        ipv of s2# { DEFAULT ->
                 (# s2#, GHC.Tuple.() #) } } }) -}
73b03ae0b882bfc1548052e26ec4bd30
  downloadCommand ::
    Network.Socket.Types.Socket
    -> FileServer.FileServer -> GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 4, Strictness: <L,1*U(U(U),A,A,A,A)><S,1*H><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.downloadCommand1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <FileServer.FileServer>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
8cac49e606644e3ac00f7689784daa36
  downloadCommand1 ::
    Network.Socket.Types.Socket
    -> FileServer.FileServer
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,1*U(U(U),A,A,A,A)><S,1*H><L,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: FileServer.FileServer)
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of w4 { FileServer.FileServer ipv ipv1 ->
                 FileServer.$wdownloadCommand w w4 w2 w3 }) -}
791bd656a3f9e218c6f90cb1eeef468f
  heloCommand ::
    Network.Socket.Types.Socket
    -> FileServer.FileServer -> GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <S,1*U(U(U),A,A,A,A)><S,1*U(A,1*U)><L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.heloCommand1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <FileServer.FileServer>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
761f3ed463ad930ae2800bc7af77057d
  heloCommand1 ::
    Network.Socket.Types.Socket
    -> FileServer.FileServer
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <S,1*U(U(U),A,A,A,A)><S,1*U(A,1*U)><L,1*U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: FileServer.FileServer)
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 case w1 of ww6 { FileServer.FileServer ww7 ww8 ->
                 FileServer.$wheloCommand ww1 ww8 w2 w3 } }) -}
e770f6ac816f7f26f31b519f7114c1f2
  heloCommand2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \StudentID:12306421\n\
                   \\n"#) -}
aa121f88086c413fa3426867dc4e21e5
  incrementTVar ::
    GHC.Conc.Sync.TVar GHC.Types.Int -> GHC.Conc.Sync.STM ()
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.incrementTVar1
                  `cast`
                (<GHC.Conc.Sync.TVar GHC.Types.Int>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0] <()>_R)) -}
0754aa76ce4890084bfdfe9657a858f8
  incrementTVar1 ::
    GHC.Conc.Sync.TVar GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (tv :: GHC.Conc.Sync.TVar GHC.Types.Int)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case tv of wild { GHC.Conc.Sync.TVar tvar# ->
                 case GHC.Prim.readTVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Types.Int
                        tvar#
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Prim.writeTVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Types.Int
                        tvar#
                        (case ipv1 of wild1 { GHC.Types.I# y ->
                         GHC.Types.I# (GHC.Prim.+# 1# y) })
                        ipv of s2# { DEFAULT ->
                 (# s2#, GHC.Tuple.() #) } } }) -}
b0d849b66a32953cb748ef8cc5fcc146
  killCommand ::
    Control.Concurrent.Chan.Chan GHC.Base.String
    -> Network.Socket.Types.Socket -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,1*U(A,U)><S,1*U(U(U),A,A,A,A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.killCommand1
                  `cast`
                (<Control.Concurrent.Chan.Chan GHC.Base.String>_R
                 ->_R <Network.Socket.Types.Socket>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
de500ccf2888264b2a474055148e1e51
  killCommand1 ::
    Control.Concurrent.Chan.Chan GHC.Base.String
    -> Network.Socket.Types.Socket
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,1*U(A,U)><S,1*U(U(U),A,A,A,A)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Control.Concurrent.Chan.Chan GHC.Base.String)
                   (w1 :: Network.Socket.Types.Socket)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 FileServer.$wkillCommand w ww1 w2 }) -}
98a24eeb31ca116a4f8c238c6d07593c
  killCommand2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "KILL_SERVICE"#) -}
cfd1dde52b061e5954723665079523e4
  killCommand3 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "Service is now terminating!"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
d4c4ba1f579bd1838b1d277ff34189cb
  mainHandler ::
    Network.Socket.Types.Socket
    -> Control.Concurrent.Chan.Chan GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,A><S(SS),1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.mainHandler1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <Control.Concurrent.Chan.Chan GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
b23f2143d461bc5e1116a8fc7dea743b
  mainHandler1 ::
    Network.Socket.Types.Socket
    -> Control.Concurrent.Chan.Chan GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,A><S(SS),1*U(U,U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: Control.Concurrent.Chan.Chan GHC.Base.String)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { Control.Concurrent.Chan.Chan ww1 ww2 ->
                 FileServer.$wmainHandler ww1 ww2 w2 }) -}
6408b71dfbe359e054cb49ca99daa7a9
  maxnumThreads :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 4#) -}
d6fd1388b40e410cf007fe724d379728
  newFileServer ::
    GHC.Base.String
    -> GHC.Base.String -> GHC.Types.IO FileServer.FileServer
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.newFileServer1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <FileServer.FileServer>_R)) -}
2f6e6c2b6cc6acc8e88d71ea94361f03
  newFileServer1 ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, FileServer.FileServer #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (address1 :: GHC.Base.String)
                   (port1 :: GHC.Base.String)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.atomically#
                   @ FileServer.FileServer
                   (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    (# s, FileServer.FileServer address1 port1 #))
                   eta) -}
b30b52e9f68270502660d224321e0d40
  port :: FileServer.FileServer -> GHC.Base.String
  RecSel Left FileServer.FileServer
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: FileServer.FileServer) ->
                 case ds1 of wild { FileServer.FileServer ds2 ds3 -> ds3 }) -}
f1e35ef92b7bbd86cb3cfbf199b689e8
  run :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.run1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
1b097becfc994fff903deed285dab279
  run1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Directory.createDirectoryIfMissing1
                        GHC.Types.True
                        FileServer.run17
                        s of ds1 { (#,#) ipv ipv1 ->
                 case System.Posix.Directory.changeWorkingDirectory1
                        FileServer.run16
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.atomically#
                        @ FileServer.FileServer
                        FileServer.run14
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case Network.Socket.getAddrInfo1
                        FileServer.run11
                        (GHC.Base.Nothing @ Network.Socket.HostName)
                        FileServer.run10
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case ipv7 of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {}
                   : x ds5
                   -> case x of ww { Network.Socket.AddrInfo ww1 ww2 ww3 ww4 ww5 ww6 ->
                      case Network.Socket.$wsocket
                             ww2
                             Network.Socket.Types.Stream
                             0#
                             ipv6 of ds6 { (#,#) ipv8 ipv9 ->
                      case ipv9 of ww7 { Network.Socket.Types.MkSocket ww8 ww9 ww10 ww11 ww12 ->
                      case ww12 of ww13 { GHC.MVar.MVar ww14 ->
                      case Network.Socket.$wbind
                             ww8
                             ww14
                             ww5
                             ipv8 of ds7 { (#,#) ipv10 ipv11 ->
                      case Network.Socket.$wlisten
                             ww8
                             ww14
                             FileServer.run9
                             ipv10 of ds8 { (#,#) ipv12 ipv13 ->
                      case Text.Printf.$fPrintfTypeIO1
                             @ ()
                             FileServer.$sprintf3
                               `cast`
                             (Sym (Data.Type.Equality.N:~[0] <*>_N) <()>_N <()>_N)
                             FileServer.run8
                             FileServer.run4
                             ipv12 of ds9 { (#,#) ipv14 ipv15 ->
                      case GHC.Prim.newMVar#
                             @ GHC.Prim.RealWorld
                             @ (Control.Concurrent.Chan.ChItem GHC.Base.String)
                             ipv14 of ds10 { (#,#) ipv16 ipv17 ->
                      case GHC.Prim.newMVar#
                             @ GHC.Prim.RealWorld
                             @ (GHC.MVar.MVar (Control.Concurrent.Chan.ChItem GHC.Base.String))
                             ipv16 of ds11 { (#,#) ipv18 ipv19 ->
                      let {
                        hole :: GHC.MVar.MVar
                                  (Control.Concurrent.Chan.ChItem GHC.Base.String)
                          {- Strictness: m -}
                        = GHC.MVar.MVar
                            @ (Control.Concurrent.Chan.ChItem GHC.Base.String)
                            ipv17
                      } in
                      case GHC.Prim.putMVar#
                             @ GHC.Prim.RealWorld
                             @ (GHC.MVar.MVar (Control.Concurrent.Chan.ChItem GHC.Base.String))
                             ipv19
                             hole
                             ipv18 of s2# { DEFAULT ->
                      case GHC.Prim.newMVar#
                             @ GHC.Prim.RealWorld
                             @ (GHC.MVar.MVar (Control.Concurrent.Chan.ChItem GHC.Base.String))
                             s2# of ds12 { (#,#) ipv20 ipv21 ->
                      case GHC.Prim.putMVar#
                             @ GHC.Prim.RealWorld
                             @ (GHC.MVar.MVar (Control.Concurrent.Chan.ChItem GHC.Base.String))
                             ipv21
                             hole
                             ipv20 of s2#1 { DEFAULT ->
                      case GHC.Prim.atomically#
                             @ (GHC.Conc.Sync.TVar GHC.Types.Int)
                             FileServer.run2
                             s2#1 of ds13 { (#,#) ipv22 ipv23 ->
                      case GHC.Prim.fork#
                             @ (GHC.Types.IO ())
                             (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              GHC.Prim.catch#
                                @ ()
                                @ GHC.Exception.SomeException
                                (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case ww8
                                        `cast`
                                      (Foreign.C.Types.N:CInt[0]) of ww15 { GHC.Int.I32# ww16 ->
                                 FileServer.$wclientconnectHandler
                                   ww16
                                   ww9
                                   ww10
                                   ww11
                                   ww14
                                   (Control.Concurrent.Chan.Chan @ GHC.Base.String ipv19 ipv21)
                                   ipv23
                                   ipv5
                                   w })
                                GHC.Conc.Sync.childHandler1
                                eta)
                               `cast`
                             (Sym (GHC.Types.N:IO[0] <()>_R))
                             ipv22 of ds14 { (#,#) ipv24 ipv25 ->
                      FileServer.$wmainHandler
                        ipv19
                        ipv21
                        ipv24 } } } } } } } } } } } } } } } } } } }) -}
df6bd2f5fe85dadb2c24bb498211ac22
  run10 :: GHC.Base.Maybe GHC.Base.String
  {- Unfolding: (GHC.Base.Just
                   @ GHC.Base.String
                   FileServer.serverport) -}
e1c374cf23d88eeb91569ea8dd2bd1ee
  run11 :: GHC.Base.Maybe Network.Socket.AddrInfo
  {- Unfolding: (GHC.Base.Just
                   @ Network.Socket.AddrInfo
                   FileServer.run12) -}
282f66dfc8863f99e2a534b563c10601
  run12 :: Network.Socket.AddrInfo
  {- Unfolding: (Network.Socket.AddrInfo
                   FileServer.run13
                   Network.Socket.Types.AF_UNSPEC
                   Network.Socket.Types.NoSocketType
                   Network.Socket.defaultHints3
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0]))
                   Network.Socket.defaultHints2
                   Network.Socket.defaultHints1) -}
68fa44e880932c3844ae32827b833ed7
  run13 :: [Network.Socket.AddrInfoFlag]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Network.Socket.AddrInfoFlag
                   Network.Socket.AI_PASSIVE
                   (GHC.Types.[] @ Network.Socket.AddrInfoFlag)) -}
48716bac9da3a473896db09c473cafa3
  run14 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, FileServer.FileServer #)
  {- Arity: 1,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, FileServer.run15 #)) -}
53cdd9d6a90860684065e00098d09998
  run15 :: FileServer.FileServer
  {- Unfolding: (FileServer.FileServer
                   FileServer.serverhost
                   FileServer.serverport) -}
c06cdd5c52dfb07a846ad3d32996de29
  run16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "distserver/"#) -}
18e290fb530c186bd153fba512efcd9b
  run17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "distserver"#
                   FileServer.run18) -}
fd2aadde82d3da5af6e46265bc2ceb61
  run18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   FileServer.serverhost
                   FileServer.run19) -}
42e5011df7bcf838ab9124915273718c
  run19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   ":"#
                   FileServer.run20) -}
3243cb0f843e09e8a5d8dd7b68c5c480
  run2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Conc.Sync.TVar GHC.Types.Int #)
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s1# :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newTVar#
                        @ GHC.Types.Int
                        @ GHC.Prim.RealWorld
                        FileServer.run3
                        s1# of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, GHC.Conc.Sync.TVar @ GHC.Types.Int ipv1 #) }) -}
f0e279086a423d0e21ed0ffe9bd2b800
  run20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   FileServer.serverport
                   FileServer.run21) -}
7409a9e41f42c5afd6a0efaf3132e057
  run21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "/"#) -}
16f2a10e4f476fa0d669da1d0ae19197
  run3 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 0#) -}
a490fc30b8b9b36a5e1583d3f4068aed
  run4 :: [(Text.Printf.ModifierParser, Text.Printf.FieldFormatter)]
  {- Unfolding: (GHC.Types.:
                   @ (Text.Printf.ModifierParser, Text.Printf.FieldFormatter)
                   FileServer.run5
                   (GHC.Types.[] @ Text.Printf.UPrintf)) -}
a4fd97960912063a2e9caaaa4624c726
  run5 :: (Text.Printf.ModifierParser, Text.Printf.FieldFormatter)
  {- Unfolding: ((FileServer.run7, FileServer.run6)) -}
b0a34cffaaf947ffe6fab77ab812a7df
  run6 :: Text.Printf.FieldFormat -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w2 :: Text.Printf.FieldFormat) ->
                 case w2 of ww { Text.Printf.FieldFormat ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case ww7 of ww8 { GHC.Types.C# ww9 ->
                 Text.Printf.$wformatString
                   @ GHC.Types.Char
                   Text.Printf.$fIsCharChar
                   FileServer.serverport
                   ww1
                   ww2
                   ww3
                   ww9 } }) -}
f6229e484a66b1c3f912dd0eebe37621
  run7 :: Text.Printf.ModifierParser
  {- Arity: 1,
     Unfolding: (FileServer.$s$fPrintfArg[]_$s$fPrintfArg[]_$cparseFormat
                   FileServer.serverport) -}
a44998216f5b189788b2fecbf7d4c1ea
  run8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Listening on port %s\n"#) -}
c9c41852ff6da5e9ee101a9d4e466ef2
  run9 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 5#) -}
ff37e468164242fec2fe778032c73cfc
  serverhost :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "localhost"#) -}
8105c58af7e22af68c61100239c32d99
  serverport :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "7007"#) -}
d13ddba85c964bdf713842e8ee407fc3
  updateCommand ::
    Network.Socket.Types.Socket
    -> FileServer.FileServer -> GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 4, Strictness: <L,1*U(U(U),A,A,A,A)><S,1*H><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.updateCommand1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <FileServer.FileServer>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
d2ef93e78c008e5178e9d42314a8ad91
  updateCommand1 ::
    Network.Socket.Types.Socket
    -> FileServer.FileServer
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,1*U(U(U),A,A,A,A)><S,1*H><L,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: FileServer.FileServer)
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of w4 { FileServer.FileServer ipv ipv1 ->
                 FileServer.$wupdateCommand w w4 w2 w3 }) -}
b3eede2012ab8256c42dda8dddb2e46a
  uploadCommand ::
    Network.Socket.Types.Socket
    -> FileServer.FileServer -> GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 4, Strictness: <L,1*U(U(U),A,A,A,A)><S,1*H><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.uploadCommand1
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R <FileServer.FileServer>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
bb63d43d41a3e5fa40e99154521d2040
  uploadCommand1 ::
    Network.Socket.Types.Socket
    -> FileServer.FileServer
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,1*U(U(U),A,A,A,A)><S,1*H><L,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Network.Socket.Types.Socket)
                   (w1 :: FileServer.FileServer)
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of w4 { FileServer.FileServer ipv ipv1 ->
                 FileServer.$wuploadCommand w w4 w2 w3 }) -}
"SPEC/FileServer $fPrintfArg[]_$cparseFormat @ Char" [ALWAYS] forall ($dIsChar :: Text.Printf.IsChar
                                                                                    GHC.Types.Char)
  Text.Printf.$fPrintfArg[]_$cparseFormat @ GHC.Types.Char $dIsChar
  = FileServer.$s$fPrintfArg[]_$s$fPrintfArg[]_$cparseFormat
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

