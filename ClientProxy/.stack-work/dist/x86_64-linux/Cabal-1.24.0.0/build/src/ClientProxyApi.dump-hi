
==================== FINAL INTERFACE ====================
2017-01-24 16:50:33.499607 UTC

interface ClientProxy-0.1.0.0-9BMPHdvJGz0CItnFcEqFG3:ClientProxyApi 8001
  interface hash: c13b028c25084b4bc74b328920bdef03
  ABI hash: fe669e3c714d2741fd27bf324ad391c6
  export-list hash: caf4878c03c8b6a1704c4566280cf2a6
  orphan hash: 03e756d9e8a13ad5b283773d419686e4
  flag hash: 232b91cb96073461cf6c3dcd6a42e778
  sig of: Nothing
  used TH splices: False
  where
exports:
  ClientProxyApi.allfiles
  ClientProxyApi.authApi
  ClientProxyApi.authlogin
  ClientProxyApi.authpart
  ClientProxyApi.authregister
  ClientProxyApi.close
  ClientProxyApi.closeQuery
  ClientProxyApi.directoryApi
  ClientProxyApi.displayFiles
  ClientProxyApi.downloadFile
  ClientProxyApi.extend
  ClientProxyApi.extendQuery
  ClientProxyApi.extendToken
  ClientProxyApi.getFile
  ClientProxyApi.isTokenValid
  ClientProxyApi.islocked
  ClientProxyApi.islockedQuery
  ClientProxyApi.isvalid
  ClientProxyApi.isvalidQuery
  ClientProxyApi.join
  ClientProxyApi.lock
  ClientProxyApi.lockFile
  ClientProxyApi.lockQuery
  ClientProxyApi.lockingApi
  ClientProxyApi.mainClient
  ClientProxyApi.mainloop
  ClientProxyApi.open
  ClientProxyApi.openQuery
  ClientProxyApi.putFile
  ClientProxyApi.register
  ClientProxyApi.registerQuery
  ClientProxyApi.serverhost
  ClientProxyApi.serverport
  ClientProxyApi.signin
  ClientProxyApi.signinQuery
  ClientProxyApi.unlock
  ClientProxyApi.unlockFile
  ClientProxyApi.unlockQuery
  ClientProxyApi.uploadFile
  ClientProxyApi.ApiHandler
module dependencies: LRUCache
package dependencies: CommonResources-0.1.0.0@CommonResources-0.1.0.0-2hAoDRm32jf136sTU7I7w0
                      aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz
                      appar-0.1.4@appar-0.1.4-1in4Ewd8JBkAYDZSWXLSe0
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.1@async-2.1.1-xFiBzw9xoB8HPZAuxUY2o
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR
                      auto-update-0.1.4@auto-update-0.1.4-GAesfFmqoZzBz6e09kRyzb
                      base-4.9.0.0
                      base-compat-0.9.1@base-compat-0.9.1-tmPpmtbHbvIDjFWbkjGrR
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-In9M41tLtcS9QYt3QpGpNY
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-KWDLbdBYSBoALiMW0LHIz1
                      blaze-html-0.8.1.3@blaze-html-0.8.1.3-8MBPJsFNBtBBD2gWERenva
                      blaze-markup-0.7.1.1@blaze-markup-0.7.1.1-IE161DWDHNXF9O8bBguli5
                      bson-0.3.2.3@bson-0.3.2.3-3QA3aP5EtCyCltXUzEKOsQ
                      bson-generic-0.0.8@bson-generic-0.0.8-DtORpoUHwQhDReLJ5Keop0
                      byteorder-1.0.4@byteorder-1.0.4-BbL4c17EpZrL9PcZm0xys9
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      case-insensitive-1.2.0.7@case-insensitive-1.2.0.7-FlqweN7AuKj9EdU2arVEt4
                      containers-0.5.7.1@containers-0.5.7.1
                      cookie-0.4.2.1@cookie-0.4.2.1-2a2c54yIyBn79Ul3iLWclJ
                      cryptohash-0.11.9@cryptohash-0.11.9-9KNu0EEbreBFrmNJAeHgYz
                      cryptonite-0.19@cryptonite-0.19-G9PYO4oOEqhDTta2u9rAaU
                      data-default-class-0.1.2.0@data-default-class-0.1.2.0-FYQpjIylblBDctdkHAFeXA
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.2.6.2@directory-1.2.6.2
                      dlist-0.8.0.2@dlist-0.8.0.2-GWAMmbX9rLg3tqrbOizHGv
                      easy-file-0.2.1@easy-file-0.2.1-bAUkz2rC2kFhBbPjw2Of5
                      exceptions-0.8.3@exceptions-0.8.3-7py7fmRxowDFpHmiHGKrTb
                      fast-logger-2.4.7@fast-logger-2.4.7-E7H6TuZQzia59KuB50vayl
                      file-embed-0.0.10@file-embed-0.0.10-IXfudWSq57y1Athysk5ifZ
                      filepath-1.4.1.0@filepath-1.4.1.0
                      ghc-boot-th-8.0.1@ghc-boot-th-8.0.1 ghc-prim-0.5.0.0
                      hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G
                      hslogger-1.2.10@hslogger-1.2.10-6Ih3VN3QBbAJ6pLH6h3KNu
                      http-api-data-0.3.2@http-api-data-0.3.2-A22DPUhAmUlrIoBZ4qkGB
                      http-client-0.4.31.2@http-client-0.4.31.2-81NyMkNcWWADaJ0Cq5FYRE
                      http-date-0.0.6.1@http-date-0.0.6.1-150spKQYCuoIrltdbMmYGs
                      http-media-0.6.4@http-media-0.6.4-82jDVCpdN5H696EFF5l5I4
                      http-types-0.9.1@http-types-0.9.1-8WdUZL4twHzANJbxvb1Aoj
                      http2-1.6.2@http2-1.6.2-8AbNCX9FS8K1gUe78Emp1g integer-gmp-1.0.0.1
                      iproute-1.7.1@iproute-1.7.1-9hsGfRvggCmFA0ueZi5Sd9
                      lifted-base-0.2.3.8@lifted-base-0.2.3.8-KLkd0w1UJqu6nE8oVTTEBy
                      memory-0.13@memory-0.13-ABHR5331zHK9scHPRr7afU
                      mime-types-0.1.0.7@mime-types-0.1.0.7-AxQ64wFjikqCSdK5pSeZvh
                      mmorph-1.0.9@mmorph-1.0.9-DmSwQqk5nLj7roLAcydGz
                      monad-control-1.0.1.0@monad-control-1.0.1.0-HoNEBoNfniX3vjSfkI7WTT
                      mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM
                      network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG
                      network-uri-2.6.1.0@network-uri-2.6.1.0-DDHh2FNiPirBRgkuU9DEt2
                      old-locale-1.0.0.7@old-locale-1.0.0.7-6glXNhHF891B41ZfuI8hU8
                      old-time-1.1.0.3@old-time-1.1.0.3-IcvdkJUsE9M8t3io8peAEp
                      parsec-3.1.11@parsec-3.1.11-BCos4GEVCuDB8dnOCBHO6X
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      process-1.4.2.0@process-1.4.2.0
                      psqueues-0.2.2.3@psqueues-0.2.2.3-YN2xKllZOMJLtAgRHlkEw
                      random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe
                      resourcet-1.1.8.1@resourcet-1.1.8.1-1XWaZ7RmVde330DM5PRI3Z
                      safe-0.3.10@safe-0.3.10-1VyrsjWhmjvGnGud5lgW7f
                      scientific-0.3.4.9@scientific-0.3.4.9-6oTYuCcx6H5BsTGU7D2Gk3
                      servant-0.9.1.1@servant-0.9.1.1-JzVvK9yk6sQ1E4UZympEK1
                      servant-client-0.9.1.1@servant-client-0.9.1.1-Jfbv4D3w2K1d9wGI5VTz3
                      servant-server-0.9.1.1@servant-server-0.9.1.1-66M2tFOHqQqK0MqMhFZVCd
                      simple-sendfile-0.2.25@simple-sendfile-0.2.25-FZS0Stqtwd5AOyFRQgM4IV
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      streaming-commons-0.1.16@streaming-commons-0.1.16-KtRawhq8O97EWCabefpk66
                      string-conversions-0.4@string-conversions-0.4-8T0UFmRDEly2gsNJzmHrNQ
                      tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx
                      template-haskell-2.11.0.0
                      text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-1j5dGjxxtiTDuAsO86iSk0
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-25SoAegOdaF8rLEnnb5jPI
                      unix-2.7.2.0@unix-2.7.2.0
                      unix-compat-0.4.3.1@unix-compat-0.4.3.1-GamCWWfiT0318wIeUlpE1K
                      unix-time-0.3.7@unix-time-0.3.7-HcxGsrnTmTlC98pyanzoMW
                      unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW
                      uri-bytestring-0.2.2.1@uri-bytestring-0.2.2.1-LMJUdG9s1QpIQ10mPWMO6d
                      utf8-string-1.0.1.1@utf8-string-1.0.1.1-2T8mBCuEDlXDo8zed8Onw4
                      uuid-types-1.0.3@uuid-types-1.0.3-1qmdgBeDGlbCUibOmxVGqx
                      vault-0.3.0.6@vault-0.3.0.6-CA9Xj82tAPe9nD32xVMgDG
                      vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6
                      wai-3.2.1.1@wai-3.2.1.1-f77bMYZGLQBAD3XJrvGiW
                      wai-app-static-3.1.6.1@wai-app-static-3.1.6.1-Y5BgITaOwCDdLFeUawo4r
                      wai-logger-2.3.0@wai-logger-2.3.0-IfusT8I9ees2102USHAF8e
                      warp-3.2.9@warp-3.2.9-1srGDEsq7RWF9RsucFj6bw
                      word8-0.1.2@word8-0.1.2-2E1SgvvAV2fK8vZPDHbRan
                      zlib-0.6.1.2@zlib-0.6.1.2-4CWLN1T27kOJhNvXgy46ZV
orphans: aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson.Types.Generic
         aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson.Types.Instances
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR:Data.Attoparsec.Text.Internal
         base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bson-generic-0.0.8@bson-generic-0.0.8-DtORpoUHwQhDReLJ5Keop0:Data.Bson.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G:Data.Hashable.Generic
         http-client-0.4.31.2@http-client-0.4.31.2-81NyMkNcWWADaJ0Cq5FYRE:Network.HTTP.Client.Request
         network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network.Socket
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         unix-time-0.3.7@unix-time-0.3.7-HcxGsrnTmTlC98pyanzoMW:Data.UnixTime.Diff
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
family instance modules: CommonResources-0.1.0.0@CommonResources-0.1.0.0-2hAoDRm32jf136sTU7I7w0:CommonResources
                         attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR:Data.Attoparsec.Internal.Types
                         base-4.9.0.0:Control.Applicative base-4.9.0.0:Data.Complex
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Compose
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.Functor.Product base-4.9.0.0:Data.List.NonEmpty
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Semigroup
                         base-4.9.0.0:Data.Type.Equality base-4.9.0.0:Data.Version
                         base-4.9.0.0:Data.Void base-4.9.0.0:GHC.Exts
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
                         bson-generic-0.0.8@bson-generic-0.0.8-DtORpoUHwQhDReLJ5Keop0:Data.Bson.Generic
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.2@dlist-0.8.0.2-GWAMmbX9rLg3tqrbOizHGv:Data.DList
                         ghc-boot-th-8.0.1@ghc-boot-th-8.0.1:GHC.LanguageExtensions.Type
                         http-api-data-0.3.2@http-api-data-0.3.2-A22DPUhAmUlrIoBZ4qkGB:Web.Internal.FormUrlEncoded
                         http-client-0.4.31.2@http-client-0.4.31.2-81NyMkNcWWADaJ0Cq5FYRE:Network.HTTP.Client
                         iproute-1.7.1@iproute-1.7.1-9hsGfRvggCmFA0ueZi5Sd9:Data.IP.Addr
                         iproute-1.7.1@iproute-1.7.1-9hsGfRvggCmFA0ueZi5Sd9:Data.IP.Range
                         monad-control-1.0.1.0@monad-control-1.0.1.0-HoNEBoNfniX3vjSfkI7WTT:Control.Monad.Trans.Control
                         network-uri-2.6.1.0@network-uri-2.6.1.0-DDHh2FNiPirBRgkuU9DEt2:Network.URI
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         resourcet-1.1.8.1@resourcet-1.1.8.1-1XWaZ7RmVde330DM5PRI3Z:Control.Monad.Trans.Resource.Internal
                         servant-0.9.1.1@servant-0.9.1.1-JzVvK9yk6sQ1E4UZympEK1:Servant.API.ContentTypes
                         servant-0.9.1.1@servant-0.9.1.1-JzVvK9yk6sQ1E4UZympEK1:Servant.API.IsSecure
                         servant-0.9.1.1@servant-0.9.1.1-JzVvK9yk6sQ1E4UZympEK1:Servant.API.Verbs
                         servant-0.9.1.1@servant-0.9.1.1-JzVvK9yk6sQ1E4UZympEK1:Servant.Utils.Links
                         servant-client-0.9.1.1@servant-client-0.9.1.1-Jfbv4D3w2K1d9wGI5VTz3:Servant.Client
                         servant-client-0.9.1.1@servant-client-0.9.1.1-Jfbv4D3w2K1d9wGI5VTz3:Servant.Common.BaseUrl
                         servant-client-0.9.1.1@servant-client-0.9.1.1-Jfbv4D3w2K1d9wGI5VTz3:Servant.Common.Req
                         servant-server-0.9.1.1@servant-server-0.9.1.1-66M2tFOHqQqK0MqMhFZVCd:Servant.Server.Internal
                         servant-server-0.9.1.1@servant-server-0.9.1.1-66M2tFOHqQqK0MqMhFZVCd:Servant.Server.Internal.BasicAuth
                         tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx:Data.Tagged
                         template-haskell-2.11.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashMap.Base
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashSet
                         uri-bytestring-0.2.2.1@uri-bytestring-0.2.2.1-LMJUdG9s1QpIQ10mPWMO6d:URI.ByteString.Types
                         uuid-types-1.0.3@uuid-types-1.0.3-1qmdgBeDGlbCUibOmxVGqx:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-1qmdgBeDGlbCUibOmxVGqx:Data.UUID.Types.Internal.Builder
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed.Base
                         zlib-0.6.1.2@zlib-0.6.1.2-4CWLN1T27kOJhNvXgy46ZV:Codec.Compression.Zlib.Stream
import  -/  LRUCache 6af6d5271b7ff6646017b10a73fabcec
  exports: f412eced55f1815b1d8967d8b54e9a3f
  Handle 93b503ec49ba9d642627db380be7ea74
  ioinsert 9f73b1edc019caf71565a5a706619fb2
  iolookup 0f3aa70b50107fbd6884db9eefa79b6a
  newHandle 24112a842b2331ffacd59cc888841566
import  -/  CommonResources-0.1.0.0@CommonResources-0.1.0.0-2hAoDRm32jf136sTU7I7w0:CommonResources aa84174f8576d713fe5c3551682d7296
import  -/  aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson 94b59824488f369f190c261b6e39e7ba
import  -/  aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson.TH 869262ef224a0287f5d5fc093506acd2
import  -/  base-4.9.0.0:Control.Monad 7767aebfd53f0b584cef2fe66ad3986c
import  -/  base-4.9.0.0:Control.Monad.IO.Class d702028d883e700bd7066b031147030d
import  -/  base-4.9.0.0:Data.Either bd9f099b82d4ed2d98c56d7144ac6957
import  -/  base-4.9.0.0:Data.List 49b86831b79b49ce5d4d9416ecba61df
import  -/  base-4.9.0.0:Data.Maybe 5f2ba364cbe65c060bc5436bc0b9d049
import  -/  base-4.9.0.0:Data.Proxy aa86c72628cf3b1ceb0816ca84687d80
import  -/  base-4.9.0.0:Data.Traversable 7ce5b7ee67475ac3d03ae825b86efd9f
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.Generics 8e2a7658e8b966c1d29d0d5fd4129f38
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  base-4.9.0.0:System.Environment ee0914a962f5508d0fd404c89ee4999b
import  -/  base-4.9.0.0:System.IO eb1d40aa793a4047069a5023f2ebcfe3
import  -/  base-4.9.0.0:Text.Read 9c1be14f7e5eac8b18bcb566c5763677
import  -/  bson-generic-0.0.8@bson-generic-0.0.8-DtORpoUHwQhDReLJ5Keop0:Data.Bson.Generic 8688e6671f6f36dd3a9c6c1c23977c50
import  -/  directory-1.2.6.2@directory-1.2.6.2:System.Directory f7c57c4a392d1767b38addc37d00ceed
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  hslogger-1.2.10@hslogger-1.2.10-6Ih3VN3QBbAJ6pLH6h3KNu:System.Log.Formatter d9070a840f59099321614c8f0ef2e6e9
import  -/  hslogger-1.2.10@hslogger-1.2.10-6Ih3VN3QBbAJ6pLH6h3KNu:System.Log.Handler 8f3ebc04d50e3ae880e55bca06cd601c
import  -/  hslogger-1.2.10@hslogger-1.2.10-6Ih3VN3QBbAJ6pLH6h3KNu:System.Log.Handler.Simple 13b7c2ecdca1ccb8efd90dd72aa60b1f
import  -/  hslogger-1.2.10@hslogger-1.2.10-6Ih3VN3QBbAJ6pLH6h3KNu:System.Log.Handler.Syslog 7c221af04466aa82fc642476402df61b
import  -/  hslogger-1.2.10@hslogger-1.2.10-6Ih3VN3QBbAJ6pLH6h3KNu:System.Log.Logger 57a31a76a1588b053185f58ff800a901
import  -/  http-client-0.4.31.2@http-client-0.4.31.2-81NyMkNcWWADaJ0Cq5FYRE:Network.HTTP.Client 8c31602f44dbd2cc18bd07c76bc0453c
import  -/  http-client-0.4.31.2@http-client-0.4.31.2-81NyMkNcWWADaJ0Cq5FYRE:Network.HTTP.Client.Manager e07649b973bb21d02bf327f94e8a831b
import  -/  process-1.4.2.0@process-1.4.2.0:System.Process 88e103887120761eec14b4182c67df9c
import  -/  process-1.4.2.0@process-1.4.2.0:System.Process.Internals 772e7ebd116aa2e8b18927858f46cf3c
import  -/  random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe:System.Random 12e582ce6a18ca02c107789bb28c509c
import  -/  resourcet-1.1.8.1@resourcet-1.1.8.1-1XWaZ7RmVde330DM5PRI3Z:Control.Monad.Trans.Resource 6add5f57c5a8580f3180b0380a45d977
import  -/  servant-0.9.1.1@servant-0.9.1.1-JzVvK9yk6sQ1E4UZympEK1:Servant.API 0037a8ec5e3d7af775970baa2c52d7c1
import  -/  servant-0.9.1.1@servant-0.9.1.1-JzVvK9yk6sQ1E4UZympEK1:Servant.API.Alternative 7d4e73ce01670cd8a85baa5f3ddc5484
import  -/  servant-client-0.9.1.1@servant-client-0.9.1.1-Jfbv4D3w2K1d9wGI5VTz3:Servant.Client b0d728a61d1fac7860e8647e2d204379
import  -/  servant-client-0.9.1.1@servant-client-0.9.1.1-Jfbv4D3w2K1d9wGI5VTz3:Servant.Common.BaseUrl 3c2b14238cab8a7b60feab8c16b34c5c
import  -/  servant-client-0.9.1.1@servant-client-0.9.1.1-Jfbv4D3w2K1d9wGI5VTz3:Servant.Common.Req c0da3bf0cf41b7c626a184755ad3ec5b
import  -/  servant-server-0.9.1.1@servant-server-0.9.1.1-66M2tFOHqQqK0MqMhFZVCd:Servant 486b79878ba489ae3f0fe8391c7fd3c5
import  -/  servant-server-0.9.1.1@servant-server-0.9.1.1-66M2tFOHqQqK0MqMhFZVCd:Servant.Server.Internal.ServantErr 03ccb634e8bb3af78dd83269b3acd873
import  -/  text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text 6515f3179e27a91345842b6e634f584c
import  -/  time-1.6.0.1@time-1.6.0.1:Data.Time.Clock b91051c7767d1f23314064be1d4311d7
import  -/  time-1.6.0.1@time-1.6.0.1:Data.Time.Format b6d4cc5df3f9159b1156baa52a254cf6
import  -/  transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Except 71b1d86204f6908788cb5223e3c73193
import  -/  wai-3.2.1.1@wai-3.2.1.1-f77bMYZGLQBAD3XJrvGiW:Network.Wai f10fb472d685284a8637bf34e58bc7f2
import  -/  wai-logger-2.3.0@wai-logger-2.3.0-IfusT8I9ees2102USHAF8e:Network.Wai.Logger 676219d60f680a2e3b4c9a3bb9537896
import  -/  warp-3.2.9@warp-3.2.9-1srGDEsq7RWF9RsucFj6bw:Network.Wai.Handler.Warp 3da15d24b266d35965cd5350be944ee3
d814029235e004f0a82e5814b7f6f709
  $s$fMimeUnrenderTYPEJSONa ::
    Servant.API.ContentTypes.MimeUnrender
      Servant.API.ContentTypes.JSON [GHC.Base.String]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ [GHC.Base.String]
                  (Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cp1MimeUnrender
                     @ [GHC.Base.String]
                     ClientProxyApi.$s$fMimeUnrenderTYPEJSONa_$dFromJSON)
                  ClientProxyApi.$s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender -}
81bc8fd90c0e408c70b7b2453bee7044
  $s$fMimeUnrenderTYPEJSONa1 ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [[GHC.Types.Char]]
  {- Arity: 1,
     Unfolding: (Data.Aeson.Types.Instances.withArray
                   @ [[GHC.Types.Char]]
                   ClientProxyApi.$s$fMimeUnrenderTYPEJSONa5
                   ClientProxyApi.$s$fMimeUnrenderTYPEJSONa2
                     `cast`
                   (<Data.Vector.Vector Data.Aeson.Types.Internal.Value>_R
                    ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                  <[[GHC.Types.Char]]>_R))) -}
a53ed8b5edf332192e5df1de5a7a289c
  $s$fMimeUnrenderTYPEJSONa2 ::
    Data.Vector.Vector Data.Aeson.Types.Internal.Value
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [[GHC.Types.Char]] f r
       -> f r
  {- Arity: 1, Strictness: <L,1*U(U,U,U)>,
     Unfolding: (\ (x :: Data.Vector.Vector
                           Data.Aeson.Types.Internal.Value) ->
                 ClientProxyApi.$s$fMimeUnrenderTYPEJSONa4
                   (GHC.List.zipWith
                      @ GHC.Types.Int
                      @ Data.Aeson.Types.Internal.Value
                      @ (Data.Aeson.Types.Internal.Parser [GHC.Types.Char])
                      ClientProxyApi.$s$fMimeUnrenderTYPEJSONa_f1
                      ClientProxyApi.$s$fMimeUnrenderTYPEJSONa_f2
                      (case x of v2 { Data.Vector.Vector ipv ipv1 ipv2 ->
                       letrec {
                         $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                           {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                         = \ (ww :: GHC.Prim.Int#) ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.>=# ww ipv1) of wild {
                             GHC.Types.False
                             -> case GHC.Prim.indexArray#
                                       @ Data.Aeson.Types.Internal.Value
                                       ipv2
                                       (GHC.Prim.+# ipv ww) of ds2 { Unit# ipv3 ->
                                GHC.Types.:
                                  @ Data.Aeson.Types.Internal.Value
                                  ipv3
                                  ($wgo (GHC.Prim.+# ww 1#)) }
                             GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                       } in
                       $wgo 0# }))) -}
96075febd551517765c4dedd59fe8e06
  $s$fMimeUnrenderTYPEJSONa3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "String"#) -}
36a07a6e367cff13a9fc4eeda416f9de
  $s$fMimeUnrenderTYPEJSONa4 ::
    [Data.Aeson.Types.Internal.Parser [GHC.Types.Char]]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [[GHC.Types.Char]] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
d81223bf573da481c9912cfc4dd6cd18
  $s$fMimeUnrenderTYPEJSONa5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "[a]"#) -}
3b5e0c625eea8359f08485b44b6ac38c
  $s$fMimeUnrenderTYPEJSONa6 ::
    Servant.API.ContentTypes.MimeUnrender
      Servant.API.ContentTypes.JSON GHC.Types.Bool
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ GHC.Types.Bool
                  (Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cp1MimeUnrender
                     @ GHC.Types.Bool
                     Data.Aeson.Types.Instances.$fFromJSONBool_$cparseJSON
                       `cast`
                     (Sym (Data.Aeson.Types.Class.N:FromJSON[0] <GHC.Types.Bool>_N)))
                  ClientProxyApi.$s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender1 -}
b0b31cf6a35f1abf51a552e0df0bc332
  $s$fMimeUnrenderTYPEJSONa7 ::
    Servant.API.ContentTypes.MimeUnrender
      Servant.API.ContentTypes.JSON CommonResources.User
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ CommonResources.User
                  (Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cp1MimeUnrender
                     @ CommonResources.User
                     CommonResources.$fFromJSONUser_$cparseJSON
                       `cast`
                     (Sym (Data.Aeson.Types.Class.N:FromJSON[0]
                               <CommonResources.User>_N)))
                  ClientProxyApi.$s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender2 -}
da15b42cc78b14030387179777450eec
  $s$fMimeUnrenderTYPEJSONa8 ::
    Servant.API.ContentTypes.MimeUnrender
      Servant.API.ContentTypes.JSON CommonResources.Response
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ CommonResources.Response
                  (Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cp1MimeUnrender
                     @ CommonResources.Response
                     CommonResources.$fFromJSONResponse_$cparseJSON
                       `cast`
                     (Sym (Data.Aeson.Types.Class.N:FromJSON[0]
                               <CommonResources.Response>_N)))
                  ClientProxyApi.$s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender3 -}
700f1a350f5bcc260e23e7680fb25e8a
  $s$fMimeUnrenderTYPEJSONa9 ::
    Servant.API.ContentTypes.MimeUnrender
      Servant.API.ContentTypes.JSON CommonResources.File
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ CommonResources.File
                  (Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cp1MimeUnrender
                     @ CommonResources.File
                     CommonResources.$fFromJSONFile_$cparseJSON
                       `cast`
                     (Sym (Data.Aeson.Types.Class.N:FromJSON[0]
                               <CommonResources.File>_N)))
                  ClientProxyApi.$s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender4 -}
84b4e17f88ad08528bd3b20d09e45ee3
  $s$fMimeUnrenderTYPEJSONa_$dFromJSON ::
    Data.Aeson.Types.Class.FromJSON [GHC.Base.String]
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                ClientProxyApi.$s$fMimeUnrenderTYPEJSONa1
                  `cast`
                (Sym (Data.Aeson.Types.Class.N:FromJSON[0]
                          <[[GHC.Types.Char]]>_N)) -}
ed0aa03a57690ccdf722df97a1b22c7d
  $s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.Either.Either GHC.Base.String [GHC.Base.String]
  {- Arity: 2, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Servant.API.ContentTypes.eitherDecodeLenient
                   @ [GHC.Base.String]
                   ClientProxyApi.$s$fMimeUnrenderTYPEJSONa_$dFromJSON
                   eta) -}
4af37ce5dd4ad39478ff14da10317dfe
  $s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender1 ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.Either.Either GHC.Base.String GHC.Types.Bool
  {- Arity: 2, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Servant.API.ContentTypes.eitherDecodeLenient
                   @ GHC.Types.Bool
                   Data.Aeson.Types.Instances.$fFromJSONBool_$cparseJSON
                     `cast`
                   (Sym (Data.Aeson.Types.Class.N:FromJSON[0] <GHC.Types.Bool>_N))
                   eta) -}
a93181a91965554447d02506baa8cda5
  $s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender2 ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.Either.Either GHC.Base.String CommonResources.User
  {- Arity: 2, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Servant.API.ContentTypes.eitherDecodeLenient
                   @ CommonResources.User
                   CommonResources.$fFromJSONUser_$cparseJSON
                     `cast`
                   (Sym (Data.Aeson.Types.Class.N:FromJSON[0]
                             <CommonResources.User>_N))
                   eta) -}
8e7dc2415c9500f21cd3fb9f00fa9dbe
  $s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender3 ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.Either.Either GHC.Base.String CommonResources.Response
  {- Arity: 2, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Servant.API.ContentTypes.eitherDecodeLenient
                   @ CommonResources.Response
                   CommonResources.$fFromJSONResponse_$cparseJSON
                     `cast`
                   (Sym (Data.Aeson.Types.Class.N:FromJSON[0]
                             <CommonResources.Response>_N))
                   eta) -}
eb4d83dbd3e0aff90baf8271d13f4d84
  $s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender4 ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.Either.Either GHC.Base.String CommonResources.File
  {- Arity: 2, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Servant.API.ContentTypes.eitherDecodeLenient
                   @ CommonResources.File
                   CommonResources.$fFromJSONFile_$cparseJSON
                     `cast`
                   (Sym (Data.Aeson.Types.Class.N:FromJSON[0]
                             <CommonResources.File>_N))
                   eta) -}
26809abfd260cc8478999742dc248d18
  $s$fMimeUnrenderTYPEJSONa_f1 ::
    GHC.Types.Int
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [GHC.Types.Char]
  {- Arity: 2, Strictness: <L,1*U(U)><L,1*U>,
     Unfolding: (\ (idx :: GHC.Types.Int)
                   (value :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   pathElem17 :: Data.Aeson.Types.Internal.JSONPathElement
                   = case idx of dt { GHC.Types.I# dt1 ->
                     Data.Aeson.Types.Internal.Index dt1 }
                 } in
                 let {
                   p :: Data.Aeson.Types.Internal.Parser [GHC.Types.Char]
                   = case value of wild {
                       DEFAULT
                       -> Data.Aeson.Types.Class.typeMismatch
                            @ [GHC.Types.Char]
                            ClientProxyApi.$s$fMimeUnrenderTYPEJSONa3
                            wild
                       Data.Aeson.Types.Internal.String txt
                       -> case txt of wild1 { Data.Text.Internal.Text dt dt1 dt2 ->
                          let {
                            a1 :: [GHC.Types.Char]
                            = let {
                                end :: GHC.Prim.Int# = GHC.Prim.+# dt1 dt2
                              } in
                              letrec {
                                $wunfold :: GHC.Prim.Int# -> [GHC.Types.Char]
                                  {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                                = \ (ww :: GHC.Prim.Int#) ->
                                  case GHC.Prim.tagToEnum#
                                         @ GHC.Types.Bool
                                         (GHC.Prim.>=# ww end) of wild2 {
                                    GHC.Types.False
                                    -> case GHC.Prim.indexWord16Array# dt ww of r# { DEFAULT ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.geWord# r# 55296##) of wild3 {
                                         GHC.Types.False
                                         -> GHC.Types.:
                                              @ GHC.Types.Char
                                              (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                              ($wunfold (GHC.Prim.+# ww 1#))
                                         GHC.Types.True
                                         -> case GHC.Prim.tagToEnum#
                                                   @ GHC.Types.Bool
                                                   (GHC.Prim.leWord# r# 56319##) of wild4 {
                                              GHC.Types.False
                                              -> GHC.Types.:
                                                   @ GHC.Types.Char
                                                   (GHC.Types.C#
                                                      (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                                   ($wunfold (GHC.Prim.+# ww 1#))
                                              GHC.Types.True
                                              -> case GHC.Prim.indexWord16Array#
                                                        dt
                                                        (GHC.Prim.+# ww 1#) of r#1 { DEFAULT ->
                                                 GHC.Types.:
                                                   @ GHC.Types.Char
                                                   (GHC.Types.C#
                                                      (GHC.Prim.chr#
                                                         (GHC.Prim.+#
                                                            (GHC.Prim.+#
                                                               (GHC.Prim.uncheckedIShiftL#
                                                                  (GHC.Prim.-#
                                                                     (GHC.Prim.word2Int# r#)
                                                                     55296#)
                                                                  10#)
                                                               (GHC.Prim.-#
                                                                  (GHC.Prim.word2Int# r#1)
                                                                  56320#))
                                                            65536#)))
                                                   ($wunfold (GHC.Prim.+# ww 2#)) } } } }
                                    GHC.Types.True -> GHC.Types.[] @ GHC.Types.Char }
                              } in
                              $wunfold dt1
                          } in
                          (\ @ (f1 :: * -> *)
                             @ r
                             (_path :: Data.Aeson.Types.Internal.JSONPath)
                             (_kf :: Data.Aeson.Types.Internal.Failure f1 r)
                             (ks :: Data.Aeson.Types.Internal.Success [GHC.Types.Char] f1 r) ->
                           ks a1)
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                    <[GHC.Types.Char]>_R)) } }
                 } in
                 (\ @ (f1 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f1 r)
                    (ks :: Data.Aeson.Types.Internal.Success [GHC.Types.Char] f1 r) ->
                  p `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0] <[GHC.Types.Char]>_R)
                    @ f1
                    @ r
                    (GHC.Types.:
                       @ Data.Aeson.Types.Internal.JSONPathElement
                       pathElem17
                       path)
                    kf
                    ks)
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <[GHC.Types.Char]>_R))) -}
ad3c8fa1899cf2000fab5a17a3ea4fc0
  $s$fMimeUnrenderTYPEJSONa_f2 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Enum.eftInt 0# 9223372036854775807#) -}
586b694f59a65226e528527a6a65cb89
  $sclient12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "/"#
                   ClientProxyApi.$sclient13) -}
af2475b3e7ce30d33719149a60e0e631
  $sclient13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "extend"#) -}
9a9391dfdebe4b9937170f8949f6f5d5
  $sclient14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "/"#
                   ClientProxyApi.$sclient15) -}
6148f593726755a67240ab515f8423c0
  $sclient15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "isvalid"#) -}
53d5d1b7c2f9963dc64d1ff9f942214e
  $sclient16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "/"#
                   ClientProxyApi.$sclient17) -}
d95254eebe2a0ed8306ce6a1428ceded
  $sclient17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "register"#) -}
c2de375b768c4b8f8bb3137d51de466b
  $sclient18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "/"#
                   ClientProxyApi.$sclient19) -}
ae7a5c3d3d21988c96d76b6a40a5b55d
  $sclient19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "signin"#) -}
70e47df816df3c97c72a5206aca6875a
  $sclient2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "/"#
                   ClientProxyApi.$sclient3) -}
4619af70a5e9a385bd06c6bb8571361e
  $sclient22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "allfiles"#) -}
095ee27d1481189a8f9af4ef3d429974
  $sclient23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "/"#
                   ClientProxyApi.$sclient24) -}
dbcf4f372d80e4dea90ff484b6c65267
  $sclient24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "close"#) -}
a9e2f86399d95f5f421ef8a2a178429f
  $sclient25 ::
    Data.Proxy.Proxy
      (Servant.API.Verbs.Verb
         'Network.HTTP.Types.Method.GET
         200
         '[Servant.API.ContentTypes.JSON]
         CommonResources.File)
    -> Servant.Common.Req.Req
    -> Servant.Client.Client
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.GET
            200
            '[Servant.API.ContentTypes.JSON]
            CommonResources.File)
  {- Arity: 2, Strictness: <S,1*H><L,1*U(U,U,U,A,U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (w3 :: Data.Proxy.Proxy
                            (Servant.API.Verbs.Verb
                               'Network.HTTP.Types.Method.GET
                               200
                               '[Servant.API.ContentTypes.JSON]
                               CommonResources.File))
                   (w4 :: Servant.Common.Req.Req) ->
                 case w3 of w5 { Data.Proxy.Proxy ->
                 Servant.Client.$w$cclientWithRoute8
                   @ Network.HTTP.Types.Method.StdMethod
                   @ Servant.API.ContentTypes.JSON
                   @ CommonResources.File
                   @ 'Network.HTTP.Types.Method.GET
                   @ '[Servant.API.ContentTypes.JSON]
                   @ '[]
                   @ 200
                   ClientProxyApi.$s$fMimeUnrenderTYPEJSONa9
                   Servant.API.Verbs.$fReflectMethodStdMethodGET_$creflectMethod
                     `cast`
                   (Sym (Servant.API.Verbs.N:ReflectMethod[0]
                             <Network.HTTP.Types.Method.StdMethod>_N
                             <'Network.HTTP.Types.Method.GET>_N))
                   ClientProxyApi.$sclient7
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <[*]>_N) <'[Servant.API.ContentTypes.JSON]>_N <'[Servant.API.ContentTypes.JSON]>_N)
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.GET
                           200
                           '[Servant.API.ContentTypes.JSON]
                           CommonResources.File))
                   w4 }) -}
acd7e6fe81a61ef28326a0770af1b914
  $sclient26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "/"#
                   ClientProxyApi.$sclient27) -}
f073932a3d3b38376984d43882ba5cae
  $sclient27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "open"#) -}
6df5e6d1a7663117379dc7d3fb40ccef
  $sclient28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "/"#
                   ClientProxyApi.$sclient29) -}
e4b2d1c65e41fb94d20c9b751cfd16b9
  $sclient29 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "join"#) -}
d99974d613e7b784ee881b81b007e780
  $sclient3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "islocked"#) -}
44aea3ac85781dc231b91c6bf39b9fc4
  $sclient4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "/"#
                   ClientProxyApi.$sclient5) -}
f006bed7c975f4b6bc66a92d788d5817
  $sclient5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "unlock"#) -}
dd107dc58c2c8c750d7f7ed8b887cc2d
  $sclient6 ::
    Data.Proxy.Proxy
      (Servant.API.Verbs.Verb
         'Network.HTTP.Types.Method.GET
         200
         '[Servant.API.ContentTypes.JSON]
         GHC.Types.Bool)
    -> Servant.Common.Req.Req
    -> Servant.Client.Client
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.GET
            200
            '[Servant.API.ContentTypes.JSON]
            GHC.Types.Bool)
  {- Arity: 2, Strictness: <S,1*H><L,1*U(U,U,U,A,U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (w3 :: Data.Proxy.Proxy
                            (Servant.API.Verbs.Verb
                               'Network.HTTP.Types.Method.GET
                               200
                               '[Servant.API.ContentTypes.JSON]
                               GHC.Types.Bool))
                   (w4 :: Servant.Common.Req.Req) ->
                 case w3 of w5 { Data.Proxy.Proxy ->
                 Servant.Client.$w$cclientWithRoute8
                   @ Network.HTTP.Types.Method.StdMethod
                   @ Servant.API.ContentTypes.JSON
                   @ GHC.Types.Bool
                   @ 'Network.HTTP.Types.Method.GET
                   @ '[Servant.API.ContentTypes.JSON]
                   @ '[]
                   @ 200
                   ClientProxyApi.$s$fMimeUnrenderTYPEJSONa6
                   Servant.API.Verbs.$fReflectMethodStdMethodGET_$creflectMethod
                     `cast`
                   (Sym (Servant.API.Verbs.N:ReflectMethod[0]
                             <Network.HTTP.Types.Method.StdMethod>_N
                             <'Network.HTTP.Types.Method.GET>_N))
                   ClientProxyApi.$sclient7
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <[*]>_N) <'[Servant.API.ContentTypes.JSON]>_N <'[Servant.API.ContentTypes.JSON]>_N)
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.GET
                           200
                           '[Servant.API.ContentTypes.JSON]
                           GHC.Types.Bool))
                   w4 }) -}
a093b58829a7a1bbb5d82087efe5f62e
  $sclient7 ::
    '[Servant.API.ContentTypes.JSON]
    GHC.Types.~~ '[Servant.API.ContentTypes.JSON]
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ [*]
                   @ [*]
                   @ '[Servant.API.ContentTypes.JSON]
                   @ '[Servant.API.ContentTypes.JSON]
                   @~ <'[Servant.API.ContentTypes.JSON]>_N) -}
b14e7220d852051f63c5ccbb5ad2fbce
  $sclient8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "/"#
                   ClientProxyApi.$sclient9) -}
e7c37da20821e319988f01c404947a51
  $sclient9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "lock"#) -}
22baa3c3660e2ce0c033daa1d380f1ec
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   ClientProxyApi.$trModule2
                   ClientProxyApi.$trModule1) -}
3afaea11e61750dbaae77c07fc0ffba0
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "ClientProxyApi"#) -}
a634ad14173eddd4c9c6a4897ed876c5
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "ClientProxy-0.1.0.0-9BMPHdvJGz0CItnFcEqFG3"#) -}
2c10f283695dbe2cdbbcb0b3200b44ab
  $w$dHasClient2 ::
    Data.Proxy.Proxy
      (Servant.API.ReqBody.ReqBody
         '[Servant.API.ContentTypes.JSON] CommonResources.User
       Servant.API.Sub.:> Servant.API.Verbs.Verb
                            'Network.HTTP.Types.Method.POST
                            200
                            '[Servant.API.ContentTypes.JSON]
                            CommonResources.Response)
    -> Servant.Common.Req.Req
    -> CommonResources.User
    -> Servant.Client.Client
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.POST
            200
            '[Servant.API.ContentTypes.JSON]
            CommonResources.Response)
  {- Arity: 3, Strictness: <S,1*H><L,1*U(U,U,A,A,U)><L,1*U(U,U,U,U)>,
     Inline: [0],
     Unfolding: (\ (w :: Data.Proxy.Proxy
                           (Servant.API.ReqBody.ReqBody
                              '[Servant.API.ContentTypes.JSON] CommonResources.User
                            Servant.API.Sub.:> Servant.API.Verbs.Verb
                                                 'Network.HTTP.Types.Method.POST
                                                 200
                                                 '[Servant.API.ContentTypes.JSON]
                                                 CommonResources.Response))
                   (w1 :: Servant.Common.Req.Req)
                   (w2 :: CommonResources.User) ->
                 Servant.Client.$w$cclientWithRoute8
                   @ Network.HTTP.Types.Method.StdMethod
                   @ Servant.API.ContentTypes.JSON
                   @ CommonResources.Response
                   @ 'Network.HTTP.Types.Method.POST
                   @ '[Servant.API.ContentTypes.JSON]
                   @ '[]
                   @ 200
                   ClientProxyApi.$s$fMimeUnrenderTYPEJSONa8
                   Servant.API.Verbs.$fReflectMethodStdMethodPOST_$creflectMethod
                     `cast`
                   (Sym (Servant.API.Verbs.N:ReflectMethod[0]
                             <Network.HTTP.Types.Method.StdMethod>_N
                             <'Network.HTTP.Types.Method.POST>_N))
                   ClientProxyApi.$sclient7
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <[*]>_N) <'[Servant.API.ContentTypes.JSON]>_N <'[Servant.API.ContentTypes.JSON]>_N)
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.POST
                           200
                           '[Servant.API.ContentTypes.JSON]
                           CommonResources.Response))
                   (case w1 of wild1 { Servant.Common.Req.Req ds2 ds3 ds4 ds5 ds6 ->
                    Servant.Common.Req.Req
                      ds2
                      ds3
                      (GHC.Base.Just
                         @ (Data.ByteString.Lazy.Internal.ByteString,
                            Network.HTTP.Media.MediaType.Internal.MediaType)
                         (Data.ByteString.Builder.toLazyByteString
                            (Data.Aeson.Encode.Builder.encodeToBuilder
                               (CommonResources.$fToJSONUser1 w2)
                                 `cast`
                               (Data.Aeson.Types.Generic.N:Tagged[0]
                                    <Data.Aeson.Types.Generic.True>_P
                                    <Data.Aeson.Types.Internal.Value>_R)),
                          Servant.API.ContentTypes.$fAcceptTYPEJSON1))
                      ds5
                      ds6 })) -}
868c98dc8483a76ca249b51a97c8a339
  type ApiHandler =
    Control.Monad.Trans.Except.ExceptT
      Servant.Server.Internal.ServantErr.ServantErr GHC.Types.IO
    :: * -> *
afc00a37c788a68ba6fae2013f15f5b2
  allfiles :: Servant.Common.Req.ClientM [GHC.Base.String]
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                ClientProxyApi.allfiles1
                  `cast`
                (Trans
                     (<Servant.Common.Req.ClientEnv>_R
                      ->_R Trans
                               (Sym (GHC.Types.N:IO[0]
                                         <Data.Either.Either
                                            Servant.Common.Req.ServantError [GHC.Base.String]>_R))
                               (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                         <Servant.Common.Req.ServantError>_N
                                         <GHC.Types.IO>_R
                                         <[GHC.Base.String]>_N)))
                     (Trans
                          (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                    <*>_N
                                    <Servant.Common.Req.ClientEnv>_R
                                    <Control.Monad.Trans.Except.ExceptT
                                       Servant.Common.Req.ServantError GHC.Types.IO>_R
                                    <[GHC.Base.String]>_N))
                          (Sym (Servant.Common.Req.N:ClientM[0]) <[GHC.Base.String]>_N))) -}
98c2d5c268fc2d25ab765112505008dd
  allfiles1 ::
    Servant.Common.Req.ClientEnv
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Servant.Common.Req.ServantError [GHC.Base.String] #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta1 :: Servant.Common.Req.ClientEnv)
                   (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (ClientProxyApi.allfiles_eta
                         `cast`
                       (Trans
                            (Servant.Common.Req.N:ClientM[0] <([Network.HTTP.Types.Header.Header],
                                                               [GHC.Base.String])>_N)
                            (Control.Monad.Trans.Reader.N:ReaderT[0]
                                 <*>_N
                                 <Servant.Common.Req.ClientEnv>_R
                                 <Control.Monad.Trans.Except.ExceptT
                                    Servant.Common.Req.ServantError GHC.Types.IO>_R
                                 <([Network.HTTP.Types.Header.Header], [GHC.Base.String])>_N))
                         eta1)
                        `cast`
                      (Trans
                           (Control.Monad.Trans.Except.N:ExceptT[0]
                                <Servant.Common.Req.ServantError>_N
                                <GHC.Types.IO>_R
                                <([Network.HTTP.Types.Header.Header], [GHC.Base.String])>_N)
                           (GHC.Types.N:IO[0]
                                <Data.Either.Either
                                   Servant.Common.Req.ServantError
                                   ([Network.HTTP.Types.Header.Header], [GHC.Base.String])>_R))
                        eta2 of ds { (#,#) ipv ipv1 ->
                 (# ipv,
                    case ipv1 of wild {
                      Data.Either.Left x
                      -> Data.Either.Left
                           @ Servant.Common.Req.ServantError
                           @ [GHC.Base.String]
                           x
                      Data.Either.Right y
                      -> Data.Either.Right
                           @ Servant.Common.Req.ServantError
                           @ [GHC.Base.String]
                           (Data.Tuple.snd
                              @ [Network.HTTP.Types.Header.Header]
                              @ [GHC.Base.String]
                              y) } #) }) -}
e5cb7be95c96076540cacad517213228
  allfiles2 :: Servant.Common.Req.Req
  {- Unfolding: (Servant.Common.Req.Req
                   ClientProxyApi.allfiles3
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text,
                         GHC.Base.Maybe Data.Text.Internal.Text))
                   (GHC.Base.Nothing
                      @ (Data.ByteString.Lazy.Internal.ByteString,
                         Network.HTTP.Media.MediaType.Internal.MediaType))
                   (GHC.Types.[] @ Network.HTTP.Media.MediaType.Internal.MediaType)
                   (GHC.Types.[] @ (GHC.Base.String, Data.Text.Internal.Text))) -}
72379be90b9e1e38a5493f71a5ad100d
  allfiles3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   (GHC.Types.[] @ GHC.Types.Char)
                   ClientProxyApi.allfiles4) -}
dda377353f7c01d36fc07dcbd9bdf9bd
  allfiles4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "/"#
                   ClientProxyApi.$sclient22) -}
0322a86d3c12fec979c988233d21b9b4
  allfiles_eta ::
    Servant.Common.Req.ClientM
      ([Network.HTTP.Types.Header.Header], [GHC.Base.String])
  {- Unfolding: (Servant.Common.Req.performRequestCT
                   @ Servant.API.ContentTypes.JSON
                   @ [GHC.Base.String]
                   ClientProxyApi.$s$fMimeUnrenderTYPEJSONa
                   (Data.Proxy.Proxy @ GHC.Types.* @ Servant.API.ContentTypes.JSON)
                   Network.HTTP.Types.Method.methodGet
                   ClientProxyApi.allfiles2) -}
69e065ef726d3d3337cd412844ed48cf
  authApi :: Data.Proxy.Proxy CommonResources.AuthApi
  {- HasNoCafRefs,
     Unfolding: InlineRule (0, True, True)
                (Data.Proxy.Proxy @ * @ CommonResources.AuthApi) -}
0685db3078746044edc1f9379563dc71
  authlogin :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                ClientProxyApi.authlogin1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <()>_R)) -}
b120369c9da59c6acc88ff4a4be98813
  authlogin1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U> -}
dd4b9ff50272436e568567874e1a5fbc
  authpart :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                ClientProxyApi.authpart1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
9b1bd525dc185ff177435ecd1d9af478
  authpart1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U> -}
1a7c4be7b057f9ff712db14bfa0fc244
  authregister :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                ClientProxyApi.authregister1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <()>_R)) -}
d14c2ded67ef4b0a94b377fbbd50aee9
  authregister1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ClientProxyApi.authregister3 s of ds1 { (#,#) ipv ipv1 ->
                 ClientProxyApi.authregister2 ipv }) -}
3db490abf626e09a7f1109f2fdc82989
  authregister2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U> -}
5c0261fae083c4067ab56af6e1a6e369
  authregister3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   ClientProxyApi.authregister4
                   GHC.Types.True
                   eta) -}
e7c567b79fa938809d2ac7654a5d4b3b
  authregister4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Enter your details to make a new account"#) -}
fdaadfcf44b2b0b242e92097e34b6c1e
  close ::
    CommonResources.File
    -> Servant.Common.Req.ClientM CommonResources.Response
  {- Arity: 1, Strictness: <L,1*U(1*U,1*U)>,
     Unfolding: InlineRule (0, True, True)
                ClientProxyApi.close1
                  `cast`
                (<CommonResources.File>_R
                 ->_R Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                               <Network.HTTP.Types.Method.StdMethod>_N
                               <CommonResources.Response>_N
                               <'Network.HTTP.Types.Method.POST>_N
                               <'[Servant.API.ContentTypes.JSON]>_N
                               <200>_N)) -}
01ae08419c8a76681fcc0bc83ff710ea
  close1 ::
    CommonResources.File
    -> Servant.Client.Client
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.POST
            200
            '[Servant.API.ContentTypes.JSON]
            CommonResources.Response)
  {- Arity: 1, Strictness: <L,1*U(1*U,1*U)>,
     Unfolding: (\ (body :: CommonResources.File) ->
                 Servant.Client.$w$cclientWithRoute8
                   @ Network.HTTP.Types.Method.StdMethod
                   @ Servant.API.ContentTypes.JSON
                   @ CommonResources.Response
                   @ 'Network.HTTP.Types.Method.POST
                   @ '[Servant.API.ContentTypes.JSON]
                   @ '[]
                   @ 200
                   ClientProxyApi.$s$fMimeUnrenderTYPEJSONa8
                   Servant.API.Verbs.$fReflectMethodStdMethodPOST_$creflectMethod
                     `cast`
                   (Sym (Servant.API.Verbs.N:ReflectMethod[0]
                             <Network.HTTP.Types.Method.StdMethod>_N
                             <'Network.HTTP.Types.Method.POST>_N))
                   ClientProxyApi.$sclient7
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <[*]>_N) <'[Servant.API.ContentTypes.JSON]>_N <'[Servant.API.ContentTypes.JSON]>_N)
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.POST
                           200
                           '[Servant.API.ContentTypes.JSON]
                           CommonResources.Response))
                   (Servant.Common.Req.Req
                      ClientProxyApi.close2
                      (GHC.Types.[]
                         @ (Data.Text.Internal.Text,
                            GHC.Base.Maybe Data.Text.Internal.Text))
                      (GHC.Base.Just
                         @ (Data.ByteString.Lazy.Internal.ByteString,
                            Network.HTTP.Media.MediaType.Internal.MediaType)
                         (Data.ByteString.Builder.toLazyByteString
                            (Data.Aeson.Encode.Builder.encodeToBuilder
                               (CommonResources.$fToJSONFile1 body)
                                 `cast`
                               (Data.Aeson.Types.Generic.N:Tagged[0]
                                    <Data.Aeson.Types.Generic.True>_P
                                    <Data.Aeson.Types.Internal.Value>_R)),
                          Servant.API.ContentTypes.$fAcceptTYPEJSON1))
                      (GHC.Types.[] @ Network.HTTP.Media.MediaType.Internal.MediaType)
                      (GHC.Types.[] @ (GHC.Base.String, Data.Text.Internal.Text)))) -}
3b4fcefa5e5cea67e980550dad8e2226
  close2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   (GHC.Types.[] @ GHC.Types.Char)
                   ClientProxyApi.$sclient23) -}
cea7dfc1dc6eb361053350c0ec378b13
  closeQuery ::
    CommonResources.File
    -> Servant.Common.Req.ClientM CommonResources.Response
  {- Arity: 1, Strictness: <L,1*U(1*U,1*U)>,
     Unfolding: (\ (file :: CommonResources.File) ->
                 let {
                   m1 :: Servant.Client.Client
                           (Servant.API.Verbs.Verb
                              'Network.HTTP.Types.Method.POST
                              200
                              '[Servant.API.ContentTypes.JSON]
                              CommonResources.Response)
                   = ClientProxyApi.close1 file
                 } in
                 (\ (r1 :: Servant.Common.Req.ClientEnv)
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (m1
                          `cast`
                        (Trans
                             (Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                                       <Network.HTTP.Types.Method.StdMethod>_N
                                       <CommonResources.Response>_N
                                       <'Network.HTTP.Types.Method.POST>_N
                                       <'[Servant.API.ContentTypes.JSON]>_N
                                       <200>_N))
                             (Trans
                                  (Servant.Common.Req.N:ClientM[0] <CommonResources.Response>_N)
                                  (Control.Monad.Trans.Reader.N:ReaderT[0]
                                       <*>_N
                                       <Servant.Common.Req.ClientEnv>_R
                                       <Control.Monad.Trans.Except.ExceptT
                                          Servant.Common.Req.ServantError GHC.Types.IO>_R
                                       <CommonResources.Response>_N)))
                          r1)
                         `cast`
                       (Trans
                            (Control.Monad.Trans.Except.N:ExceptT[0]
                                 <Servant.Common.Req.ServantError>_N
                                 <GHC.Types.IO>_R
                                 <CommonResources.Response>_N)
                            (GHC.Types.N:IO[0]
                                 <Data.Either.Either
                                    Servant.Common.Req.ServantError CommonResources.Response>_R))
                         s of ds1 { (#,#) ipv ipv1 ->
                  case ipv1 of wild {
                    Data.Either.Left e1 -> ds1
                    Data.Either.Right x
                    -> Servant.Common.Req.$fApplicativeClientM5
                         @ CommonResources.Response
                         x
                         r1
                         ipv } })
                   `cast`
                 (Trans
                      (<Servant.Common.Req.ClientEnv>_R
                       ->_R Trans
                                (Sym (GHC.Types.N:IO[0]
                                          <Data.Either.Either
                                             Servant.Common.Req.ServantError
                                             CommonResources.Response>_R))
                                (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                          <Servant.Common.Req.ServantError>_N
                                          <GHC.Types.IO>_R
                                          <CommonResources.Response>_N)))
                      (Trans
                           (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                     <*>_N
                                     <Servant.Common.Req.ClientEnv>_R
                                     <Control.Monad.Trans.Except.ExceptT
                                        Servant.Common.Req.ServantError GHC.Types.IO>_R
                                     <CommonResources.Response>_N))
                           (Sym (Servant.Common.Req.N:ClientM[0]) <CommonResources.Response>_N)))) -}
c5b384318a58b0c7cd88d6fd70d4f547
  directoryApi :: Data.Proxy.Proxy CommonResources.DirectoryApi
  {- HasNoCafRefs,
     Unfolding: InlineRule (0, True, True)
                (Data.Proxy.Proxy @ * @ CommonResources.DirectoryApi) -}
5a3d9888cf79b7f4264cfb001064a144
  displayFiles ::
    CommonResources.User
    -> LRUCache.Handle GHC.Base.String GHC.Base.String
    -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U(U,U,U,U)><L,U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                ClientProxyApi.displayFiles1
                  `cast`
                (<CommonResources.User>_R
                 ->_R <LRUCache.Handle GHC.Base.String GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
4e8592f503e31dd8397836da0978bd4b
  displayFiles1 ::
    CommonResources.User
    -> LRUCache.Handle GHC.Base.String GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U(U,U,U,U)><L,U(U)><S,U> -}
7a2cfa07f2dfecf2f4dedf3157755f66
  downloadFile ::
    CommonResources.User
    -> LRUCache.Handle GHC.Base.String GHC.Base.String
    -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U(U,U,U,U)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                ClientProxyApi.downloadFile1
                  `cast`
                (<CommonResources.User>_R
                 ->_R <LRUCache.Handle GHC.Base.String GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
e2b27bc1d55e53ff6c6b55c94f0cfef7
  downloadFile1 ::
    CommonResources.User
    -> LRUCache.Handle GHC.Base.String GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U(U,U,U,U)><L,1*U(U)><S,U> -}
513b3799a772b91da9cb1aea76fc6de0
  extend ::
    CommonResources.User
    -> Servant.Common.Req.ClientM CommonResources.Response
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                ClientProxyApi.extend1
                  `cast`
                (<CommonResources.User>_R
                 ->_R Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                               <Network.HTTP.Types.Method.StdMethod>_N
                               <CommonResources.Response>_N
                               <'Network.HTTP.Types.Method.POST>_N
                               <'[Servant.API.ContentTypes.JSON]>_N
                               <200>_N)) -}
dfd277869e8deae6bc87f5350e9ec653
  extend1 ::
    CommonResources.User
    -> Servant.Client.Client
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.POST
            200
            '[Servant.API.ContentTypes.JSON]
            CommonResources.Response)
  {- Arity: 1,
     Unfolding: (\ (w :: CommonResources.User) ->
                 ClientProxyApi.$w$dHasClient2
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.ReqBody.ReqBody
                           '[Servant.API.ContentTypes.JSON] CommonResources.User
                         Servant.API.Sub.:> Servant.API.Verbs.Verb
                                              'Network.HTTP.Types.Method.POST
                                              200
                                              '[Servant.API.ContentTypes.JSON]
                                              CommonResources.Response))
                   ClientProxyApi.extend2
                   w) -}
12456fb17251fc2f7aa4841aea6fe263
  extend2 :: Servant.Common.Req.Req
  {- Strictness: m,
     Unfolding: (Servant.Common.Req.Req
                   ClientProxyApi.extend3
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text,
                         GHC.Base.Maybe Data.Text.Internal.Text))
                   (GHC.Base.Nothing
                      @ (Data.ByteString.Lazy.Internal.ByteString,
                         Network.HTTP.Media.MediaType.Internal.MediaType))
                   (GHC.Types.[] @ Network.HTTP.Media.MediaType.Internal.MediaType)
                   (GHC.Types.[] @ (GHC.Base.String, Data.Text.Internal.Text))) -}
83fbf63785ea18da4cc6db25cbd379eb
  extend3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   (GHC.Types.[] @ GHC.Types.Char)
                   ClientProxyApi.$sclient12) -}
b4533cd906c17d790fa7db8024a1fc7b
  extendQuery ::
    CommonResources.User
    -> Servant.Common.Req.ClientM CommonResources.Response
  {- Arity: 1, Strictness: <L,1*U(U,U,U,U)>,
     Unfolding: (\ (extenddetails :: CommonResources.User) ->
                 let {
                   m1 :: Servant.Client.Client
                           (Servant.API.Verbs.Verb
                              'Network.HTTP.Types.Method.POST
                              200
                              '[Servant.API.ContentTypes.JSON]
                              CommonResources.Response)
                   = ClientProxyApi.$w$dHasClient2
                       (Data.Proxy.Proxy
                          @ *
                          @ (Servant.API.ReqBody.ReqBody
                               '[Servant.API.ContentTypes.JSON] CommonResources.User
                             Servant.API.Sub.:> Servant.API.Verbs.Verb
                                                  'Network.HTTP.Types.Method.POST
                                                  200
                                                  '[Servant.API.ContentTypes.JSON]
                                                  CommonResources.Response))
                       ClientProxyApi.extend2
                       extenddetails
                 } in
                 (\ (r1 :: Servant.Common.Req.ClientEnv)
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (m1
                          `cast`
                        (Trans
                             (Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                                       <Network.HTTP.Types.Method.StdMethod>_N
                                       <CommonResources.Response>_N
                                       <'Network.HTTP.Types.Method.POST>_N
                                       <'[Servant.API.ContentTypes.JSON]>_N
                                       <200>_N))
                             (Trans
                                  (Servant.Common.Req.N:ClientM[0] <CommonResources.Response>_N)
                                  (Control.Monad.Trans.Reader.N:ReaderT[0]
                                       <*>_N
                                       <Servant.Common.Req.ClientEnv>_R
                                       <Control.Monad.Trans.Except.ExceptT
                                          Servant.Common.Req.ServantError GHC.Types.IO>_R
                                       <CommonResources.Response>_N)))
                          r1)
                         `cast`
                       (Trans
                            (Control.Monad.Trans.Except.N:ExceptT[0]
                                 <Servant.Common.Req.ServantError>_N
                                 <GHC.Types.IO>_R
                                 <CommonResources.Response>_N)
                            (GHC.Types.N:IO[0]
                                 <Data.Either.Either
                                    Servant.Common.Req.ServantError CommonResources.Response>_R))
                         s of ds1 { (#,#) ipv ipv1 ->
                  case ipv1 of wild {
                    Data.Either.Left e1 -> ds1
                    Data.Either.Right x
                    -> Servant.Common.Req.$fApplicativeClientM5
                         @ CommonResources.Response
                         x
                         r1
                         ipv } })
                   `cast`
                 (Trans
                      (<Servant.Common.Req.ClientEnv>_R
                       ->_R Trans
                                (Sym (GHC.Types.N:IO[0]
                                          <Data.Either.Either
                                             Servant.Common.Req.ServantError
                                             CommonResources.Response>_R))
                                (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                          <Servant.Common.Req.ServantError>_N
                                          <GHC.Types.IO>_R
                                          <CommonResources.Response>_N)))
                      (Trans
                           (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                     <*>_N
                                     <Servant.Common.Req.ClientEnv>_R
                                     <Control.Monad.Trans.Except.ExceptT
                                        Servant.Common.Req.ServantError GHC.Types.IO>_R
                                     <CommonResources.Response>_N))
                           (Sym (Servant.Common.Req.N:ClientM[0]) <CommonResources.Response>_N)))) -}
26fd97060420d0322503d6d3a8612e61
  extendToken :: CommonResources.User -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,1*U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                ClientProxyApi.extendToken1
                  `cast`
                (<CommonResources.User>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
3f950fe33196c5f1df147cfb56f8f2b0
  extendToken1 ::
    CommonResources.User
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,1*U(U,U,U,U)><S,U>,
     Unfolding: (\ (user :: CommonResources.User)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Network.HTTP.Client.Manager.$wnewManager
                        Network.HTTP.Client.Manager.defaultManagerSettings18
                        Network.HTTP.Client.Manager.defaultManagerSettings15
                          `cast`
                        (Sym (GHC.Types.N:IO[0]
                                  <GHC.Base.Maybe Network.Socket.Types.HostAddress
                                   -> GHC.Base.String
                                   -> GHC.Types.Int
                                   -> GHC.Types.IO Network.HTTP.Client.Types.Connection>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings14
                          `cast`
                        (Sym (GHC.Types.N:IO[0]
                                  <GHC.Base.Maybe Network.Socket.Types.HostAddress
                                   -> GHC.Base.String
                                   -> GHC.Types.Int
                                   -> GHC.Types.IO Network.HTTP.Client.Types.Connection>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings11
                          `cast`
                        (Sym (GHC.Types.N:IO[0]
                                  <Data.ByteString.Internal.ByteString
                                   -> (Network.HTTP.Client.Types.Connection -> GHC.Types.IO ())
                                   -> GHC.Base.String
                                   -> GHC.Base.Maybe Network.Socket.Types.HostAddress
                                   -> GHC.Base.String
                                   -> GHC.Types.Int
                                   -> GHC.Types.IO Network.HTTP.Client.Types.Connection>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings9
                        Network.HTTP.Client.Manager.defaultManagerSettings8
                        Network.HTTP.Client.Manager.defaultManagerSettings6
                          `cast`
                        (forall (a :: <*>_N).
                         <GHC.Types.IO a>_R ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings5
                        (GHC.Base.returnIO1 @ Network.HTTP.Client.Types.Request)
                          `cast`
                        (<Network.HTTP.Client.Types.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Network.HTTP.Client.Types.Request>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings1
                          `cast`
                        (Trans
                             (<GHC.Types.Bool>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Network.HTTP.Client.Types.Request
                                             -> Network.HTTP.Client.Types.Request>_R))
                             (Sym (Network.HTTP.Client.Types.N:ProxyOverride[0])))
                        Network.HTTP.Client.Manager.defaultManagerSettings1
                          `cast`
                        (Trans
                             (<GHC.Types.Bool>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Network.HTTP.Client.Types.Request
                                             -> Network.HTTP.Client.Types.Request>_R))
                             (Sym (Network.HTTP.Client.Types.N:ProxyOverride[0])))
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ((ClientProxyApi.$w$dHasClient2
                          (Data.Proxy.Proxy
                             @ *
                             @ (Servant.API.ReqBody.ReqBody
                                  '[Servant.API.ContentTypes.JSON] CommonResources.User
                                Servant.API.Sub.:> Servant.API.Verbs.Verb
                                                     'Network.HTTP.Types.Method.POST
                                                     200
                                                     '[Servant.API.ContentTypes.JSON]
                                                     CommonResources.Response))
                          ClientProxyApi.extend2
                          user)
                         `cast`
                       (Trans
                            (Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                                      <Network.HTTP.Types.Method.StdMethod>_N
                                      <CommonResources.Response>_N
                                      <'Network.HTTP.Types.Method.POST>_N
                                      <'[Servant.API.ContentTypes.JSON]>_N
                                      <200>_N))
                            (Trans
                                 (Servant.Common.Req.N:ClientM[0] <CommonResources.Response>_N)
                                 (Control.Monad.Trans.Reader.N:ReaderT[0]
                                      <*>_N
                                      <Servant.Common.Req.ClientEnv>_R
                                      <Control.Monad.Trans.Except.ExceptT
                                         Servant.Common.Req.ServantError GHC.Types.IO>_R
                                      <CommonResources.Response>_N)))
                         (Servant.Common.Req.ClientEnv ipv1 ClientProxyApi.extendToken2))
                        `cast`
                      (Trans
                           (Control.Monad.Trans.Except.N:ExceptT[0]
                                <Servant.Common.Req.ServantError>_N
                                <GHC.Types.IO>_R
                                <CommonResources.Response>_N)
                           (GHC.Types.N:IO[0]
                                <Data.Either.Either
                                   Servant.Common.Req.ServantError CommonResources.Response>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   Data.Either.Left e1
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (GHC.CString.unpackAppendCString#
                           "Error: "#
                           (Servant.Common.Req.$w$cshowsPrec
                              0#
                              e1
                              (GHC.Types.[] @ GHC.Types.Char)))
                        GHC.Types.True
                        ipv2
                   Data.Either.Right x -> (# ipv2, GHC.Tuple.() #) } } }) -}
f0695722beeb1634fccb9c259a753a76
  extendToken2 :: Servant.Common.BaseUrl.BaseUrl
  {- Strictness: m,
     Unfolding: (Servant.Common.BaseUrl.BaseUrl
                   Servant.Common.BaseUrl.Http
                   CommonResources.lockserverhost
                   ClientProxyApi.extendToken3
                   (GHC.Types.[] @ GHC.Types.Char)) -}
efbe9f5839505af4a86b96ee1b056b52
  extendToken3 :: GHC.Types.Int
  {- Unfolding: (case Text.Read.readEither6
                        @ GHC.Types.Int
                        ClientProxyApi.extendToken4 of wild {
                   []
                   -> GHC.Err.error
                        @ 'GHC.Types.PtrRepLifted
                        @ GHC.Types.Int
                        GHC.Err.errorWithoutStackTrace_wild1
                          `cast`
                        (Sym (GHC.Classes.N:IP[0]
                                  <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                        Text.Read.readEither4
                   : x ds
                   -> case ds of wild1 {
                        [] -> x
                        : ipv ipv1
                        -> GHC.Err.error
                             @ 'GHC.Types.PtrRepLifted
                             @ GHC.Types.Int
                             GHC.Err.errorWithoutStackTrace_wild1
                               `cast`
                             (Sym (GHC.Classes.N:IP[0]
                                       <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                             Text.Read.readEither2 } }) -}
9e3640e7ceb1bc1e62beff748c546d9f
  extendToken4 :: [(GHC.Types.Int, GHC.Base.String)]
  {- Unfolding: (Text.ParserCombinators.ReadP.run
                   @ GHC.Types.Int
                   ClientProxyApi.extendToken5
                   CommonResources.authserverport) -}
0fe687ef3742eb1d048a4c55d9c343d5
  extendToken5 :: Text.ParserCombinators.ReadP.P GHC.Types.Int
  {- Unfolding: ((GHC.Read.$fReadInt3
                    GHC.Read.$fReadInt_$sconvertInt
                    Text.ParserCombinators.ReadPrec.minPrec)
                   `cast`
                 (Text.ParserCombinators.ReadP.N:ReadP[0] <GHC.Types.Int>_R)
                   @ GHC.Types.Int
                   (Text.Read.readEither5 @ GHC.Types.Int)) -}
da7b60ff5597ce7bace0e6627b9242a8
  getFile ::
    GHC.Base.String
    -> CommonResources.User
    -> LRUCache.Handle GHC.Base.String GHC.Base.String
    -> GHC.Types.IO ()
  {- Arity: 4, Strictness: <L,U><L,U(U,U,U,U)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                ClientProxyApi.getFile1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R <CommonResources.User>_R
                 ->_R <LRUCache.Handle GHC.Base.String GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
af44c3573644e9e095141f3f3d9f2358
  getFile1 ::
    GHC.Base.String
    -> CommonResources.User
    -> LRUCache.Handle GHC.Base.String GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,U><L,U(U,U,U,U)><L,1*U(U)><S,U> -}
0d333f22b8de2b09d5211e1077e3cd4b
  isTokenValid :: CommonResources.User -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,1*U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                ClientProxyApi.isTokenValid1
                  `cast`
                (<CommonResources.User>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
41011e2d7dda9f6933b430e93202aed0
  isTokenValid1 ::
    CommonResources.User
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,1*U(U,U,U,U)><S,U> -}
111cd0043d110f7fa4d0c2f8e28648d0
  islocked ::
    GHC.Base.String -> Servant.Common.Req.ClientM GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                ClientProxyApi.islocked1
                  `cast`
                (<[GHC.Types.Char]>_R
                 ->_R Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                               <Network.HTTP.Types.Method.StdMethod>_N
                               <GHC.Types.Bool>_N
                               <'Network.HTTP.Types.Method.GET>_N
                               <'[Servant.API.ContentTypes.JSON]>_N
                               <200>_N)) -}
1857da36fb331897946df5a9428aa81a
  islocked1 ::
    [GHC.Types.Char]
    -> Servant.Client.Client
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.GET
            200
            '[Servant.API.ContentTypes.JSON]
            GHC.Types.Bool)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (w5 :: [GHC.Types.Char]) ->
                 Servant.Client.$w$cclientWithRoute1
                   @ *
                   @ "fileName"
                   @ [GHC.Types.Char]
                   @ (Servant.API.Verbs.Verb
                        'Network.HTTP.Types.Method.GET
                        200
                        '[Servant.API.ContentTypes.JSON]
                        GHC.Types.Bool)
                   Web.Internal.HttpApiData.$fToHttpApiData[]
                   ClientProxyApi.$sclient6
                     `cast`
                   (Sym (Servant.Client.N:HasClient[0]
                             <*>_N
                             <Servant.API.Verbs.Verb
                                'Network.HTTP.Types.Method.GET
                                200
                                '[Servant.API.ContentTypes.JSON]
                                GHC.Types.Bool>_N))
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Capture.Capture "fileName" [GHC.Types.Char]
                         Servant.API.Sub.:> Servant.API.Verbs.Verb
                                              'Network.HTTP.Types.Method.GET
                                              200
                                              '[Servant.API.ContentTypes.JSON]
                                              GHC.Types.Bool))
                   ClientProxyApi.islocked2
                   w5) -}
9d3961f7dd7fd6368b2848ba24914411
  islocked2 :: Servant.Common.Req.Req
  {- Strictness: m,
     Unfolding: (Servant.Common.Req.Req
                   ClientProxyApi.islocked3
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text,
                         GHC.Base.Maybe Data.Text.Internal.Text))
                   (GHC.Base.Nothing
                      @ (Data.ByteString.Lazy.Internal.ByteString,
                         Network.HTTP.Media.MediaType.Internal.MediaType))
                   (GHC.Types.[] @ Network.HTTP.Media.MediaType.Internal.MediaType)
                   (GHC.Types.[] @ (GHC.Base.String, Data.Text.Internal.Text))) -}
0392aed5ff64d52012574799ccb551b5
  islocked3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   (GHC.Types.[] @ GHC.Types.Char)
                   ClientProxyApi.$sclient2) -}
e193338d3913bba53ae4c1554c0b9eb8
  islockedQuery ::
    GHC.Base.String -> Servant.Common.Req.ClientM GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (fName :: GHC.Base.String) ->
                 let {
                   m1 :: Servant.Client.Client
                           (Servant.API.Verbs.Verb
                              'Network.HTTP.Types.Method.GET
                              200
                              '[Servant.API.ContentTypes.JSON]
                              GHC.Types.Bool)
                   = Servant.Client.$w$cclientWithRoute1
                       @ *
                       @ "fileName"
                       @ [GHC.Types.Char]
                       @ (Servant.API.Verbs.Verb
                            'Network.HTTP.Types.Method.GET
                            200
                            '[Servant.API.ContentTypes.JSON]
                            GHC.Types.Bool)
                       Web.Internal.HttpApiData.$fToHttpApiData[]
                       ClientProxyApi.$sclient6
                         `cast`
                       (Sym (Servant.Client.N:HasClient[0]
                                 <*>_N
                                 <Servant.API.Verbs.Verb
                                    'Network.HTTP.Types.Method.GET
                                    200
                                    '[Servant.API.ContentTypes.JSON]
                                    GHC.Types.Bool>_N))
                       (Data.Proxy.Proxy
                          @ *
                          @ (Servant.API.Capture.Capture "fileName" [GHC.Types.Char]
                             Servant.API.Sub.:> Servant.API.Verbs.Verb
                                                  'Network.HTTP.Types.Method.GET
                                                  200
                                                  '[Servant.API.ContentTypes.JSON]
                                                  GHC.Types.Bool))
                       ClientProxyApi.islocked2
                       fName
                 } in
                 (\ (r1 :: Servant.Common.Req.ClientEnv)
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (m1
                          `cast`
                        (Trans
                             (Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                                       <Network.HTTP.Types.Method.StdMethod>_N
                                       <GHC.Types.Bool>_N
                                       <'Network.HTTP.Types.Method.GET>_N
                                       <'[Servant.API.ContentTypes.JSON]>_N
                                       <200>_N))
                             (Trans
                                  (Servant.Common.Req.N:ClientM[0] <GHC.Types.Bool>_N)
                                  (Control.Monad.Trans.Reader.N:ReaderT[0]
                                       <*>_N
                                       <Servant.Common.Req.ClientEnv>_R
                                       <Control.Monad.Trans.Except.ExceptT
                                          Servant.Common.Req.ServantError GHC.Types.IO>_R
                                       <GHC.Types.Bool>_N)))
                          r1)
                         `cast`
                       (Trans
                            (Control.Monad.Trans.Except.N:ExceptT[0]
                                 <Servant.Common.Req.ServantError>_N
                                 <GHC.Types.IO>_R
                                 <GHC.Types.Bool>_N)
                            (GHC.Types.N:IO[0]
                                 <Data.Either.Either
                                    Servant.Common.Req.ServantError GHC.Types.Bool>_R))
                         s of ds1 { (#,#) ipv ipv1 ->
                  case ipv1 of wild {
                    Data.Either.Left e1 -> ds1
                    Data.Either.Right x
                    -> Servant.Common.Req.$fApplicativeClientM5
                         @ GHC.Types.Bool
                         x
                         r1
                         ipv } })
                   `cast`
                 (Trans
                      (<Servant.Common.Req.ClientEnv>_R
                       ->_R Trans
                                (Sym (GHC.Types.N:IO[0]
                                          <Data.Either.Either
                                             Servant.Common.Req.ServantError GHC.Types.Bool>_R))
                                (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                          <Servant.Common.Req.ServantError>_N
                                          <GHC.Types.IO>_R
                                          <GHC.Types.Bool>_N)))
                      (Trans
                           (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                     <*>_N
                                     <Servant.Common.Req.ClientEnv>_R
                                     <Control.Monad.Trans.Except.ExceptT
                                        Servant.Common.Req.ServantError GHC.Types.IO>_R
                                     <GHC.Types.Bool>_N))
                           (Sym (Servant.Common.Req.N:ClientM[0]) <GHC.Types.Bool>_N)))) -}
34d1ea552825d180e0e535fd6d0327fe
  isvalid ::
    CommonResources.User
    -> Servant.Common.Req.ClientM CommonResources.Response
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                ClientProxyApi.isvalid1
                  `cast`
                (<CommonResources.User>_R
                 ->_R Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                               <Network.HTTP.Types.Method.StdMethod>_N
                               <CommonResources.Response>_N
                               <'Network.HTTP.Types.Method.POST>_N
                               <'[Servant.API.ContentTypes.JSON]>_N
                               <200>_N)) -}
ce5a44b6981085a920dff2fec84b68bb
  isvalid1 ::
    CommonResources.User
    -> Servant.Client.Client
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.POST
            200
            '[Servant.API.ContentTypes.JSON]
            CommonResources.Response)
  {- Arity: 1,
     Unfolding: (\ (w :: CommonResources.User) ->
                 ClientProxyApi.$w$dHasClient2
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.ReqBody.ReqBody
                           '[Servant.API.ContentTypes.JSON] CommonResources.User
                         Servant.API.Sub.:> Servant.API.Verbs.Verb
                                              'Network.HTTP.Types.Method.POST
                                              200
                                              '[Servant.API.ContentTypes.JSON]
                                              CommonResources.Response))
                   ClientProxyApi.isvalid2
                   w) -}
f9f69ff19c8a9f5da270f3729bdcc1ab
  isvalid2 :: Servant.Common.Req.Req
  {- Strictness: m,
     Unfolding: (Servant.Common.Req.Req
                   ClientProxyApi.isvalid3
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text,
                         GHC.Base.Maybe Data.Text.Internal.Text))
                   (GHC.Base.Nothing
                      @ (Data.ByteString.Lazy.Internal.ByteString,
                         Network.HTTP.Media.MediaType.Internal.MediaType))
                   (GHC.Types.[] @ Network.HTTP.Media.MediaType.Internal.MediaType)
                   (GHC.Types.[] @ (GHC.Base.String, Data.Text.Internal.Text))) -}
58a4d42d8d7833356916a4142f542b68
  isvalid3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   (GHC.Types.[] @ GHC.Types.Char)
                   ClientProxyApi.$sclient14) -}
040c7a7edd0d1101a55a1abe83c9b6fa
  isvalidQuery ::
    CommonResources.User
    -> Servant.Common.Req.ClientM CommonResources.Response
  {- Arity: 1, Strictness: <L,1*U(U,U,U,U)>,
     Unfolding: (\ (isvaliddetails :: CommonResources.User) ->
                 let {
                   m1 :: Servant.Client.Client
                           (Servant.API.Verbs.Verb
                              'Network.HTTP.Types.Method.POST
                              200
                              '[Servant.API.ContentTypes.JSON]
                              CommonResources.Response)
                   = ClientProxyApi.$w$dHasClient2
                       (Data.Proxy.Proxy
                          @ *
                          @ (Servant.API.ReqBody.ReqBody
                               '[Servant.API.ContentTypes.JSON] CommonResources.User
                             Servant.API.Sub.:> Servant.API.Verbs.Verb
                                                  'Network.HTTP.Types.Method.POST
                                                  200
                                                  '[Servant.API.ContentTypes.JSON]
                                                  CommonResources.Response))
                       ClientProxyApi.isvalid2
                       isvaliddetails
                 } in
                 (\ (r1 :: Servant.Common.Req.ClientEnv)
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (m1
                          `cast`
                        (Trans
                             (Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                                       <Network.HTTP.Types.Method.StdMethod>_N
                                       <CommonResources.Response>_N
                                       <'Network.HTTP.Types.Method.POST>_N
                                       <'[Servant.API.ContentTypes.JSON]>_N
                                       <200>_N))
                             (Trans
                                  (Servant.Common.Req.N:ClientM[0] <CommonResources.Response>_N)
                                  (Control.Monad.Trans.Reader.N:ReaderT[0]
                                       <*>_N
                                       <Servant.Common.Req.ClientEnv>_R
                                       <Control.Monad.Trans.Except.ExceptT
                                          Servant.Common.Req.ServantError GHC.Types.IO>_R
                                       <CommonResources.Response>_N)))
                          r1)
                         `cast`
                       (Trans
                            (Control.Monad.Trans.Except.N:ExceptT[0]
                                 <Servant.Common.Req.ServantError>_N
                                 <GHC.Types.IO>_R
                                 <CommonResources.Response>_N)
                            (GHC.Types.N:IO[0]
                                 <Data.Either.Either
                                    Servant.Common.Req.ServantError CommonResources.Response>_R))
                         s of ds1 { (#,#) ipv ipv1 ->
                  case ipv1 of wild {
                    Data.Either.Left e1 -> ds1
                    Data.Either.Right x
                    -> Servant.Common.Req.$fApplicativeClientM5
                         @ CommonResources.Response
                         x
                         r1
                         ipv } })
                   `cast`
                 (Trans
                      (<Servant.Common.Req.ClientEnv>_R
                       ->_R Trans
                                (Sym (GHC.Types.N:IO[0]
                                          <Data.Either.Either
                                             Servant.Common.Req.ServantError
                                             CommonResources.Response>_R))
                                (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                          <Servant.Common.Req.ServantError>_N
                                          <GHC.Types.IO>_R
                                          <CommonResources.Response>_N)))
                      (Trans
                           (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                     <*>_N
                                     <Servant.Common.Req.ClientEnv>_R
                                     <Control.Monad.Trans.Except.ExceptT
                                        Servant.Common.Req.ServantError GHC.Types.IO>_R
                                     <CommonResources.Response>_N))
                           (Sym (Servant.Common.Req.N:ClientM[0]) <CommonResources.Response>_N)))) -}
6bbe685fbb998c60cb34fb230b1dea42
  join ::
    CommonResources.FileServer
    -> Servant.Common.Req.ClientM CommonResources.Response
  {- Arity: 1, Strictness: <L,1*U(U,U,U)>,
     Unfolding: InlineRule (0, True, True)
                ClientProxyApi.join1
                  `cast`
                (<CommonResources.FileServer>_R
                 ->_R Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                               <Network.HTTP.Types.Method.StdMethod>_N
                               <CommonResources.Response>_N
                               <'Network.HTTP.Types.Method.POST>_N
                               <'[Servant.API.ContentTypes.JSON]>_N
                               <200>_N)) -}
c80345236332cd47f29f0a9bfccbfa6a
  join1 ::
    CommonResources.FileServer
    -> Servant.Client.Client
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.POST
            200
            '[Servant.API.ContentTypes.JSON]
            CommonResources.Response)
  {- Arity: 1, Strictness: <L,1*U(U,U,U)>,
     Unfolding: (\ (body :: CommonResources.FileServer) ->
                 Servant.Client.$w$cclientWithRoute8
                   @ Network.HTTP.Types.Method.StdMethod
                   @ Servant.API.ContentTypes.JSON
                   @ CommonResources.Response
                   @ 'Network.HTTP.Types.Method.POST
                   @ '[Servant.API.ContentTypes.JSON]
                   @ '[]
                   @ 200
                   ClientProxyApi.$s$fMimeUnrenderTYPEJSONa8
                   Servant.API.Verbs.$fReflectMethodStdMethodPOST_$creflectMethod
                     `cast`
                   (Sym (Servant.API.Verbs.N:ReflectMethod[0]
                             <Network.HTTP.Types.Method.StdMethod>_N
                             <'Network.HTTP.Types.Method.POST>_N))
                   ClientProxyApi.$sclient7
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <[*]>_N) <'[Servant.API.ContentTypes.JSON]>_N <'[Servant.API.ContentTypes.JSON]>_N)
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.POST
                           200
                           '[Servant.API.ContentTypes.JSON]
                           CommonResources.Response))
                   (Servant.Common.Req.Req
                      ClientProxyApi.join2
                      (GHC.Types.[]
                         @ (Data.Text.Internal.Text,
                            GHC.Base.Maybe Data.Text.Internal.Text))
                      (GHC.Base.Just
                         @ (Data.ByteString.Lazy.Internal.ByteString,
                            Network.HTTP.Media.MediaType.Internal.MediaType)
                         (Data.ByteString.Builder.toLazyByteString
                            (Data.Aeson.Encode.Builder.encodeToBuilder
                               (CommonResources.$fToJSONFileServer1 body)
                                 `cast`
                               (Data.Aeson.Types.Generic.N:Tagged[0]
                                    <Data.Aeson.Types.Generic.True>_P
                                    <Data.Aeson.Types.Internal.Value>_R)),
                          Servant.API.ContentTypes.$fAcceptTYPEJSON1))
                      (GHC.Types.[] @ Network.HTTP.Media.MediaType.Internal.MediaType)
                      (GHC.Types.[] @ (GHC.Base.String, Data.Text.Internal.Text)))) -}
fcb4ebd7a56a9bade26040a637ae0ea3
  join2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   (GHC.Types.[] @ GHC.Types.Char)
                   ClientProxyApi.$sclient28) -}
dd46a7aead7efdb2659a6d8097054ccc
  lock ::
    GHC.Base.String -> Servant.Common.Req.ClientM GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                ClientProxyApi.lock1
                  `cast`
                (<[GHC.Types.Char]>_R
                 ->_R Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                               <Network.HTTP.Types.Method.StdMethod>_N
                               <GHC.Types.Bool>_N
                               <'Network.HTTP.Types.Method.GET>_N
                               <'[Servant.API.ContentTypes.JSON]>_N
                               <200>_N)) -}
dc7889f4e3247ff819ab8fcb5909866c
  lock1 ::
    [GHC.Types.Char]
    -> Servant.Client.Client
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.GET
            200
            '[Servant.API.ContentTypes.JSON]
            GHC.Types.Bool)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (w5 :: [GHC.Types.Char]) ->
                 Servant.Client.$w$cclientWithRoute1
                   @ *
                   @ "fileName"
                   @ [GHC.Types.Char]
                   @ (Servant.API.Verbs.Verb
                        'Network.HTTP.Types.Method.GET
                        200
                        '[Servant.API.ContentTypes.JSON]
                        GHC.Types.Bool)
                   Web.Internal.HttpApiData.$fToHttpApiData[]
                   ClientProxyApi.$sclient6
                     `cast`
                   (Sym (Servant.Client.N:HasClient[0]
                             <*>_N
                             <Servant.API.Verbs.Verb
                                'Network.HTTP.Types.Method.GET
                                200
                                '[Servant.API.ContentTypes.JSON]
                                GHC.Types.Bool>_N))
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Capture.Capture "fileName" [GHC.Types.Char]
                         Servant.API.Sub.:> Servant.API.Verbs.Verb
                                              'Network.HTTP.Types.Method.GET
                                              200
                                              '[Servant.API.ContentTypes.JSON]
                                              GHC.Types.Bool))
                   ClientProxyApi.lock2
                   w5) -}
863bab725b54f1039343daa82143ed56
  lock2 :: Servant.Common.Req.Req
  {- Strictness: m,
     Unfolding: (Servant.Common.Req.Req
                   ClientProxyApi.lock3
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text,
                         GHC.Base.Maybe Data.Text.Internal.Text))
                   (GHC.Base.Nothing
                      @ (Data.ByteString.Lazy.Internal.ByteString,
                         Network.HTTP.Media.MediaType.Internal.MediaType))
                   (GHC.Types.[] @ Network.HTTP.Media.MediaType.Internal.MediaType)
                   (GHC.Types.[] @ (GHC.Base.String, Data.Text.Internal.Text))) -}
e2efa85f667b65537b9f859cb31ae2cd
  lock3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   (GHC.Types.[] @ GHC.Types.Char)
                   ClientProxyApi.$sclient8) -}
4ba8ed34664d6818688ad15903935bbd
  lockFile :: GHC.Base.String -> GHC.Types.IO GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                ClientProxyApi.lockFile1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R)) -}
be4e597e3f00337be59b9f4c7a490643
  lockFile1 ::
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (fName :: GHC.Base.String)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Network.HTTP.Client.Manager.$wnewManager
                        Network.HTTP.Client.Manager.defaultManagerSettings18
                        Network.HTTP.Client.Manager.defaultManagerSettings15
                          `cast`
                        (Sym (GHC.Types.N:IO[0]
                                  <GHC.Base.Maybe Network.Socket.Types.HostAddress
                                   -> GHC.Base.String
                                   -> GHC.Types.Int
                                   -> GHC.Types.IO Network.HTTP.Client.Types.Connection>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings14
                          `cast`
                        (Sym (GHC.Types.N:IO[0]
                                  <GHC.Base.Maybe Network.Socket.Types.HostAddress
                                   -> GHC.Base.String
                                   -> GHC.Types.Int
                                   -> GHC.Types.IO Network.HTTP.Client.Types.Connection>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings11
                          `cast`
                        (Sym (GHC.Types.N:IO[0]
                                  <Data.ByteString.Internal.ByteString
                                   -> (Network.HTTP.Client.Types.Connection -> GHC.Types.IO ())
                                   -> GHC.Base.String
                                   -> GHC.Base.Maybe Network.Socket.Types.HostAddress
                                   -> GHC.Base.String
                                   -> GHC.Types.Int
                                   -> GHC.Types.IO Network.HTTP.Client.Types.Connection>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings9
                        Network.HTTP.Client.Manager.defaultManagerSettings8
                        Network.HTTP.Client.Manager.defaultManagerSettings6
                          `cast`
                        (forall (a :: <*>_N).
                         <GHC.Types.IO a>_R ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings5
                        (GHC.Base.returnIO1 @ Network.HTTP.Client.Types.Request)
                          `cast`
                        (<Network.HTTP.Client.Types.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Network.HTTP.Client.Types.Request>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings1
                          `cast`
                        (Trans
                             (<GHC.Types.Bool>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Network.HTTP.Client.Types.Request
                                             -> Network.HTTP.Client.Types.Request>_R))
                             (Sym (Network.HTTP.Client.Types.N:ProxyOverride[0])))
                        Network.HTTP.Client.Manager.defaultManagerSettings1
                          `cast`
                        (Trans
                             (<GHC.Types.Bool>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Network.HTTP.Client.Types.Request
                                             -> Network.HTTP.Client.Types.Request>_R))
                             (Sym (Network.HTTP.Client.Types.N:ProxyOverride[0])))
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ((Servant.Client.$w$cclientWithRoute1
                          @ *
                          @ "fileName"
                          @ [GHC.Types.Char]
                          @ (Servant.API.Verbs.Verb
                               'Network.HTTP.Types.Method.GET
                               200
                               '[Servant.API.ContentTypes.JSON]
                               GHC.Types.Bool)
                          Web.Internal.HttpApiData.$fToHttpApiData[]
                          ClientProxyApi.$sclient6
                            `cast`
                          (Sym (Servant.Client.N:HasClient[0]
                                    <*>_N
                                    <Servant.API.Verbs.Verb
                                       'Network.HTTP.Types.Method.GET
                                       200
                                       '[Servant.API.ContentTypes.JSON]
                                       GHC.Types.Bool>_N))
                          (Data.Proxy.Proxy
                             @ *
                             @ (Servant.API.Capture.Capture "fileName" [GHC.Types.Char]
                                Servant.API.Sub.:> Servant.API.Verbs.Verb
                                                     'Network.HTTP.Types.Method.GET
                                                     200
                                                     '[Servant.API.ContentTypes.JSON]
                                                     GHC.Types.Bool))
                          ClientProxyApi.islocked2
                          fName)
                         `cast`
                       (Trans
                            (Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                                      <Network.HTTP.Types.Method.StdMethod>_N
                                      <GHC.Types.Bool>_N
                                      <'Network.HTTP.Types.Method.GET>_N
                                      <'[Servant.API.ContentTypes.JSON]>_N
                                      <200>_N))
                            (Trans
                                 (Servant.Common.Req.N:ClientM[0] <GHC.Types.Bool>_N)
                                 (Control.Monad.Trans.Reader.N:ReaderT[0]
                                      <*>_N
                                      <Servant.Common.Req.ClientEnv>_R
                                      <Control.Monad.Trans.Except.ExceptT
                                         Servant.Common.Req.ServantError GHC.Types.IO>_R
                                      <GHC.Types.Bool>_N)))
                         (Servant.Common.Req.ClientEnv ipv1 ClientProxyApi.lockFile2))
                        `cast`
                      (Trans
                           (Control.Monad.Trans.Except.N:ExceptT[0]
                                <Servant.Common.Req.ServantError>_N
                                <GHC.Types.IO>_R
                                <GHC.Types.Bool>_N)
                           (GHC.Types.N:IO[0]
                                <Data.Either.Either
                                   Servant.Common.Req.ServantError GHC.Types.Bool>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   Data.Either.Left err
                   -> case GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             (GHC.CString.unpackAppendCString#
                                "Error: "#
                                (Servant.Common.Req.$w$cshowsPrec
                                   0#
                                   err
                                   (GHC.Types.[] @ GHC.Types.Char)))
                             GHC.Types.True
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      (# ipv4, GHC.Types.False #) }
                   Data.Either.Right responser
                   -> case responser of wild1 {
                        GHC.Types.False
                        -> case ((Servant.Client.$w$cclientWithRoute1
                                    @ *
                                    @ "fileName"
                                    @ [GHC.Types.Char]
                                    @ (Servant.API.Verbs.Verb
                                         'Network.HTTP.Types.Method.GET
                                         200
                                         '[Servant.API.ContentTypes.JSON]
                                         GHC.Types.Bool)
                                    Web.Internal.HttpApiData.$fToHttpApiData[]
                                    ClientProxyApi.$sclient6
                                      `cast`
                                    (Sym (Servant.Client.N:HasClient[0]
                                              <*>_N
                                              <Servant.API.Verbs.Verb
                                                 'Network.HTTP.Types.Method.GET
                                                 200
                                                 '[Servant.API.ContentTypes.JSON]
                                                 GHC.Types.Bool>_N))
                                    (Data.Proxy.Proxy
                                       @ *
                                       @ (Servant.API.Capture.Capture "fileName" [GHC.Types.Char]
                                          Servant.API.Sub.:> Servant.API.Verbs.Verb
                                                               'Network.HTTP.Types.Method.GET
                                                               200
                                                               '[Servant.API.ContentTypes.JSON]
                                                               GHC.Types.Bool))
                                    ClientProxyApi.lock2
                                    fName)
                                   `cast`
                                 (Trans
                                      (Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                                                <Network.HTTP.Types.Method.StdMethod>_N
                                                <GHC.Types.Bool>_N
                                                <'Network.HTTP.Types.Method.GET>_N
                                                <'[Servant.API.ContentTypes.JSON]>_N
                                                <200>_N))
                                      (Trans
                                           (Servant.Common.Req.N:ClientM[0] <GHC.Types.Bool>_N)
                                           (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                <*>_N
                                                <Servant.Common.Req.ClientEnv>_R
                                                <Control.Monad.Trans.Except.ExceptT
                                                   Servant.Common.Req.ServantError GHC.Types.IO>_R
                                                <GHC.Types.Bool>_N)))
                                   (Servant.Common.Req.ClientEnv ipv1 ClientProxyApi.lockFile2))
                                  `cast`
                                (Trans
                                     (Control.Monad.Trans.Except.N:ExceptT[0]
                                          <Servant.Common.Req.ServantError>_N
                                          <GHC.Types.IO>_R
                                          <GHC.Types.Bool>_N)
                                     (GHC.Types.N:IO[0]
                                          <Data.Either.Either
                                             Servant.Common.Req.ServantError GHC.Types.Bool>_R))
                                  ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                           case ipv5 of wild2 {
                             Data.Either.Left e1
                             -> case GHC.IO.Handle.Text.hPutStr2
                                       GHC.IO.Handle.FD.stdout
                                       (GHC.CString.unpackAppendCString#
                                          "Error: "#
                                          (Servant.Common.Req.$w$cshowsPrec
                                             0#
                                             e1
                                             (GHC.Types.[] @ GHC.Types.Char)))
                                       GHC.Types.True
                                       ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                                (# ipv6, GHC.Types.False #) }
                             Data.Either.Right x -> (# ipv4, GHC.Types.True #) } }
                        GHC.Types.True -> (# ipv2, GHC.Types.False #) } } } }) -}
3239bc5c0950c03a0da99d53403ec476
  lockFile2 :: Servant.Common.BaseUrl.BaseUrl
  {- Strictness: m,
     Unfolding: (Servant.Common.BaseUrl.BaseUrl
                   Servant.Common.BaseUrl.Http
                   CommonResources.lockserverhost
                   ClientProxyApi.lockFile3
                   (GHC.Types.[] @ GHC.Types.Char)) -}
9b27d1d9dac6965c99b7b31b9ad5c79f
  lockFile3 :: GHC.Types.Int
  {- Unfolding: (case Text.Read.readEither6
                        @ GHC.Types.Int
                        ClientProxyApi.lockFile4 of wild {
                   []
                   -> GHC.Err.error
                        @ 'GHC.Types.PtrRepLifted
                        @ GHC.Types.Int
                        GHC.Err.errorWithoutStackTrace_wild1
                          `cast`
                        (Sym (GHC.Classes.N:IP[0]
                                  <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                        Text.Read.readEither4
                   : x ds
                   -> case ds of wild1 {
                        [] -> x
                        : ipv ipv1
                        -> GHC.Err.error
                             @ 'GHC.Types.PtrRepLifted
                             @ GHC.Types.Int
                             GHC.Err.errorWithoutStackTrace_wild1
                               `cast`
                             (Sym (GHC.Classes.N:IP[0]
                                       <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                             Text.Read.readEither2 } }) -}
b8fffa9857b5d5ee45ee088ae0d43950
  lockFile4 :: [(GHC.Types.Int, GHC.Base.String)]
  {- Unfolding: (Text.ParserCombinators.ReadP.run
                   @ GHC.Types.Int
                   ClientProxyApi.extendToken5
                   CommonResources.lockserverport) -}
0f5e8bbccfb17dbf865e4c4ab76283fc
  lockQuery ::
    GHC.Base.String -> Servant.Common.Req.ClientM GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (fName :: GHC.Base.String) ->
                 let {
                   m1 :: Servant.Client.Client
                           (Servant.API.Verbs.Verb
                              'Network.HTTP.Types.Method.GET
                              200
                              '[Servant.API.ContentTypes.JSON]
                              GHC.Types.Bool)
                   = Servant.Client.$w$cclientWithRoute1
                       @ *
                       @ "fileName"
                       @ [GHC.Types.Char]
                       @ (Servant.API.Verbs.Verb
                            'Network.HTTP.Types.Method.GET
                            200
                            '[Servant.API.ContentTypes.JSON]
                            GHC.Types.Bool)
                       Web.Internal.HttpApiData.$fToHttpApiData[]
                       ClientProxyApi.$sclient6
                         `cast`
                       (Sym (Servant.Client.N:HasClient[0]
                                 <*>_N
                                 <Servant.API.Verbs.Verb
                                    'Network.HTTP.Types.Method.GET
                                    200
                                    '[Servant.API.ContentTypes.JSON]
                                    GHC.Types.Bool>_N))
                       (Data.Proxy.Proxy
                          @ *
                          @ (Servant.API.Capture.Capture "fileName" [GHC.Types.Char]
                             Servant.API.Sub.:> Servant.API.Verbs.Verb
                                                  'Network.HTTP.Types.Method.GET
                                                  200
                                                  '[Servant.API.ContentTypes.JSON]
                                                  GHC.Types.Bool))
                       ClientProxyApi.lock2
                       fName
                 } in
                 (\ (r1 :: Servant.Common.Req.ClientEnv)
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (m1
                          `cast`
                        (Trans
                             (Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                                       <Network.HTTP.Types.Method.StdMethod>_N
                                       <GHC.Types.Bool>_N
                                       <'Network.HTTP.Types.Method.GET>_N
                                       <'[Servant.API.ContentTypes.JSON]>_N
                                       <200>_N))
                             (Trans
                                  (Servant.Common.Req.N:ClientM[0] <GHC.Types.Bool>_N)
                                  (Control.Monad.Trans.Reader.N:ReaderT[0]
                                       <*>_N
                                       <Servant.Common.Req.ClientEnv>_R
                                       <Control.Monad.Trans.Except.ExceptT
                                          Servant.Common.Req.ServantError GHC.Types.IO>_R
                                       <GHC.Types.Bool>_N)))
                          r1)
                         `cast`
                       (Trans
                            (Control.Monad.Trans.Except.N:ExceptT[0]
                                 <Servant.Common.Req.ServantError>_N
                                 <GHC.Types.IO>_R
                                 <GHC.Types.Bool>_N)
                            (GHC.Types.N:IO[0]
                                 <Data.Either.Either
                                    Servant.Common.Req.ServantError GHC.Types.Bool>_R))
                         s of ds1 { (#,#) ipv ipv1 ->
                  case ipv1 of wild {
                    Data.Either.Left e1 -> ds1
                    Data.Either.Right x
                    -> Servant.Common.Req.$fApplicativeClientM5
                         @ GHC.Types.Bool
                         x
                         r1
                         ipv } })
                   `cast`
                 (Trans
                      (<Servant.Common.Req.ClientEnv>_R
                       ->_R Trans
                                (Sym (GHC.Types.N:IO[0]
                                          <Data.Either.Either
                                             Servant.Common.Req.ServantError GHC.Types.Bool>_R))
                                (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                          <Servant.Common.Req.ServantError>_N
                                          <GHC.Types.IO>_R
                                          <GHC.Types.Bool>_N)))
                      (Trans
                           (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                     <*>_N
                                     <Servant.Common.Req.ClientEnv>_R
                                     <Control.Monad.Trans.Except.ExceptT
                                        Servant.Common.Req.ServantError GHC.Types.IO>_R
                                     <GHC.Types.Bool>_N))
                           (Sym (Servant.Common.Req.N:ClientM[0]) <GHC.Types.Bool>_N)))) -}
ef97cbe31a795a8f13bec6d85d32b482
  lockingApi :: Data.Proxy.Proxy CommonResources.LockingApi
  {- HasNoCafRefs,
     Unfolding: InlineRule (0, True, True)
                (Data.Proxy.Proxy @ * @ CommonResources.LockingApi) -}
547959553d3aa460e4ef93cf2771c35a
  mainClient :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                ClientProxyApi.mainClient1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <()>_R)) -}
43c028b22a9c8ff942bf5667dff01be1
  mainClient1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Directory.createDirectoryIfMissing1
                        GHC.Types.True
                        ClientProxyApi.mainClient2
                        s of ds1 { (#,#) ipv ipv1 ->
                 case System.Posix.Directory.changeWorkingDirectory1
                        ClientProxyApi.mainClient2
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 ClientProxyApi.authpart1 ipv2 } }) -}
e3f628fce1b6839491b4355330a65b34
  mainClient2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "localstorage/"#) -}
3045f5f87fbceb02ed78b87510188793
  mainloop ::
    CommonResources.User
    -> LRUCache.Handle GHC.Base.String GHC.Base.String
    -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U(U,U,U,U)><L,U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                ClientProxyApi.mainloop1
                  `cast`
                (<CommonResources.User>_R
                 ->_R <LRUCache.Handle GHC.Base.String GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
b25013589c9a79bbf326f4daf9832c99
  mainloop1 ::
    CommonResources.User
    -> LRUCache.Handle GHC.Base.String GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U(U,U,U,U)><L,U(U)><S,U> -}
fb948b9ce2f77f010fd8da126bfb5b29
  open ::
    GHC.Base.String -> Servant.Common.Req.ClientM CommonResources.File
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                ClientProxyApi.open1
                  `cast`
                (<[GHC.Types.Char]>_R
                 ->_R Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                               <Network.HTTP.Types.Method.StdMethod>_N
                               <CommonResources.File>_N
                               <'Network.HTTP.Types.Method.GET>_N
                               <'[Servant.API.ContentTypes.JSON]>_N
                               <200>_N)) -}
887bb4e25fa79b7b2a4a8ed0f0493bb0
  open1 ::
    [GHC.Types.Char]
    -> Servant.Client.Client
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.GET
            200
            '[Servant.API.ContentTypes.JSON]
            CommonResources.File)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (w5 :: [GHC.Types.Char]) ->
                 Servant.Client.$w$cclientWithRoute1
                   @ *
                   @ "fileName"
                   @ [GHC.Types.Char]
                   @ (Servant.API.Verbs.Verb
                        'Network.HTTP.Types.Method.GET
                        200
                        '[Servant.API.ContentTypes.JSON]
                        CommonResources.File)
                   Web.Internal.HttpApiData.$fToHttpApiData[]
                   ClientProxyApi.$sclient25
                     `cast`
                   (Sym (Servant.Client.N:HasClient[0]
                             <*>_N
                             <Servant.API.Verbs.Verb
                                'Network.HTTP.Types.Method.GET
                                200
                                '[Servant.API.ContentTypes.JSON]
                                CommonResources.File>_N))
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Capture.Capture "fileName" [GHC.Types.Char]
                         Servant.API.Sub.:> Servant.API.Verbs.Verb
                                              'Network.HTTP.Types.Method.GET
                                              200
                                              '[Servant.API.ContentTypes.JSON]
                                              CommonResources.File))
                   ClientProxyApi.open2
                   w5) -}
41665c9a4132ab88d82f3812f52f476f
  open2 :: Servant.Common.Req.Req
  {- Strictness: m,
     Unfolding: (Servant.Common.Req.Req
                   ClientProxyApi.open3
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text,
                         GHC.Base.Maybe Data.Text.Internal.Text))
                   (GHC.Base.Nothing
                      @ (Data.ByteString.Lazy.Internal.ByteString,
                         Network.HTTP.Media.MediaType.Internal.MediaType))
                   (GHC.Types.[] @ Network.HTTP.Media.MediaType.Internal.MediaType)
                   (GHC.Types.[] @ (GHC.Base.String, Data.Text.Internal.Text))) -}
38356507d515503ea430d166a4ce5118
  open3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   (GHC.Types.[] @ GHC.Types.Char)
                   ClientProxyApi.$sclient26) -}
c1fc6d2ff99b9d001f9141de91da51c6
  openQuery ::
    GHC.Base.String -> Servant.Common.Req.ClientM CommonResources.File
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (filename :: GHC.Base.String) ->
                 let {
                   m1 :: Servant.Client.Client
                           (Servant.API.Verbs.Verb
                              'Network.HTTP.Types.Method.GET
                              200
                              '[Servant.API.ContentTypes.JSON]
                              CommonResources.File)
                   = Servant.Client.$w$cclientWithRoute1
                       @ *
                       @ "fileName"
                       @ [GHC.Types.Char]
                       @ (Servant.API.Verbs.Verb
                            'Network.HTTP.Types.Method.GET
                            200
                            '[Servant.API.ContentTypes.JSON]
                            CommonResources.File)
                       Web.Internal.HttpApiData.$fToHttpApiData[]
                       ClientProxyApi.$sclient25
                         `cast`
                       (Sym (Servant.Client.N:HasClient[0]
                                 <*>_N
                                 <Servant.API.Verbs.Verb
                                    'Network.HTTP.Types.Method.GET
                                    200
                                    '[Servant.API.ContentTypes.JSON]
                                    CommonResources.File>_N))
                       (Data.Proxy.Proxy
                          @ *
                          @ (Servant.API.Capture.Capture "fileName" [GHC.Types.Char]
                             Servant.API.Sub.:> Servant.API.Verbs.Verb
                                                  'Network.HTTP.Types.Method.GET
                                                  200
                                                  '[Servant.API.ContentTypes.JSON]
                                                  CommonResources.File))
                       ClientProxyApi.open2
                       filename
                 } in
                 (\ (r1 :: Servant.Common.Req.ClientEnv)
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (m1
                          `cast`
                        (Trans
                             (Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                                       <Network.HTTP.Types.Method.StdMethod>_N
                                       <CommonResources.File>_N
                                       <'Network.HTTP.Types.Method.GET>_N
                                       <'[Servant.API.ContentTypes.JSON]>_N
                                       <200>_N))
                             (Trans
                                  (Servant.Common.Req.N:ClientM[0] <CommonResources.File>_N)
                                  (Control.Monad.Trans.Reader.N:ReaderT[0]
                                       <*>_N
                                       <Servant.Common.Req.ClientEnv>_R
                                       <Control.Monad.Trans.Except.ExceptT
                                          Servant.Common.Req.ServantError GHC.Types.IO>_R
                                       <CommonResources.File>_N)))
                          r1)
                         `cast`
                       (Trans
                            (Control.Monad.Trans.Except.N:ExceptT[0]
                                 <Servant.Common.Req.ServantError>_N
                                 <GHC.Types.IO>_R
                                 <CommonResources.File>_N)
                            (GHC.Types.N:IO[0]
                                 <Data.Either.Either
                                    Servant.Common.Req.ServantError CommonResources.File>_R))
                         s of ds1 { (#,#) ipv ipv1 ->
                  case ipv1 of wild {
                    Data.Either.Left e1 -> ds1
                    Data.Either.Right x
                    -> Servant.Common.Req.$fApplicativeClientM5
                         @ CommonResources.File
                         x
                         r1
                         ipv } })
                   `cast`
                 (Trans
                      (<Servant.Common.Req.ClientEnv>_R
                       ->_R Trans
                                (Sym (GHC.Types.N:IO[0]
                                          <Data.Either.Either
                                             Servant.Common.Req.ServantError
                                             CommonResources.File>_R))
                                (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                          <Servant.Common.Req.ServantError>_N
                                          <GHC.Types.IO>_R
                                          <CommonResources.File>_N)))
                      (Trans
                           (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                     <*>_N
                                     <Servant.Common.Req.ClientEnv>_R
                                     <Control.Monad.Trans.Except.ExceptT
                                        Servant.Common.Req.ServantError GHC.Types.IO>_R
                                     <CommonResources.File>_N))
                           (Sym (Servant.Common.Req.N:ClientM[0]) <CommonResources.File>_N)))) -}
e09a20d2703bb4c9deb0392c39b8642d
  putFile ::
    CommonResources.File
    -> CommonResources.User
    -> LRUCache.Handle GHC.Base.String GHC.Base.String
    -> GHC.Types.IO ()
  {- Arity: 4, Strictness: <L,U(U,U)><L,U(U,U,U,U)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                ClientProxyApi.putFile1
                  `cast`
                (<CommonResources.File>_R
                 ->_R <CommonResources.User>_R
                 ->_R <LRUCache.Handle GHC.Base.String GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
3eb204660d36c65adf302438cdd27319
  putFile1 ::
    CommonResources.File
    -> CommonResources.User
    -> LRUCache.Handle GHC.Base.String GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,U(U,U)><L,U(U,U,U,U)><L,1*U(U)><S,U> -}
ab812de2729e42aab1832c74bd3147ed
  register ::
    CommonResources.Signin
    -> Servant.Common.Req.ClientM CommonResources.Response
  {- Arity: 1, Strictness: <L,1*U(1*U,1*U)>,
     Unfolding: InlineRule (0, True, True)
                ClientProxyApi.register1
                  `cast`
                (<CommonResources.Signin>_R
                 ->_R Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                               <Network.HTTP.Types.Method.StdMethod>_N
                               <CommonResources.Response>_N
                               <'Network.HTTP.Types.Method.POST>_N
                               <'[Servant.API.ContentTypes.JSON]>_N
                               <200>_N)) -}
05119f8cd64c6045eba072b3ea018896
  register1 ::
    CommonResources.Signin
    -> Servant.Client.Client
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.POST
            200
            '[Servant.API.ContentTypes.JSON]
            CommonResources.Response)
  {- Arity: 1, Strictness: <L,1*U(1*U,1*U)>,
     Unfolding: (\ (body :: CommonResources.Signin) ->
                 Servant.Client.$w$cclientWithRoute8
                   @ Network.HTTP.Types.Method.StdMethod
                   @ Servant.API.ContentTypes.JSON
                   @ CommonResources.Response
                   @ 'Network.HTTP.Types.Method.POST
                   @ '[Servant.API.ContentTypes.JSON]
                   @ '[]
                   @ 200
                   ClientProxyApi.$s$fMimeUnrenderTYPEJSONa8
                   Servant.API.Verbs.$fReflectMethodStdMethodPOST_$creflectMethod
                     `cast`
                   (Sym (Servant.API.Verbs.N:ReflectMethod[0]
                             <Network.HTTP.Types.Method.StdMethod>_N
                             <'Network.HTTP.Types.Method.POST>_N))
                   ClientProxyApi.$sclient7
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <[*]>_N) <'[Servant.API.ContentTypes.JSON]>_N <'[Servant.API.ContentTypes.JSON]>_N)
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.POST
                           200
                           '[Servant.API.ContentTypes.JSON]
                           CommonResources.Response))
                   (Servant.Common.Req.Req
                      ClientProxyApi.register2
                      (GHC.Types.[]
                         @ (Data.Text.Internal.Text,
                            GHC.Base.Maybe Data.Text.Internal.Text))
                      (GHC.Base.Just
                         @ (Data.ByteString.Lazy.Internal.ByteString,
                            Network.HTTP.Media.MediaType.Internal.MediaType)
                         (Data.ByteString.Builder.toLazyByteString
                            (Data.Aeson.Encode.Builder.encodeToBuilder
                               (CommonResources.$fToJSONSignin1 body)
                                 `cast`
                               (Data.Aeson.Types.Generic.N:Tagged[0]
                                    <Data.Aeson.Types.Generic.True>_P
                                    <Data.Aeson.Types.Internal.Value>_R)),
                          Servant.API.ContentTypes.$fAcceptTYPEJSON1))
                      (GHC.Types.[] @ Network.HTTP.Media.MediaType.Internal.MediaType)
                      (GHC.Types.[] @ (GHC.Base.String, Data.Text.Internal.Text)))) -}
421ea1071109f9ff7b00aa85b03d4786
  register2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   (GHC.Types.[] @ GHC.Types.Char)
                   ClientProxyApi.$sclient16) -}
597c0d7d73c086fcfbdb7a2407625465
  registerQuery ::
    CommonResources.Signin
    -> Servant.Common.Req.ClientM CommonResources.Response
  {- Arity: 1, Strictness: <L,1*U(1*U,1*U)>,
     Unfolding: (\ (registerdetails :: CommonResources.Signin) ->
                 let {
                   m1 :: Servant.Client.Client
                           (Servant.API.Verbs.Verb
                              'Network.HTTP.Types.Method.POST
                              200
                              '[Servant.API.ContentTypes.JSON]
                              CommonResources.Response)
                   = ClientProxyApi.register1 registerdetails
                 } in
                 (\ (r1 :: Servant.Common.Req.ClientEnv)
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (m1
                          `cast`
                        (Trans
                             (Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                                       <Network.HTTP.Types.Method.StdMethod>_N
                                       <CommonResources.Response>_N
                                       <'Network.HTTP.Types.Method.POST>_N
                                       <'[Servant.API.ContentTypes.JSON]>_N
                                       <200>_N))
                             (Trans
                                  (Servant.Common.Req.N:ClientM[0] <CommonResources.Response>_N)
                                  (Control.Monad.Trans.Reader.N:ReaderT[0]
                                       <*>_N
                                       <Servant.Common.Req.ClientEnv>_R
                                       <Control.Monad.Trans.Except.ExceptT
                                          Servant.Common.Req.ServantError GHC.Types.IO>_R
                                       <CommonResources.Response>_N)))
                          r1)
                         `cast`
                       (Trans
                            (Control.Monad.Trans.Except.N:ExceptT[0]
                                 <Servant.Common.Req.ServantError>_N
                                 <GHC.Types.IO>_R
                                 <CommonResources.Response>_N)
                            (GHC.Types.N:IO[0]
                                 <Data.Either.Either
                                    Servant.Common.Req.ServantError CommonResources.Response>_R))
                         s of ds1 { (#,#) ipv ipv1 ->
                  case ipv1 of wild {
                    Data.Either.Left e1 -> ds1
                    Data.Either.Right x
                    -> Servant.Common.Req.$fApplicativeClientM5
                         @ CommonResources.Response
                         x
                         r1
                         ipv } })
                   `cast`
                 (Trans
                      (<Servant.Common.Req.ClientEnv>_R
                       ->_R Trans
                                (Sym (GHC.Types.N:IO[0]
                                          <Data.Either.Either
                                             Servant.Common.Req.ServantError
                                             CommonResources.Response>_R))
                                (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                          <Servant.Common.Req.ServantError>_N
                                          <GHC.Types.IO>_R
                                          <CommonResources.Response>_N)))
                      (Trans
                           (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                     <*>_N
                                     <Servant.Common.Req.ClientEnv>_R
                                     <Control.Monad.Trans.Except.ExceptT
                                        Servant.Common.Req.ServantError GHC.Types.IO>_R
                                     <CommonResources.Response>_N))
                           (Sym (Servant.Common.Req.N:ClientM[0]) <CommonResources.Response>_N)))) -}
1b01f8c860ad67c94a0669ad34a5c0c8
  serverhost :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "localhost"#) -}
4b5fb4a022416ee4904c7401c336e5b4
  serverport :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "8080"#) -}
89c3762681800211e136c8954d9d2adc
  signin ::
    CommonResources.Signin
    -> Servant.Common.Req.ClientM CommonResources.User
  {- Arity: 1, Strictness: <L,1*U(1*U,1*U)>,
     Unfolding: InlineRule (0, True, True)
                ClientProxyApi.signin1
                  `cast`
                (<CommonResources.Signin>_R
                 ->_R Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                               <Network.HTTP.Types.Method.StdMethod>_N
                               <CommonResources.User>_N
                               <'Network.HTTP.Types.Method.POST>_N
                               <'[Servant.API.ContentTypes.JSON]>_N
                               <200>_N)) -}
d4d19698c0800611c9c7fbbd3ec0634e
  signin1 ::
    CommonResources.Signin
    -> Servant.Client.Client
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.POST
            200
            '[Servant.API.ContentTypes.JSON]
            CommonResources.User)
  {- Arity: 1, Strictness: <L,1*U(1*U,1*U)>,
     Unfolding: (\ (body :: CommonResources.Signin) ->
                 Servant.Client.$w$cclientWithRoute8
                   @ Network.HTTP.Types.Method.StdMethod
                   @ Servant.API.ContentTypes.JSON
                   @ CommonResources.User
                   @ 'Network.HTTP.Types.Method.POST
                   @ '[Servant.API.ContentTypes.JSON]
                   @ '[]
                   @ 200
                   ClientProxyApi.$s$fMimeUnrenderTYPEJSONa7
                   Servant.API.Verbs.$fReflectMethodStdMethodPOST_$creflectMethod
                     `cast`
                   (Sym (Servant.API.Verbs.N:ReflectMethod[0]
                             <Network.HTTP.Types.Method.StdMethod>_N
                             <'Network.HTTP.Types.Method.POST>_N))
                   ClientProxyApi.$sclient7
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <[*]>_N) <'[Servant.API.ContentTypes.JSON]>_N <'[Servant.API.ContentTypes.JSON]>_N)
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.POST
                           200
                           '[Servant.API.ContentTypes.JSON]
                           CommonResources.User))
                   (Servant.Common.Req.Req
                      ClientProxyApi.signin2
                      (GHC.Types.[]
                         @ (Data.Text.Internal.Text,
                            GHC.Base.Maybe Data.Text.Internal.Text))
                      (GHC.Base.Just
                         @ (Data.ByteString.Lazy.Internal.ByteString,
                            Network.HTTP.Media.MediaType.Internal.MediaType)
                         (Data.ByteString.Builder.toLazyByteString
                            (Data.Aeson.Encode.Builder.encodeToBuilder
                               (CommonResources.$fToJSONSignin1 body)
                                 `cast`
                               (Data.Aeson.Types.Generic.N:Tagged[0]
                                    <Data.Aeson.Types.Generic.True>_P
                                    <Data.Aeson.Types.Internal.Value>_R)),
                          Servant.API.ContentTypes.$fAcceptTYPEJSON1))
                      (GHC.Types.[] @ Network.HTTP.Media.MediaType.Internal.MediaType)
                      (GHC.Types.[] @ (GHC.Base.String, Data.Text.Internal.Text)))) -}
eff8e75f5a2ef4ace2daddea38d9db27
  signin2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   (GHC.Types.[] @ GHC.Types.Char)
                   ClientProxyApi.$sclient18) -}
da9715ae05eac00fa0563d2399ea44a0
  signinQuery ::
    CommonResources.Signin
    -> Servant.Common.Req.ClientM CommonResources.User
  {- Arity: 1, Strictness: <L,1*U(1*U,1*U)>,
     Unfolding: (\ (signindetails :: CommonResources.Signin) ->
                 let {
                   m1 :: Servant.Client.Client
                           (Servant.API.Verbs.Verb
                              'Network.HTTP.Types.Method.POST
                              200
                              '[Servant.API.ContentTypes.JSON]
                              CommonResources.User)
                   = ClientProxyApi.signin1 signindetails
                 } in
                 (\ (r1 :: Servant.Common.Req.ClientEnv)
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (m1
                          `cast`
                        (Trans
                             (Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                                       <Network.HTTP.Types.Method.StdMethod>_N
                                       <CommonResources.User>_N
                                       <'Network.HTTP.Types.Method.POST>_N
                                       <'[Servant.API.ContentTypes.JSON]>_N
                                       <200>_N))
                             (Trans
                                  (Servant.Common.Req.N:ClientM[0] <CommonResources.User>_N)
                                  (Control.Monad.Trans.Reader.N:ReaderT[0]
                                       <*>_N
                                       <Servant.Common.Req.ClientEnv>_R
                                       <Control.Monad.Trans.Except.ExceptT
                                          Servant.Common.Req.ServantError GHC.Types.IO>_R
                                       <CommonResources.User>_N)))
                          r1)
                         `cast`
                       (Trans
                            (Control.Monad.Trans.Except.N:ExceptT[0]
                                 <Servant.Common.Req.ServantError>_N
                                 <GHC.Types.IO>_R
                                 <CommonResources.User>_N)
                            (GHC.Types.N:IO[0]
                                 <Data.Either.Either
                                    Servant.Common.Req.ServantError CommonResources.User>_R))
                         s of ds1 { (#,#) ipv ipv1 ->
                  case ipv1 of wild {
                    Data.Either.Left e1 -> ds1
                    Data.Either.Right x
                    -> Servant.Common.Req.$fApplicativeClientM5
                         @ CommonResources.User
                         x
                         r1
                         ipv } })
                   `cast`
                 (Trans
                      (<Servant.Common.Req.ClientEnv>_R
                       ->_R Trans
                                (Sym (GHC.Types.N:IO[0]
                                          <Data.Either.Either
                                             Servant.Common.Req.ServantError
                                             CommonResources.User>_R))
                                (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                          <Servant.Common.Req.ServantError>_N
                                          <GHC.Types.IO>_R
                                          <CommonResources.User>_N)))
                      (Trans
                           (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                     <*>_N
                                     <Servant.Common.Req.ClientEnv>_R
                                     <Control.Monad.Trans.Except.ExceptT
                                        Servant.Common.Req.ServantError GHC.Types.IO>_R
                                     <CommonResources.User>_N))
                           (Sym (Servant.Common.Req.N:ClientM[0]) <CommonResources.User>_N)))) -}
5b53bbb1395fb0a7d5fa133ddc73d411
  unlock ::
    GHC.Base.String -> Servant.Common.Req.ClientM GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                ClientProxyApi.unlock1
                  `cast`
                (<[GHC.Types.Char]>_R
                 ->_R Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                               <Network.HTTP.Types.Method.StdMethod>_N
                               <GHC.Types.Bool>_N
                               <'Network.HTTP.Types.Method.GET>_N
                               <'[Servant.API.ContentTypes.JSON]>_N
                               <200>_N)) -}
19372cf9cfe01f34c709ea0adac13382
  unlock1 ::
    [GHC.Types.Char]
    -> Servant.Client.Client
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.GET
            200
            '[Servant.API.ContentTypes.JSON]
            GHC.Types.Bool)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (w5 :: [GHC.Types.Char]) ->
                 Servant.Client.$w$cclientWithRoute1
                   @ *
                   @ "fileName"
                   @ [GHC.Types.Char]
                   @ (Servant.API.Verbs.Verb
                        'Network.HTTP.Types.Method.GET
                        200
                        '[Servant.API.ContentTypes.JSON]
                        GHC.Types.Bool)
                   Web.Internal.HttpApiData.$fToHttpApiData[]
                   ClientProxyApi.$sclient6
                     `cast`
                   (Sym (Servant.Client.N:HasClient[0]
                             <*>_N
                             <Servant.API.Verbs.Verb
                                'Network.HTTP.Types.Method.GET
                                200
                                '[Servant.API.ContentTypes.JSON]
                                GHC.Types.Bool>_N))
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Capture.Capture "fileName" [GHC.Types.Char]
                         Servant.API.Sub.:> Servant.API.Verbs.Verb
                                              'Network.HTTP.Types.Method.GET
                                              200
                                              '[Servant.API.ContentTypes.JSON]
                                              GHC.Types.Bool))
                   ClientProxyApi.unlock2
                   w5) -}
80845c592c82465f82664dca528ea594
  unlock2 :: Servant.Common.Req.Req
  {- Strictness: m,
     Unfolding: (Servant.Common.Req.Req
                   ClientProxyApi.unlock3
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text,
                         GHC.Base.Maybe Data.Text.Internal.Text))
                   (GHC.Base.Nothing
                      @ (Data.ByteString.Lazy.Internal.ByteString,
                         Network.HTTP.Media.MediaType.Internal.MediaType))
                   (GHC.Types.[] @ Network.HTTP.Media.MediaType.Internal.MediaType)
                   (GHC.Types.[] @ (GHC.Base.String, Data.Text.Internal.Text))) -}
a95eaf7ffe06a1c06d2c9684c510098e
  unlock3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   (GHC.Types.[] @ GHC.Types.Char)
                   ClientProxyApi.$sclient4) -}
e7a9bc5119a6bd187d8617f16ebe9065
  unlockFile :: GHC.Base.String -> GHC.Types.IO GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                ClientProxyApi.unlockFile1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R)) -}
c564ddfa2579a73929a782572cdef3f6
  unlockFile1 ::
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (fName :: GHC.Base.String)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Network.HTTP.Client.Manager.$wnewManager
                        Network.HTTP.Client.Manager.defaultManagerSettings18
                        Network.HTTP.Client.Manager.defaultManagerSettings15
                          `cast`
                        (Sym (GHC.Types.N:IO[0]
                                  <GHC.Base.Maybe Network.Socket.Types.HostAddress
                                   -> GHC.Base.String
                                   -> GHC.Types.Int
                                   -> GHC.Types.IO Network.HTTP.Client.Types.Connection>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings14
                          `cast`
                        (Sym (GHC.Types.N:IO[0]
                                  <GHC.Base.Maybe Network.Socket.Types.HostAddress
                                   -> GHC.Base.String
                                   -> GHC.Types.Int
                                   -> GHC.Types.IO Network.HTTP.Client.Types.Connection>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings11
                          `cast`
                        (Sym (GHC.Types.N:IO[0]
                                  <Data.ByteString.Internal.ByteString
                                   -> (Network.HTTP.Client.Types.Connection -> GHC.Types.IO ())
                                   -> GHC.Base.String
                                   -> GHC.Base.Maybe Network.Socket.Types.HostAddress
                                   -> GHC.Base.String
                                   -> GHC.Types.Int
                                   -> GHC.Types.IO Network.HTTP.Client.Types.Connection>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings9
                        Network.HTTP.Client.Manager.defaultManagerSettings8
                        Network.HTTP.Client.Manager.defaultManagerSettings6
                          `cast`
                        (forall (a :: <*>_N).
                         <GHC.Types.IO a>_R ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings5
                        (GHC.Base.returnIO1 @ Network.HTTP.Client.Types.Request)
                          `cast`
                        (<Network.HTTP.Client.Types.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Network.HTTP.Client.Types.Request>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings1
                          `cast`
                        (Trans
                             (<GHC.Types.Bool>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Network.HTTP.Client.Types.Request
                                             -> Network.HTTP.Client.Types.Request>_R))
                             (Sym (Network.HTTP.Client.Types.N:ProxyOverride[0])))
                        Network.HTTP.Client.Manager.defaultManagerSettings1
                          `cast`
                        (Trans
                             (<GHC.Types.Bool>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Network.HTTP.Client.Types.Request
                                             -> Network.HTTP.Client.Types.Request>_R))
                             (Sym (Network.HTTP.Client.Types.N:ProxyOverride[0])))
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ((Servant.Client.$w$cclientWithRoute1
                          @ *
                          @ "fileName"
                          @ [GHC.Types.Char]
                          @ (Servant.API.Verbs.Verb
                               'Network.HTTP.Types.Method.GET
                               200
                               '[Servant.API.ContentTypes.JSON]
                               GHC.Types.Bool)
                          Web.Internal.HttpApiData.$fToHttpApiData[]
                          ClientProxyApi.$sclient6
                            `cast`
                          (Sym (Servant.Client.N:HasClient[0]
                                    <*>_N
                                    <Servant.API.Verbs.Verb
                                       'Network.HTTP.Types.Method.GET
                                       200
                                       '[Servant.API.ContentTypes.JSON]
                                       GHC.Types.Bool>_N))
                          (Data.Proxy.Proxy
                             @ *
                             @ (Servant.API.Capture.Capture "fileName" [GHC.Types.Char]
                                Servant.API.Sub.:> Servant.API.Verbs.Verb
                                                     'Network.HTTP.Types.Method.GET
                                                     200
                                                     '[Servant.API.ContentTypes.JSON]
                                                     GHC.Types.Bool))
                          ClientProxyApi.islocked2
                          fName)
                         `cast`
                       (Trans
                            (Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                                      <Network.HTTP.Types.Method.StdMethod>_N
                                      <GHC.Types.Bool>_N
                                      <'Network.HTTP.Types.Method.GET>_N
                                      <'[Servant.API.ContentTypes.JSON]>_N
                                      <200>_N))
                            (Trans
                                 (Servant.Common.Req.N:ClientM[0] <GHC.Types.Bool>_N)
                                 (Control.Monad.Trans.Reader.N:ReaderT[0]
                                      <*>_N
                                      <Servant.Common.Req.ClientEnv>_R
                                      <Control.Monad.Trans.Except.ExceptT
                                         Servant.Common.Req.ServantError GHC.Types.IO>_R
                                      <GHC.Types.Bool>_N)))
                         (Servant.Common.Req.ClientEnv ipv1 ClientProxyApi.unlockFile2))
                        `cast`
                      (Trans
                           (Control.Monad.Trans.Except.N:ExceptT[0]
                                <Servant.Common.Req.ServantError>_N
                                <GHC.Types.IO>_R
                                <GHC.Types.Bool>_N)
                           (GHC.Types.N:IO[0]
                                <Data.Either.Either
                                   Servant.Common.Req.ServantError GHC.Types.Bool>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   Data.Either.Left err
                   -> case GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             (GHC.CString.unpackAppendCString#
                                "Error: "#
                                (Servant.Common.Req.$w$cshowsPrec
                                   0#
                                   err
                                   (GHC.Types.[] @ GHC.Types.Char)))
                             GHC.Types.True
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      (# ipv4, GHC.Types.False #) }
                   Data.Either.Right responser
                   -> case responser of wild1 {
                        GHC.Types.False -> (# ipv2, GHC.Types.False #)
                        GHC.Types.True
                        -> case ((Servant.Client.$w$cclientWithRoute1
                                    @ *
                                    @ "fileName"
                                    @ [GHC.Types.Char]
                                    @ (Servant.API.Verbs.Verb
                                         'Network.HTTP.Types.Method.GET
                                         200
                                         '[Servant.API.ContentTypes.JSON]
                                         GHC.Types.Bool)
                                    Web.Internal.HttpApiData.$fToHttpApiData[]
                                    ClientProxyApi.$sclient6
                                      `cast`
                                    (Sym (Servant.Client.N:HasClient[0]
                                              <*>_N
                                              <Servant.API.Verbs.Verb
                                                 'Network.HTTP.Types.Method.GET
                                                 200
                                                 '[Servant.API.ContentTypes.JSON]
                                                 GHC.Types.Bool>_N))
                                    (Data.Proxy.Proxy
                                       @ *
                                       @ (Servant.API.Capture.Capture "fileName" [GHC.Types.Char]
                                          Servant.API.Sub.:> Servant.API.Verbs.Verb
                                                               'Network.HTTP.Types.Method.GET
                                                               200
                                                               '[Servant.API.ContentTypes.JSON]
                                                               GHC.Types.Bool))
                                    ClientProxyApi.unlock2
                                    fName)
                                   `cast`
                                 (Trans
                                      (Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                                                <Network.HTTP.Types.Method.StdMethod>_N
                                                <GHC.Types.Bool>_N
                                                <'Network.HTTP.Types.Method.GET>_N
                                                <'[Servant.API.ContentTypes.JSON]>_N
                                                <200>_N))
                                      (Trans
                                           (Servant.Common.Req.N:ClientM[0] <GHC.Types.Bool>_N)
                                           (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                <*>_N
                                                <Servant.Common.Req.ClientEnv>_R
                                                <Control.Monad.Trans.Except.ExceptT
                                                   Servant.Common.Req.ServantError GHC.Types.IO>_R
                                                <GHC.Types.Bool>_N)))
                                   (Servant.Common.Req.ClientEnv ipv1 ClientProxyApi.unlockFile2))
                                  `cast`
                                (Trans
                                     (Control.Monad.Trans.Except.N:ExceptT[0]
                                          <Servant.Common.Req.ServantError>_N
                                          <GHC.Types.IO>_R
                                          <GHC.Types.Bool>_N)
                                     (GHC.Types.N:IO[0]
                                          <Data.Either.Either
                                             Servant.Common.Req.ServantError GHC.Types.Bool>_R))
                                  ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                           case ipv5 of wild2 {
                             Data.Either.Left e1
                             -> case GHC.IO.Handle.Text.hPutStr2
                                       GHC.IO.Handle.FD.stdout
                                       (GHC.CString.unpackAppendCString#
                                          "Error: "#
                                          (Servant.Common.Req.$w$cshowsPrec
                                             0#
                                             e1
                                             (GHC.Types.[] @ GHC.Types.Char)))
                                       GHC.Types.True
                                       ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                                (# ipv6, GHC.Types.False #) }
                             Data.Either.Right x -> (# ipv4, GHC.Types.True #) } } } } } }) -}
6d07994400f5ab2acb83eae0c3605154
  unlockFile2 :: Servant.Common.BaseUrl.BaseUrl
  {- Strictness: m,
     Unfolding: (Servant.Common.BaseUrl.BaseUrl
                   Servant.Common.BaseUrl.Http
                   ClientProxyApi.serverhost
                   ClientProxyApi.unlockFile3
                   (GHC.Types.[] @ GHC.Types.Char)) -}
f3091607603bc25aeebe7aadcb4d3008
  unlockFile3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 8000#) -}
b4f08d55fb9f7401f582a1032f10560e
  unlockQuery ::
    GHC.Base.String -> Servant.Common.Req.ClientM GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (fName :: GHC.Base.String) ->
                 let {
                   m1 :: Servant.Client.Client
                           (Servant.API.Verbs.Verb
                              'Network.HTTP.Types.Method.GET
                              200
                              '[Servant.API.ContentTypes.JSON]
                              GHC.Types.Bool)
                   = Servant.Client.$w$cclientWithRoute1
                       @ *
                       @ "fileName"
                       @ [GHC.Types.Char]
                       @ (Servant.API.Verbs.Verb
                            'Network.HTTP.Types.Method.GET
                            200
                            '[Servant.API.ContentTypes.JSON]
                            GHC.Types.Bool)
                       Web.Internal.HttpApiData.$fToHttpApiData[]
                       ClientProxyApi.$sclient6
                         `cast`
                       (Sym (Servant.Client.N:HasClient[0]
                                 <*>_N
                                 <Servant.API.Verbs.Verb
                                    'Network.HTTP.Types.Method.GET
                                    200
                                    '[Servant.API.ContentTypes.JSON]
                                    GHC.Types.Bool>_N))
                       (Data.Proxy.Proxy
                          @ *
                          @ (Servant.API.Capture.Capture "fileName" [GHC.Types.Char]
                             Servant.API.Sub.:> Servant.API.Verbs.Verb
                                                  'Network.HTTP.Types.Method.GET
                                                  200
                                                  '[Servant.API.ContentTypes.JSON]
                                                  GHC.Types.Bool))
                       ClientProxyApi.unlock2
                       fName
                 } in
                 (\ (r1 :: Servant.Common.Req.ClientEnv)
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (m1
                          `cast`
                        (Trans
                             (Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                                       <Network.HTTP.Types.Method.StdMethod>_N
                                       <GHC.Types.Bool>_N
                                       <'Network.HTTP.Types.Method.GET>_N
                                       <'[Servant.API.ContentTypes.JSON]>_N
                                       <200>_N))
                             (Trans
                                  (Servant.Common.Req.N:ClientM[0] <GHC.Types.Bool>_N)
                                  (Control.Monad.Trans.Reader.N:ReaderT[0]
                                       <*>_N
                                       <Servant.Common.Req.ClientEnv>_R
                                       <Control.Monad.Trans.Except.ExceptT
                                          Servant.Common.Req.ServantError GHC.Types.IO>_R
                                       <GHC.Types.Bool>_N)))
                          r1)
                         `cast`
                       (Trans
                            (Control.Monad.Trans.Except.N:ExceptT[0]
                                 <Servant.Common.Req.ServantError>_N
                                 <GHC.Types.IO>_R
                                 <GHC.Types.Bool>_N)
                            (GHC.Types.N:IO[0]
                                 <Data.Either.Either
                                    Servant.Common.Req.ServantError GHC.Types.Bool>_R))
                         s of ds1 { (#,#) ipv ipv1 ->
                  case ipv1 of wild {
                    Data.Either.Left e1 -> ds1
                    Data.Either.Right x
                    -> Servant.Common.Req.$fApplicativeClientM5
                         @ GHC.Types.Bool
                         x
                         r1
                         ipv } })
                   `cast`
                 (Trans
                      (<Servant.Common.Req.ClientEnv>_R
                       ->_R Trans
                                (Sym (GHC.Types.N:IO[0]
                                          <Data.Either.Either
                                             Servant.Common.Req.ServantError GHC.Types.Bool>_R))
                                (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                          <Servant.Common.Req.ServantError>_N
                                          <GHC.Types.IO>_R
                                          <GHC.Types.Bool>_N)))
                      (Trans
                           (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                     <*>_N
                                     <Servant.Common.Req.ClientEnv>_R
                                     <Control.Monad.Trans.Except.ExceptT
                                        Servant.Common.Req.ServantError GHC.Types.IO>_R
                                     <GHC.Types.Bool>_N))
                           (Sym (Servant.Common.Req.N:ClientM[0]) <GHC.Types.Bool>_N)))) -}
5350a3490565cdc74b9712d112c60c1f
  uploadFile ::
    CommonResources.User
    -> LRUCache.Handle GHC.Base.String GHC.Base.String
    -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U(U,U,U,U)><L,U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                ClientProxyApi.uploadFile1
                  `cast`
                (<CommonResources.User>_R
                 ->_R <LRUCache.Handle GHC.Base.String GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
64c6ba40effa0b8acb8696772811e019
  uploadFile1 ::
    CommonResources.User
    -> LRUCache.Handle GHC.Base.String GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U(U,U,U,U)><L,U(U)><S,U> -}
"SPEC/ClientProxyApi $fMimeUnrenderTYPEJSONa @ Bool" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.Class.FromJSON
                                                                                      GHC.Types.Bool)
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa @ GHC.Types.Bool
                                                   $dFromJSON
  = ClientProxyApi.$s$fMimeUnrenderTYPEJSONa6
"SPEC/ClientProxyApi $fMimeUnrenderTYPEJSONa @ File" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.Class.FromJSON
                                                                                      CommonResources.File)
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa @ CommonResources.File
                                                   $dFromJSON
  = ClientProxyApi.$s$fMimeUnrenderTYPEJSONa9
"SPEC/ClientProxyApi $fMimeUnrenderTYPEJSONa @ Response" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.Class.FromJSON
                                                                                          CommonResources.Response)
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa @ CommonResources.Response
                                                   $dFromJSON
  = ClientProxyApi.$s$fMimeUnrenderTYPEJSONa8
"SPEC/ClientProxyApi $fMimeUnrenderTYPEJSONa @ User" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.Class.FromJSON
                                                                                      CommonResources.User)
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa @ CommonResources.User
                                                   $dFromJSON
  = ClientProxyApi.$s$fMimeUnrenderTYPEJSONa7
"SPEC/ClientProxyApi $fMimeUnrenderTYPEJSONa @ [String]" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.Class.FromJSON
                                                                                          [GHC.Base.String])
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa @ [GHC.Base.String]
                                                   $dFromJSON
  = ClientProxyApi.$s$fMimeUnrenderTYPEJSONa
"SPEC/ClientProxyApi $fMimeUnrenderTYPEJSONa_$cmimeUnrender @ Bool" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.Class.FromJSON
                                                                                                     GHC.Types.Bool)
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cmimeUnrender @ GHC.Types.Bool
                                                                  $dFromJSON
  = ClientProxyApi.$s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender1
"SPEC/ClientProxyApi $fMimeUnrenderTYPEJSONa_$cmimeUnrender @ File" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.Class.FromJSON
                                                                                                     CommonResources.File)
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cmimeUnrender @ CommonResources.File
                                                                  $dFromJSON
  = ClientProxyApi.$s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender4
"SPEC/ClientProxyApi $fMimeUnrenderTYPEJSONa_$cmimeUnrender @ Response" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.Class.FromJSON
                                                                                                         CommonResources.Response)
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cmimeUnrender @ CommonResources.Response
                                                                  $dFromJSON
  = ClientProxyApi.$s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender3
"SPEC/ClientProxyApi $fMimeUnrenderTYPEJSONa_$cmimeUnrender @ User" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.Class.FromJSON
                                                                                                     CommonResources.User)
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cmimeUnrender @ CommonResources.User
                                                                  $dFromJSON
  = ClientProxyApi.$s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender2
"SPEC/ClientProxyApi $fMimeUnrenderTYPEJSONa_$cmimeUnrender @ [String]" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.Class.FromJSON
                                                                                                         [GHC.Base.String])
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cmimeUnrender @ [GHC.Base.String]
                                                                  $dFromJSON
  = ClientProxyApi.$s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

